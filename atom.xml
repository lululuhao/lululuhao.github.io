<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Apologize</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-12T05:30:04.264Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>醉生梦死</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>L·H</title>
    <link href="http://yoursite.com/2019/09/24/L%C2%B7H/"/>
    <id>http://yoursite.com/2019/09/24/L·H/</id>
    <published>2019-09-24T10:18:00.000Z</published>
    <updated>2019-04-12T05:30:04.264Z</updated>
    
    <content type="html"><![CDATA[<p><strong>如果痴痴的等某日，终可等到一生中最爱,测试</strong></p><p>加图片方法</p><p>1.把图片名字放到source文件夹中，命名为xxx.png</p><p>2.文章中添加<img src="https://www.lh1.ink/img/xxx.png" alt="图片名字-任意"></p><p>3.hexo g</p><p>hexo d</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;如果痴痴的等某日，终可等到一生中最爱,测试&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;加图片方法&lt;/p&gt;
&lt;p&gt;1.把图片名字放到source文件夹中，命名为xxx.png&lt;/p&gt;
&lt;p&gt;2.文章中添加&lt;img src=&quot;https://www.lh1.ink/img
      
    
    </summary>
    
    
      <category term="L·H" scheme="http://yoursite.com/tags/L%C2%B7H/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix</title>
    <link href="http://yoursite.com/2019/03/22/zabbix%E5%AE%89%E8%A3%85%E4%B8%8E%E9%83%A8%E7%BD%B2/"/>
    <id>http://yoursite.com/2019/03/22/zabbix安装与部署/</id>
    <published>2019-03-22T09:39:02.010Z</published>
    <updated>2019-04-12T05:20:23.799Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Zabbix"><a href="#Zabbix" class="headerlink" title="Zabbix"></a>Zabbix</h1><p><img src="https://www.lh1.ink/img/5C1553322997443.png" alt="1553322997443"></p><a id="more"></a><h4 id="安装操作系统："><a href="#安装操作系统：" class="headerlink" title="安装操作系统："></a>安装操作系统：</h4><p>最小化安装操作系统:<br>安装以下常用依赖包：</p><p>yum install vim iotop bc gcc gcc-c++ glibc g-develpcrepcre-developensslopenssl-libc-devel pcre pcre-devel openssl openssl-devel zip unzip zlib-develnet-tools lrzsz tree ntpdate telnet lsof tcpdump wget libevent libevent-devel -y</p><h4 id="安装数据库数据库"><a href="#安装数据库数据库" class="headerlink" title="安装数据库数据库"></a>安装数据库数据库</h4><p>安装ZabbixServer端与数据库<br>使用脚本自动安装数据库：</p><p>ln-sv/var/lib/mysql/mysql.sock/tmp/mysql.sock</p><p>max_connections=10000 #my.cnf   配置文件更改最大链接数</p><pre><code>1.安装Zabbix server安装依赖包：yum install gcc libxml2-devel net-snmp net-snmp-devel curl curl-devel php php-bcmath php-mbstring mariadb mariadb-</code></pre><p>devel –y</p><pre><code>准备数据库：[root@zabbix-web1 ~]# mysqlmysql&gt; create database zabbix character set utf8 collate utf8_bin;Query OK, 1 row affected (0.00 sec)mysql&gt; grant all privileges on zabbix.* to zabbix@&quot;identified by &apos;123456&apos;;Query OK, 0 rows affected (0.00 sec)编译安装:[root@zabbix-server ~]# cd /usr/local/src/[root@zabbix-server src]# zabbix-4.0.1.tar.gz[root@zabbix-server zabbix-4.0.1]# useradd zabbix -s /sbin/nologin# ./configure --prefix=/usr/local/zabbix --enable-server --enable-agent --with-mysql --with-net-snmp --with-libcurl --with-</code></pre><p>libxml2 –enable-java<br>​    # make &amp;&amp; make install<br>​        导入数据库：<br>​    #先导入此文件，如果做zabbix代理服务器，则只导入此文件即可<br>​    mysql -uzabbix -p123456 -h192.168.15.203  zabbix &lt; database/mysql/schema.sql<br>​    mysql -uzabbix -p123456 -h192.168.15.203 zabbix &lt;   database/mysql/images.sql<br>​    mysql -uzabbix -p123456 -h192.168.15.203 zabbix &lt; database/mysql/data.sql<br>​    复制启动脚本：<br>​    cp /usr/local/src/zabbix-4.0.1/misc/init.d/fedora/core/zabbix_server /etc/init.d/<br>​    cp /usr/local/src/zabbix-4.0.1/misc/init.d/fedora/core/zabbix_agentd /etc/init.d/<br>​    更改启动脚本：<br>​    vim /etc/init.d/zabbix_server<br>​    vim /etc/init.d/zabbix_agent<br>​    21    # Zabbix-Directory<br>​    22    BASEDIR=/usr/local/zabbix<br>​    编辑zabbix_server.con配置文件：<br>​    #mkdir /var/log/zabbix &amp;&amp; chown zabbix.zabbix /var/log/zabbix –R<br>​    [root@zabbix-server ~]# grep “^[a-Z]” /usr/local/zabbix/etc/zabbix_server.conf<br>​    LogFile=/var/log/zabbix/zabbix_server.log<br>​    DBHost=192.168.10.103<br>​    DBName=zabbix<br>​    DBUser=zabbix<br>​    DBPassword=123456<br>​    DBPort=3306<br>​    Timeout=30<br>​    LogSlowQueries=3000</p><p>安装zabbix<br>​    配置web界面：<br>​    安装httpd：<br>​    #yum install httpd -y<br>​    #mkdir /var/www/html/zabbix<br>​    #cp -a /usr/local/src/zabbix-4.0.1/frontends/php/* /var/www/html/zabbix<br>​    # systemctl restart httpd 访问web</p><pre><code>解决报错：yum install php-gettext php-session php-ctype php-xmlreader php-xmlwriter php-xml php-net-socket php-</code></pre><p>gd php-mysql</p><pre><code>如下更改vim /etc/php.ini：post_max_size = 8M 改为 post_max_size = 16Mmax_execution_time = 30 改为 max_execution_time = 300max_input_time = 60 改为 max_input_time = 300;date.timezone =    改 为 date.timezone = date.timezone = Asia/Shanghai重启http再次访问web# systemctl restart httpd</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Zabbix&quot;&gt;&lt;a href=&quot;#Zabbix&quot; class=&quot;headerlink&quot; title=&quot;Zabbix&quot;&gt;&lt;/a&gt;Zabbix&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://www.lh1.ink/img/5C1553322997443.png&quot; alt=&quot;1553322997443&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="自动化运维" scheme="http://yoursite.com/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="运维，数据库，编程" scheme="http://yoursite.com/tags/%E8%BF%90%E7%BB%B4%EF%BC%8C%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%8C%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>mysql</title>
    <link href="http://yoursite.com/2018/12/09/mysql/"/>
    <id>http://yoursite.com/2018/12/09/mysql/</id>
    <published>2018-12-09T05:43:48.000Z</published>
    <updated>2018-12-10T02:37:14.716Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>装centos系统后必须要做的几件事！！！</title>
    <link href="http://yoursite.com/2018/12/03/%E6%96%B0%E8%A3%85%E7%B3%BB%E7%BB%9F%E5%90%8E%E5%BF%85%E9%A1%BB%E5%81%9A%E7%9A%84%E5%87%A0%E4%BB%B6%E4%BA%8B/"/>
    <id>http://yoursite.com/2018/12/03/新装系统后必须做的几件事/</id>
    <published>2018-12-03T10:18:18.000Z</published>
    <updated>2019-03-12T12:17:38.471Z</updated>
    
    <content type="html"><![CDATA[<p>定义习惯用的别名<br><a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim .bashrc</span><br><span class="line"><span class="built_in">alias</span> rm=<span class="string">'rm -i'</span></span><br><span class="line"><span class="built_in">alias</span> cp=<span class="string">'cp -i'</span></span><br><span class="line"><span class="built_in">alias</span> mv=<span class="string">'mv -i'</span></span><br><span class="line"><span class="built_in">alias</span> yy=<span class="string">'yum install -y'</span></span><br></pre></td></tr></table></figure></p><p>修改网卡信息,配置固定ip<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens33</span><br><span class="line">PREFIX=24</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=192.168.245.7</span><br><span class="line">NAME=ens33</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br></pre></td></tr></table></figure></p><p>修改默认颜色<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile.d/env.sh</span><br><span class="line">PS1=<span class="string">"\[\e[1;32m\][\u@\h \W]\\$\[\e[0m\]"</span></span><br></pre></td></tr></table></figure></p><p>修改欢迎界面<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/motd   <span class="comment">#打开配置文件,复制下面的字符</span></span><br><span class="line"></span><br><span class="line">                                                     /*[*/<span class="comment">#include&lt;stdio.h&gt;//</span></span><br><span class="line">                         <span class="comment">#include&lt;stdlib.h&gt;//]++++[-&gt;++[-&gt;+&gt;++++&lt;&lt;]&lt;][(c)2013]</span></span><br><span class="line">                        <span class="comment">#ifndef                                           e//[o</span></span><br><span class="line">                       <span class="comment">#include&lt;string.h&gt;//]![misaka.c,size=3808,crc=d0ec3b36][</span></span><br><span class="line">                      <span class="comment">#define e                                           0x1//</span></span><br><span class="line">                     typedef struct&#123;int d,b,o,P;char*q,*p;&#125;f;int p,q,d,b,_=0//|</span><br><span class="line">                  <span class="comment">#include __FILE__//]&gt;&gt;&gt;[-&gt;+&gt;++&lt;&lt;]&lt;[-&lt;&lt;+&gt;&gt;&gt;++&lt;]&gt;&gt;+MISAKA*IMOUTO</span></span><br><span class="line">                <span class="comment">#undef e//[-&gt;[-&lt;&lt;+&lt;+&lt;+&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;++[-&gt;&gt;+&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;]&gt;+&gt;+++&gt;+++[&gt;]]b</span></span><br><span class="line">             <span class="comment">#define e(c)/**/if((_!=__LINE__?(_=__LINE__):0))&#123;c;&#125;//[20002,+[-.+]</span></span><br><span class="line">            ,O,i=0,Q=sizeof(f);static f*P;static FILE*t;static const char*o[]=&#123;//</span><br><span class="line">          <span class="string">"\n\40\"8oCan\40not\40open %s\n\0aaFbfeccdeaEbgecbbcda6bcedd#e(bbed<span class="variable">$bbd</span>"</span>,</span><br><span class="line">        <span class="string">"a6bgcdbbccd#ead<span class="variable">$c</span>%bcdea7bccde*b<span class="variable">$eebbdda9bsdbeccdbbecdcbbcceed</span>#eaa&amp;bae<span class="variable">$cbe</span>"</span>,</span><br><span class="line">       <span class="string">"e&amp;cbdd<span class="variable">$eldbdeedbbdede</span>)bdcdea&amp;bbde1bedbbcc&amp;b#ccdee&amp;bdcdea'bbcd)e'bad(bae&amp;bccd"</span>,</span><br><span class="line">      <span class="string">"e&amp;bbda1bdcdee<span class="variable">$bbce</span>#b<span class="variable">$c</span>&amp;bdedcd%ecdca4bhcdeebbcd#e<span class="variable">$b</span>#ecdcc<span class="variable">$bccda7bbcc</span>#e#d%c*bbda"</span>,</span><br><span class="line">     <span class="string">"&gt;bad/bbda"</span>&#125;;static int <span class="function"><span class="title">S</span></span>()&#123;<span class="built_in">return</span>(o[p][q]);&#125;static/**/int/**/Z=0  ;void/**/z(int//</span><br><span class="line">    l)&#123;<span class="keyword">if</span>(/**/Z<span class="_">-l</span>)&#123;Z=l;q++;<span class="keyword">if</span>(p&lt;b*5&amp;&amp;!S())&#123;p+=b;q=0;&#125;&#125;&#125;int main(int I,    /**/char**l)&#123;//</span><br><span class="line">   d=sizeof(f*);<span class="keyword">if</span>(1&lt;(O=_))&#123;b=((sizeof(o)/sizeof(char*))-1)/4;q=22; p=     0;<span class="keyword">while</span>(p&lt;b*5)&#123;</span><br><span class="line">  /*&lt;*/<span class="keyword">if</span>(Z-1)&#123;d=S()&gt;96;i=S()-(d?96:32) ;q++;<span class="keyword">if</span>(p&lt;b*5&amp;&amp;!S())&#123;p+=b;  q=      0;&#125;Z=1;&#125;/*[[*/</span><br><span class="line">  <span class="keyword">while</span>(i)&#123;_=o[0][S()-97];I=_-10?b:1;   <span class="keyword">for</span>( ;I--;)putchar(_ );<span class="keyword">if</span>   (!      --i||d)z(~i );&#125;</span><br><span class="line"> <span class="keyword">if</span>(p==b*5&amp;&amp;O)&#123;p-=b;O--;&#125;&#125;<span class="built_in">return</span> 0U;   &#125;<span class="keyword">if</span>(! (P=( f*)calloc /*]*/  (Q        ,I)))<span class="built_in">return</span> 1;</span><br><span class="line"> &#123;;&#125;<span class="keyword">for</span>(_=p=1;p&lt;I;p++)&#123;e(q=1);<span class="keyword">while</span>    (q&lt;   p&amp;&amp;  strcmp(  l[p     ]         ,l[(q)]))++  q;</span><br><span class="line"> t=stdin;<span class="keyword">if</span>(q&lt;p)&#123;(void)memcpy/* <span class="string">"      */    (&amp;P  [p],&amp;P   [q     ]          ,Q);continue ;&#125;</span></span><br><span class="line"><span class="string">if(strcmp(l[p],"</span>-<span class="string">"))&#123;t=fopen(l         [     p]   ,"</span>rb<span class="string">"   )                  ;if(!t )&#123;&#123;;&#125;  ;</span></span><br><span class="line"><span class="string">printf(05+*o,l[p ]);return+1;                      &#123;;&#125;                       &#125;&#125;_=b= 1&lt;&lt;16   ;</span></span><br><span class="line"><span class="string">*&amp;O=5;do&#123;if(!(P[p].q=realloc   (P[p].q,(P[p].P     +=       b)+1)))&#123;return   01;&#125;O   &amp;=72   /</span></span><br><span class="line"><span class="string">6/*][*/;P[p].o+=d=fread(P[p]      .q       +P[     p           ].       o,  1,b,t)   ;&#125;//</span></span><br><span class="line"><span class="string"> while(d==b)      ;P [p].q[       P[       p]                  .o       ]=  012;d    =0;</span></span><br><span class="line"><span class="string"> e(fclose(t        )  );P         [p]      .p                  =P[      p]  .q;if    (O)</span></span><br><span class="line"><span class="string"> &#123;for(;d&lt;P[            p]          .o     ;d=                   q+     1)    &#123;q=     d;</span></span><br><span class="line"><span class="string">  while(q&lt;P[                        p].o&amp;&amp;P[                    p].q[q]-     10     )&#123;</span></span><br><span class="line"><span class="string">  q++;&#125;b=q-d;                         _=P                         [p].        d     ;</span></span><br><span class="line"><span class="string">  if(b&gt;_)&#123;/*]b                                                                */</span></span><br><span class="line"><span class="string">   P[p].d=b;&#125;&#123;;                                                                &#125;</span></span><br><span class="line"><span class="string">   #undef/*pqdz'.*/  e//                                                      ;</span></span><br><span class="line"><span class="string">   #define/*s8qdb]*/e/**/0                                                   //</span></span><br><span class="line"><span class="string">   //&lt;&lt;.&lt;&lt;.----.&gt;.&lt;&lt;.&gt;++.++&lt;                                              .[&gt;]</span></span><br><span class="line"><span class="string">   /*P[*/P[p].b++;continue;&#125;&#125;&#125;t=                                       stdout;</span></span><br><span class="line"><span class="string">  for (p=1;p&lt;I;p++)&#123;/**/if(P[p].b&gt;i                               )&#123;i=P[p].b;&#125;&#125;</span></span><br><span class="line"><span class="string"> if  (O)&#123;for(p=0;p&lt;i;p++)&#123;q=0;/*[*/while(I               &gt;++q)&#123;_=P[q].p-P[q ].q;</span></span><br><span class="line"><span class="string">b=   0;if(_&lt;P[q ].o)&#123;while(012-*P[q].p)     &#123;putchar(*(P[q].p++));b++;&#125;P[q]. p++;</span></span><br><span class="line"><span class="string">&#125;   ;while (P[  q].d&gt;b++)putchar(040);&#125;             putchar(10);&#125;return 0;&#125;p   =1;</span></span><br><span class="line"><span class="string">   for(;   p&lt;I   ;p++)fwrite(P[p] .q,P[              p].o,1,t);return 0 ;&#125;//</span></span><br><span class="line"><span class="string">  #/*]     ]&lt;.    [-]&lt;[-]&lt;[- ]&lt;[    -]&lt;               [-  ]&lt;;*/elif  e    //b</span></span><br><span class="line"><span class="string"> |(1        &lt;&lt;     ( __LINE__        /*               &gt;&gt;   `*//45))  |     01U</span></span><br><span class="line"><span class="string">             #                       /*               */     endif            //</span></span><br></pre></td></tr></table></figure></p><p>修改vim编辑器提示信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/vimrc</span><br><span class="line">hi comment ctermfg=6  <span class="comment">#注释变为淡蓝色</span></span><br><span class="line"><span class="built_in">set</span> nu   <span class="comment">#vim编辑器里出现行号</span></span><br><span class="line">syntax on  <span class="comment">#语法高亮</span></span><br><span class="line"><span class="built_in">set</span> ignorecase        <span class="comment">#搜索模式里忽略大小写</span></span><br><span class="line"></span><br><span class="line">vim .vimrc   <span class="comment">#优先生效</span></span><br><span class="line"><span class="built_in">set</span> ignorecase                                                                                                                                                 </span><br><span class="line"><span class="built_in">set</span> cursorline   <span class="comment">#设置下划线</span></span><br><span class="line"><span class="built_in">set</span> autoindent</span><br><span class="line">autocmd BufNewFile *.sh <span class="built_in">exec</span> <span class="string">":call SetTitle()"</span></span><br><span class="line">func SetTitle()</span><br><span class="line">        <span class="keyword">if</span> expand(<span class="string">"%:e"</span>) == <span class="string">'sh'</span></span><br><span class="line">        call setline(1,<span class="string">"#!/bin/bash"</span>)</span><br><span class="line">        call setline(2,<span class="string">"#"</span>)</span><br><span class="line">        call setline(3,<span class="string">"#********************************************************************"</span>)</span><br><span class="line">        call setline(4,<span class="string">"#Author:                LH"</span>)</span><br><span class="line">         call setline(5,<span class="string">"#QQ:                    501962149"</span>)</span><br><span class="line">        call setline(6,<span class="string">"#Date:                  "</span>.strftime(<span class="string">"%Y-%m-%d"</span>))</span><br><span class="line">       call setline(7,<span class="string">"#FileName：             "</span>.expand(<span class="string">"%"</span>))</span><br><span class="line">         call setline(8,<span class="string">"#URL:                   https://blog.csdn.net/weixin_43551152"</span>)</span><br><span class="line">         call setline(9,<span class="string">"#Description：          今晚打老虎"</span>)</span><br><span class="line">         call setline(10,<span class="string">"#Copyright (C):        "</span>.strftime(<span class="string">"%Y"</span>).<span class="string">" All rights reserved"</span>)</span><br><span class="line">        call setline(11,<span class="string">"#********************************************************************"</span>)</span><br><span class="line">        call setline(12,<span class="string">""</span>)</span><br><span class="line">        endif</span><br><span class="line"> endfunc</span><br><span class="line">autocmd BufNewFile * normal G</span><br></pre></td></tr></table></figure></p><p>指定yum源，base源和epel源<br>ctneos6    base源<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum install -y autofs      <span class="comment">#设置/misc/cd神奇目录自动挂载</span></span><br><span class="line">chkconfig autofs on    <span class="comment">#设置autofs服务开机启动</span></span><br><span class="line">vim /etc/yum.repos.d/Centos-6.repo   <span class="comment">#base源</span></span><br><span class="line">[base]</span><br><span class="line">name=CentOS- Base-cdrom                                                                                                                                        </span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=file:///misc/<span class="built_in">cd</span></span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure></p><p> ctneos6   epel源<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/yum.repos.d/epel.repo     <span class="comment">#epel源</span></span><br><span class="line"> [epel]</span><br><span class="line">name=Extra Packages <span class="keyword">for</span> Enterprise Linux 6 - <span class="variable">$basearch</span></span><br><span class="line">baseurl=https://mirrors.tuna.tsinghua.edu.cn/epel/6/<span class="variable">$basearch</span></span><br><span class="line"><span class="comment">#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-7&amp;arch=$basearch</span></span><br><span class="line">failovermethod=priority</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6</span><br></pre></td></tr></table></figure></p><p>ctneos7   base源<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum install -y autofs      <span class="comment">#设置/misc/cd神奇目录自动挂载</span></span><br><span class="line">systemctl <span class="built_in">enable</span> autofs       <span class="comment">#设置autofs服务开机启动</span></span><br><span class="line">vim /etc/yum.repos.d/Centos-7.repo  <span class="comment">#base源</span></span><br><span class="line">[base]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Base -sr0--</span><br><span class="line">failovermethod=priority</span><br><span class="line">baseurl=file:///data/cdrom</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure></p><p>ctneos7   epel源<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/yum.repos.d/epel.repo   <span class="comment">#epel源</span></span><br><span class="line">[epel]</span><br><span class="line">name=Extra Packages <span class="keyword">for</span> Enterprise Linux 7 - <span class="variable">$basearch</span></span><br><span class="line">baseurl=https://mirrors.tuna.tsinghua.edu.cn/epel/7/<span class="variable">$basearch</span></span><br><span class="line"><span class="comment">#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-7&amp;arch=$basearch</span></span><br><span class="line">failovermethod=priority</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7</span><br><span class="line">~</span><br></pre></td></tr></table></figure></p><p>修改ssh协议默认端口<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config  </span><br><span class="line"><span class="comment">#Port 22 </span></span><br><span class="line">Port 10086    <span class="comment">#  修改默认端口   </span></span><br><span class="line">systemctl restart sshd.service</span><br></pre></td></tr></table></figure></p><p>安装防火墙<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install firewalld</span><br><span class="line">systemctl start firewalld</span><br></pre></td></tr></table></figure></p><p>计划任务设置自动更新<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum -y install yum-cron    </span><br><span class="line">vim /etc/yum/yum-cron.conf</span><br><span class="line">apply_updates = yes   <span class="comment">#no改为yes</span></span><br><span class="line">systemctl start crond</span><br><span class="line">systemctl start yum-cron</span><br></pre></td></tr></table></figure></p><p>安装py3.6<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">yum install python36      </span><br><span class="line"><span class="built_in">cd</span> /usr/bin/      </span><br><span class="line">rm python       </span><br><span class="line">ln -s python3.6 python    </span><br><span class="line">将yum的解析器改为Python2.7</span><br><span class="line">vim /usr/bin/yum</span><br><span class="line"><span class="comment">#!/usr/bin/python2.7  #改第一行</span></span><br><span class="line">vim /usr/libexec/urlgrabber-ext-down</span><br><span class="line"><span class="comment">#!/usr/bin/python2.7  #改第一行</span></span><br><span class="line"> </span><br><span class="line">yum install python36-pip</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;定义习惯用的别名&lt;br&gt;
    
    </summary>
    
    
      <category term="L·H" scheme="http://yoursite.com/tags/L%C2%B7H/"/>
    
  </entry>
  
  <entry>
    <title>DevOps</title>
    <link href="http://yoursite.com/2018/11/11/DevOps%20%E4%B9%8B%E5%9F%BA%E4%BA%8EJenkins%E5%AE%9E%E7%8E%B0%E7%9A%84CI%E4%B8%8ECD/"/>
    <id>http://yoursite.com/2018/11/11/DevOps 之基于Jenkins实现的CI与CD/</id>
    <published>2018-11-11T10:18:18.000Z</published>
    <updated>2019-04-12T05:17:23.798Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DevOps-之基于Jenkins实现的CI与CD"><a href="#DevOps-之基于Jenkins实现的CI与CD" class="headerlink" title="DevOps 之基于Jenkins实现的CI与CD"></a>DevOps 之基于Jenkins实现的CI与CD</h1><p> <img src="https://www.lh1.ink/img/001.png" alt="1552469963552"></p><a id="more"></a><p>DevOps简介：</p><p>DevOps 是Development和Operations的组合，也就是开发和运维的简写。</p><p>DevOps 是针对企业中的研发人员、运维人员和测试人员的工作理念，是他们在应用开发、代码部署和质量测试等整条生命周期中协作和沟通的最佳实践，DevOps 强调整个组织的合作以及交付和基础设施变更的自动化、从而实现持续集成、持续部署和持续交付。</p><p>DevOps 四大平台：代码托管(gitlab/svn)、项目管理(jira)、运维平台(腾讯蓝鲸/开源平台)、持续交付(Jenkins/gitlab)</p><h2 id="1-1：什么是DevOps："><a href="#1-1：什么是DevOps：" class="headerlink" title="1.1：什么是DevOps："></a>1.1：什么是DevOps：</h2><p>​                                                  <img src="https://www.lh1.ink/img\001.png" alt="1552469963552"></p><h2 id="1-2：为什么要推广DevOps？"><a href="#1-2：为什么要推广DevOps？" class="headerlink" title="1.2：为什么要推广DevOps？"></a>1.2：为什么要推广DevOps？</h2><p>DevOps 强调团队协作、相互协助、持续发展，然而传统的模式是开发人员只顾开发程序，运维只负责基础环境管理和代码部署及监控等，其并不是为了一个共同的目标而共同实现最终的目的，而DevOps 则实现团队作战，即无论是开发、运维还是测试，都为了最终的代码发布、持续部署和业务稳定而付出各自的努力，从而实现产品设计、开发、测试和部署的良性循环，实现产品的最终持续交付。</p><p>   <img src="https://www.lh1.ink/img/002.png" alt="1552470014252"></p><h2 id="1-3：传统技术团队："><a href="#1-3：传统技术团队：" class="headerlink" title="1.3：传统技术团队："></a>1.3：传统技术团队：</h2><p> <img src="https://www.lh1.ink/img/003.png" alt="1552470031419"></p><h2 id="1-4：DevOps技术团队："><a href="#1-4：DevOps技术团队：" class="headerlink" title="1.4：DevOps技术团队："></a>1.4：DevOps技术团队：</h2><p>​        </p><p>​          戴明环          </p><p><img src="https://www.lh1.ink/img/004.png" alt="1552470031419"></p><h2 id="1-5：什么是持续集成-CI-Continuous-integration-："><a href="#1-5：什么是持续集成-CI-Continuous-integration-：" class="headerlink" title="1.5：什么是持续集成(CI-Continuous integration)："></a>1.5：什么是持续集成(CI-Continuous integration)：</h2><p>持续集成是指多名开发者在开发不同功能代码的过程当中，可以频繁的将代码行合并到一起并切相互不影响工作。</p><h2 id="1-6：什么是持续部署-CD-continuous-deployment-："><a href="#1-6：什么是持续部署-CD-continuous-deployment-：" class="headerlink" title="1.6：什么是持续部署(CD-continuous deployment)："></a>1.6：什么是持续部署(CD-continuous deployment)：</h2><p>是基于某种工具或平台实现代码自动化的构建、测试和部署到线上环境以实现交付高质量的产品,持续部署在某种程度上代表了一个开发团队的更新迭代速率。</p><h2 id="1-7：什么是持续交付-Continuous-Delivery-："><a href="#1-7：什么是持续交付-Continuous-Delivery-：" class="headerlink" title="1.7：什么是持续交付(Continuous Delivery)："></a>1.7：什么是持续交付(Continuous Delivery)：</h2><p>持续交付是在持续部署的基础之上，将产品交付到线上环境，因此持续交付是产品价值的一种交付，是产品价值的一种盈利的实现。</p><p><img src="https://www.lh1.ink/img/005.png" alt="1552738200584"></p><h2 id="1-8：常见的部署方式："><a href="#1-8：常见的部署方式：" class="headerlink" title="1.8：常见的部署方式："></a>1.8：常见的部署方式：</h2><p>开发自己上传–最原始的方案</p><p>开发给运维手动上传–运维自己手动部署</p><p>运维使用脚本复制–半自动化</p><p>结合web界面一键部署–自动化</p><h2 id="1-9：常见的持续集成开源工具："><a href="#1-9：常见的持续集成开源工具：" class="headerlink" title="1.9：常见的持续集成开源工具："></a>1.9：常见的持续集成开源工具：</h2><p>在公司的服务器安装某种程序，该程序用于按照特定格式和方式记录和保存公司多名开发人员不定期提交的源代码，且后期可以按照某种标记及方式对用户提交的数据进行还原。</p><h3 id="1-9-1：CVS-Concurrent-Version-System-："><a href="#1-9-1：CVS-Concurrent-Version-System-：" class="headerlink" title="1.9.1：CVS(Concurrent Version System)："></a>1.9.1：CVS(Concurrent Version System)：</h3><p>早期的集中式版本控制系统，现已基本淘汰</p><p>会出现数据提交后不完整的情况</p><h3 id="1-9-2：SVN-Subversion-–集中式版本控制系统"><a href="#1-9-2：SVN-Subversion-–集中式版本控制系统" class="headerlink" title="1.9.2：SVN(Subversion)–集中式版本控制系统"></a>1.9.2：SVN(Subversion)–集中式版本控制系统</h3><p>2000年开始开发，目标就是替代CVS集中式管理，依赖于网络，一台服务器集中管理目前依然有部分公司在使用。</p><h3 id="1-9-3：Gitlib—分布式版本控制系统"><a href="#1-9-3：Gitlib—分布式版本控制系统" class="headerlink" title="1.9.3：Gitlib—分布式版本控制系统"></a>1.9.3：Gitlib—分布式版本控制系统</h3><p>Linus在1991年创建了开源的Linux内核，从此Linux便不断快速发展，不过 Linux的壮大是离不开全世界的开发者的参与，这么多人在世界各地为Linux编写代码，那Linux内核的代码是如何管理的呢？事实是，在2002年以前，世界各地的志愿者把源代码文件通过diff的方式发给Linus，然后由Linus本人通过手工方式合并代码！你也许会想，为什么Linus不把Linux代码放到版本控制系统里呢？不是有CVS、SVN这些免费的版本控制系统吗？因为Linus坚定地反对CVS和SVN，这些集中式的版本控制系统不但速度慢，且必须联网才能使用，但是也有一些商用的版本控制系统，虽然比CVS、SVN好用，但那是付费的，和Linux的开源精神不符,不过，到了2002年，Linux系统已经发展了十年了，代码库之大让Linus很难继续通过手工方式管理了，社区的弟兄们也对这种方式表达了强烈不满，于是Linus选择了一个商业的版本控制系统BitKeeper，BitKeeper的东家BitMover公司出于人道主义精神，授权Linux社区免费使用这个版本控制系统,但是安定团结的大好局面在2005年就被打破了，原因是Linux社区牛人聚集，不免沾染了一些梁山好汉的江湖习气，开发Samba的Andrew试图破解BitKeeper的协议（这么干的其实也不只他一个），被BitMover公司发现了（监控工作做得不错！），于是BitMover公司怒了，要收回Linux社区的免费使用权,这时候其实Linus可以向BitMover公司道个歉，保证以后严格管教弟兄们，但这是不可能的，而且实际情况是Linus自己花了两周时间自己用C写了一个分布式版本控制系统，这就是Git！一个月之内，Linux内核的源码已经由Git管理了！牛是怎么定义的呢？大家可以体会一下,然后Git迅速成为最流行的分布式版本控制系统，尤其是2008年，GitHub网站上线了，它为开源项目免费提供Git存储，无数开源项目开始迁移至GitHub，包括jQuery，PHP，Ruby等等。</p><p>   <img src="https://www.lh1.ink/img/006.png" alt="1552470485535"></p><p>​        <img src="https://www.lh1.ink/img/5C1552470496064.png" alt="1552470496064"></p><h2 id="1-10：版本控制系统分类："><a href="#1-10：版本控制系统分类：" class="headerlink" title="1.10：版本控制系统分类："></a>1.10：版本控制系统分类：</h2><h3 id="1-10-1：集中式版本控制系统："><a href="#1-10-1：集中式版本控制系统：" class="headerlink" title="1.10.1：集中式版本控制系统："></a>1.10.1：集中式版本控制系统：</h3><p>任何的提交和回滚都依赖于连接服务器服务器是单点</p><p><img src="https://www.lh1.ink/img/5C1552471728487.png" alt="1552471728487"></p><h3 id="1-10-2：分布式版本控制系统："><a href="#1-10-2：分布式版本控制系统：" class="headerlink" title="1.10.2：分布式版本控制系统："></a>1.10.2：分布式版本控制系统：</h3><p>​                        </p><p>​              http/https/ssh/git              </p><p>Git在每个用户都有一个完整的服务器，然后在有一个中央服务器，用户可以先将代码提交到本地，没有网络也可以先提交到本地，然后在有网络的时候再提交到中央服务器，这样就大大方便了开发者，而相比CVS和SVN都是集中式的版本控制系统，工作的时候需要先从中央服务器获取最新的代码，改完之后需要提交，如果是一个比较大的文件则需要足够快的网络才能快速提交完成，而使用分布式的版本控制系统，每个用户都是一个完整的版本库，即使没有中央服务器也可以提交代码或者回滚，最终再把改好的代码提交至中央服务器进行合并即可。</p><p><img src="https://www.lh1.ink/img/5C1552471841495.png" alt="1552471841495"></p><h1 id="二：Gitlab部署与使用："><a href="#二：Gitlab部署与使用：" class="headerlink" title="二：Gitlab部署与使用："></a>二：Gitlab部署与使用：</h1><h2 id="2-1：下载并部署gitlab："><a href="#2-1：下载并部署gitlab：" class="headerlink" title="2.1：下载并部署gitlab："></a>2.1：下载并部署gitlab：</h2><h3 id="2-1-1：Ubuntu-系统环境准备："><a href="#2-1-1：Ubuntu-系统环境准备：" class="headerlink" title="2.1.1：Ubuntu 系统环境准备："></a>2.1.1：Ubuntu 系统环境准备：</h3><h4 id="2-1-1-1：配置ubuntu-远程连接："><a href="#2-1-1-1：配置ubuntu-远程连接：" class="headerlink" title="2.1.1.1：配置ubuntu 远程连接："></a>2.1.1.1：配置ubuntu 远程连接：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">jack@ubuntu:~$ sudo su - root</span><br><span class="line">[sudo] password <span class="keyword">for</span> jack:</span><br><span class="line">root@ubuntu:~<span class="comment"># passwd  </span></span><br><span class="line">Enter new UNIX password: </span><br><span class="line">Retype new UNIX password: </span><br><span class="line">passwd: password updated successfully</span><br><span class="line">root@ubuntu:~<span class="comment"># vim /etc/ssh/sshd_config</span></span><br></pre></td></tr></table></figure><p> <img src="https://www.lh1.ink/img/5C1552471871730.png" alt="1552471871730"></p><h4 id="2-1-1-2：配置ubuntu网卡和主机名："><a href="#2-1-1-2：配置ubuntu网卡和主机名：" class="headerlink" title="2.1.1.2：配置ubuntu网卡和主机名："></a>2.1.1.2：配置ubuntu网卡和主机名：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># cat  /etc/netplan/01-netcfg.yaml </span></span><br><span class="line"></span><br><span class="line">\<span class="comment"># This file describes the network interfaces available on your system</span></span><br><span class="line"></span><br><span class="line">\<span class="comment"># For more information, see netplan(5).</span></span><br><span class="line"></span><br><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: networkd</span><br><span class="line">  ethernets:</span><br><span class="line">    eth0:</span><br><span class="line">      dhcp4: no</span><br><span class="line">      addresses: [192.168.8.2/21]</span><br><span class="line">      gateway4: 192.168.15.254</span><br><span class="line">      nameservers:</span><br><span class="line">        addresses: [192.168.15.254]</span><br><span class="line">root@ubuntu:~<span class="comment"># cat /etc/hostname </span></span><br><span class="line">jenkins.example.com</span><br><span class="line">root@ubuntu:~<span class="comment"># reboot</span></span><br></pre></td></tr></table></figure><h4 id="2-1-1-3：配置ubuntu-仓库："><a href="#2-1-1-3：配置ubuntu-仓库：" class="headerlink" title="2.1.1.3：配置ubuntu 仓库："></a>2.1.1.3：配置ubuntu 仓库：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment">#vim  /etc/apt/sources.list</span></span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">root@jenkins:~<span class="comment"># apt  update</span></span><br><span class="line">root@jenkins:~<span class="comment"># apt install iproute2  ntpdate  tcpdump telnet traceroute nfs-kernel-server nfs-common  lrzsz tree  openssl libssl-dev libpcre3 libpcre3-dev zlib1g-dev ntpdate tcpdump telnet traceroute  gcc openssh-server lrzsz tree openssl libssl-dev libpcre3 libpcre3-dev zlib1g-dev ntpdate tcpdump telnet traceroute iotop unzip zip ipmitool</span></span><br></pre></td></tr></table></figure><h3 id="2-1-2：Centos-系统环境在准备："><a href="#2-1-2：Centos-系统环境在准备：" class="headerlink" title="2.1.2：Centos 系统环境在准备："></a>2.1.2：Centos 系统环境在准备：</h3><ul><li>1 gitlab-server    172.20.102.205</li><li>2 jenkins-server   172.20.102.222</li><li>3 tomcat-web1      172.20.102.228</li><li>4 tomcat-web2      172.20.102.240</li><li>5 keepalived+haproxy1         172.20.102.216</li><li>6 keepalived+haproxy2         172.20.102.253</li></ul><p>最小化服务器安装，配置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\<span class="comment"># yum install vim gcc gcc-c++ wget net-tools lrzsz iotop lsof iotop bash-completion -y`</span></span><br></pre></td></tr></table></figure><p># yum install curl policycoreutils openssh-server openssh-clients postfix -y<br># wget -O /etc/yum.repos.d/epel.repo <a href="http://mirrors.aliyun.com/repo/epel-7.repo">http://mirrors.aliyun.com/repo/epel-7.repo</a><br># systemctl disable firewalld<br># sed -i ‘/SELINUX/s/enforcing/disabled/‘ /etc/sysconfig/selinux<br># hostnamectl set-hostname gitlab.example.com<br># reboot<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">### 2.1.3：gitlab安装及使用：</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">安装包下载地址：https://packages.gitlab.com/gitlab/gitlab-ce   </span><br><span class="line">rpm包国内下载地址：https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/ </span><br><span class="line">本次安装版本为gitlab-ce-11.3.11-ce.0.el7.x86_64.rpm</span><br><span class="line"># wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/gitlab-ce-11.3.11-ce.0.el7.x86_64.rpm</span><br><span class="line"># rpm -ivh gitlab-ce-11.3.11-ce.0.el7.x86_64.rpm</span><br></pre></td></tr></table></figure></p><p> <img src="https://www.lh1.ink/img/5C1552472028289.png" alt="1552472028289"></p><h4 id="2-1-3-1：gitlab配置："><a href="#2-1-3-1：gitlab配置：" class="headerlink" title="2.1.3.1：gitlab配置："></a>2.1.3.1：gitlab配置：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@gitlab ~]<span class="comment">#grep "^[a-Z]" /etc/gitlab/gitlab.rb</span></span><br><span class="line">external_url <span class="string">'http://192.168.245.17'</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_enable'</span>] = <span class="literal">true</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_address'</span>] = <span class="string">"smtp.163.com"</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_port'</span>] = 25</span><br><span class="line">gitlab_rails[<span class="string">'smtp_user_name'</span>] = <span class="string">"htluhao@163.com"</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_password'</span>] = <span class="string">"luhao111"</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_domain'</span>] = <span class="string">"163.com"</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_authentication'</span>] = :login</span><br><span class="line">gitlab_rails[<span class="string">'smtp_enable_starttls_auto'</span>] = <span class="literal">true</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_tls'</span>] = <span class="literal">false</span></span><br><span class="line">gitlab_rails[<span class="string">'gitlab_email_from'</span>] = <span class="string">"htluhao@163.com"</span></span><br><span class="line">user[<span class="string">"git_user_email"</span>] = [htluhao@163.com</span><br></pre></td></tr></table></figure><h4 id="2-1-3-2：初始化服务："><a href="#2-1-3-2：初始化服务：" class="headerlink" title="2.1.3.2：初始化服务："></a>2.1.3.2：初始化服务：</h4><p>执行配置并启动服务：</p><p>`# gitlab-ctl  reconfigure #修改完配置文件要执行此操作`</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\<span class="comment"># gitlab-ctl  start</span></span><br><span class="line"></span><br><span class="line">\<span class="comment">#     gitlab-ctl  stop</span></span><br><span class="line"></span><br><span class="line">\<span class="comment"># gitlab-ctl  restar</span></span><br></pre></td></tr></table></figure><p><img src="https://www.lh1.ink/img/5C1552472104713.png" alt="1552472104713"></p><h4 id="2-1-3-3：验证gitlab启动完成："><a href="#2-1-3-3：验证gitlab启动完成：" class="headerlink" title="2.1.3.3：验证gitlab启动完成："></a>2.1.3.3：验证gitlab启动完成：</h4><p>   <img src="https://www.lh1.ink/img/5C1552472112782.png" alt="1552472112782"></p><h4 id="2-1-3-4：验证端口及状态："><a href="#2-1-3-4：验证端口及状态：" class="headerlink" title="2.1.3.4：验证端口及状态："></a>2.1.3.4：验证端口及状态：</h4><p>80端口是在初始化gitlib的时候启动的，因此如果之前的有程序占用会导致初始</p><p>化失败或无法访问！</p><p>lsof -i:80</p><p> <img src="https://www.lh1.ink/img\5C1552472121857.png" alt="1552472121857"></p><h4 id="2-1-3-5：登录gitlab-web界面："><a href="#2-1-3-5：登录gitlab-web界面：" class="headerlink" title="2.1.3.5：登录gitlab web界面："></a>2.1.3.5：登录gitlab web界面：</h4><p><a href="http://192.168.245.17/">http://192.168.245.17/</a></p><p>登录web页面并设置密码,最少8位：</p><p>   <img src="https://www.lh1.ink/img/5C1552472136817.png" alt="1552472136817"></p><h4 id="2-1-3-6：登录gitlab："><a href="#2-1-3-6：登录gitlab：" class="headerlink" title="2.1.3.6：登录gitlab："></a>2.1.3.6：登录gitlab：</h4><p>登录，默认用户为root：</p><p> <img src="https://www.lh1.ink/img/5C1552472153118.png" alt="1552472153118"></p><h4 id="2-1-3-7：默认首页："><a href="#2-1-3-7：默认首页：" class="headerlink" title="2.1.3.7：默认首页："></a>2.1.3.7：默认首页：</h4><p> <img src="https://www.lh1.ink/img/5C1552472164158.png" alt="1552472164158"></p><h4 id="2-1-3-8：关闭账号注册："><a href="#2-1-3-8：关闭账号注册：" class="headerlink" title="2.1.3.8：关闭账号注册："></a>2.1.3.8：关闭账号注册：</h4><p>默认情况下可以直接注册账号，因此一般都关闭次功能：</p><p> <img src="https://www.lh1.ink/img/5C1552472174867.png" alt="1552472174867"></p><p>取消账户注册功能之后点save</p><p>   <img src="https://www.lh1.ink/img/5C1552472184685.png" alt="1552472184685"></p><h4 id="2-1-3-9：验证是否还有注册选项："><a href="#2-1-3-9：验证是否还有注册选项：" class="headerlink" title="2.1.3.9：验证是否还有注册选项："></a>2.1.3.9：验证是否还有注册选项：</h4><p>   <img src="https://www.lh1.ink/img/5C1552472194997.png" alt="1552472194997"></p><h4 id="2-1-3-10：创建git账户："><a href="#2-1-3-10：创建git账户：" class="headerlink" title="2.1.3.10：创建git账户："></a>2.1.3.10：创建git账户：</h4><p> <img src="https://www.lh1.ink/img/5C1552472207852.png" alt="1552472207852"></p><h4 id="2-1-3-11：重新设置密码："><a href="#2-1-3-11：重新设置密码：" class="headerlink" title="2.1.3.11：重新设置密码："></a>2.1.3.11：重新设置密码：</h4><p>使用第一次使用新账号登录要设置密码：</p><p>​     </p><p> <img src="https://www.lh1.ink/img/5C1552472215518.png" alt="1552472215518"></p><p>通过邮件重置用户密码：</p><p>   <img src="https://www.lh1.ink/img/5C1552472226651.png" alt="1552472226651"></p><p>在收件箱打开邮件设置密码：</p><p>   <img src="https://www.lh1.ink/img/5C1552472238523.png" alt="1552472238523"></p><p>​<br> 设置密码：</p><p>   <img src="https://www.lh1.ink/img/5C1552472247536.png" alt="1552472247536"></p><p><img src="https://www.lh1.ink/img/5C1552472273557.png" alt="1552472273557"></p><p>或者管理员创建账号时指定密码</p><h4 id="2-1-3-12：创建组："><a href="#2-1-3-12：创建组：" class="headerlink" title="2.1.3.12：创建组："></a>2.1.3.12：创建组：</h4><p>使用管理员root创建组，一个组里面可以有多个项目分支，可以将开发添加到组里面进行设置权限，不同的组就是公司不同的开发项目或者服务模块，不同的组添加不同的开发即可实现对开发设置权限的管理。</p><p> <img src="https://www.lh1.ink/img/5C1552472288402.png" alt="1552472288402"></p><h4 id="2-1-3-13：使用管理员创建项目："><a href="#2-1-3-13：使用管理员创建项目：" class="headerlink" title="2.1.3.13：使用管理员创建项目："></a>2.1.3.13：使用管理员创建项目：</h4><p>   <img src="https://www.lh1.ink/img/5C1552472296901.png" alt="1552472296901"></p><p>使用管理员创建项目：</p><p>   <img src="https://www.lh1.ink/img/5C1552472307531.png" alt="1552472307531"></p><p>创建后的项目效果：</p><p>   <img src="https://www.lh1.ink/img/5C1552472318834.png" alt="1552472318834"></p><h4 id="2-1-3-14：将用户添加到组："><a href="#2-1-3-14：将用户添加到组：" class="headerlink" title="2.1.3.14：将用户添加到组："></a>2.1.3.14：将用户添加到组：</h4><p><a href="https://docs.gitlab.com/ee/user/permissions.html">https://docs.gitlab.com/ee/user/permissions.html</a>  (更多权限)</p><p> <img src="https://www.lh1.ink/img/5C1552472328177.png" alt="1552472328177"></p><p>2.1.3.15：创建一个测试页</p><p>   <img src="https://www.lh1.ink/img/5C1552472346885.png" alt="1552472346885"></p><p>添加一个页面：</p><p>   <img src="https://www.lh1.ink/img/5C1552472360149.png" alt="1552472360149"></p><p> <img src="https://www.lh1.ink/img/5C1552472367128.png" alt="1552472367128"></p><h4 id="2-1-3-15：git客户端测试clone项目："><a href="#2-1-3-15：git客户端测试clone项目：" class="headerlink" title="2.1.3.15：git客户端测试clone项目："></a>2.1.3.15：git客户端测试clone项目：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@gitlab ~]<span class="comment">#git clone http://192.168.245.17/test-service/test-project.git</span></span><br><span class="line"></span><br><span class="line">Cloning into <span class="string">'test-project'</span>...</span><br><span class="line"></span><br><span class="line">Username <span class="keyword">for</span> <span class="string">'http://192.168.245.17'</span>: luhao</span><br><span class="line"></span><br><span class="line">Password <span class="keyword">for</span> <span class="string">'http://luhao@192.168.245.17'</span>: </span><br><span class="line"></span><br><span class="line">remote: Enumerating objects: 3, <span class="keyword">done</span>.</span><br><span class="line"></span><br><span class="line">remote: Counting objects: 100% (3/3), <span class="keyword">done</span>.</span><br><span class="line"></span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0)</span><br><span class="line"></span><br><span class="line">Unpacking objects: 100% (3/3), <span class="keyword">done</span>.</span><br><span class="line"></span><br><span class="line">[root@gitlab ~]<span class="comment">#cat test-project/index.html</span></span><br></pre></td></tr></table></figure><p>编辑文件并测试提交：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@gitlab ~]<span class="comment">#cd test-project/`</span></span><br></pre></td></tr></table></figure><p>[root@gitlab test-project]#git config –global user.name “luhao”</p><p>[root@gitlab test-project]#git config –global user.email <a href="mailto:htluhao@163.com">htluhao@163.com</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">[root@gitlab test-project]#vim index.html </span><br><span class="line"></span><br><span class="line">&lt;h1&gt;123432432411&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;123432432411&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;123432432411&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;123432432411&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;123432432411&lt;/h1&gt;</span><br></pre></td></tr></table></figure></p><p>[root@gitlab test-project]#git add index.html </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@gitlab <span class="built_in">test</span>-project]<span class="comment">#git commit -m "v1"</span></span><br><span class="line"></span><br><span class="line">[master 5ccda6e] v1</span><br><span class="line"></span><br><span class="line"> 1 file changed, 5 insertions(+), 1 deletion(-)`</span><br></pre></td></tr></table></figure><p>   <img src="https://www.lh1.ink/img/5C1552472522711.png" alt="1552472522711"></p><h4 id="2-1-3-16-git-web端验证数据："><a href="#2-1-3-16-git-web端验证数据：" class="headerlink" title="2.1.3.16:git web端验证数据："></a>2.1.3.16:git web端验证数据：</h4><p><img src="https://www.lh1.ink/img/5C1552472512837.png" alt="1552472512837"></p><h4 id="2-1-3-17：git常用命令："><a href="#2-1-3-17：git常用命令：" class="headerlink" title="2.1.3.17：git常用命令："></a>2.1.3.17：git常用命令：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name “name“ <span class="comment">#设置全局用户名</span></span><br><span class="line">git config --global user.email [xxx@xx.com ](mailto:xxx@xx.com)<span class="comment">#设置全局邮箱</span></span><br><span class="line">git config --global –list <span class="comment">#列出用户全局设置</span></span><br><span class="line">git add index.html / . <span class="comment">#添加指定文件、目录或当前目录下所有数据到暂存区</span></span><br><span class="line">git commit -m “11“ <span class="comment">#提交文件到工作区</span></span><br><span class="line">git status <span class="comment">#查看工作区的状态</span></span><br><span class="line">git push <span class="comment">#提交代码到服务器</span></span><br><span class="line">git pull <span class="comment">#获取代码到本地</span></span><br><span class="line">git <span class="built_in">log</span> <span class="comment">#查看操作日志</span></span><br><span class="line">vim .gitignore <span class="comment">#定义忽略文件</span></span><br><span class="line">git reset --hard HEAD^^ <span class="comment">#git版本回滚， HEAD为当前版本，加一个^为上一个，^^为上上一个版本</span></span><br><span class="line">git reflog <span class="comment"># #获取每次提交的ID，可以使用--hard根据提交的ID进行版本回退</span></span><br><span class="line">git reset --hard 5ae4b06 <span class="comment">#回退到指定id的版本</span></span><br><span class="line">git branch <span class="comment">#查看当前所处的分支</span></span><br><span class="line">git checkout  -b develop <span class="comment">#创建并切换到一个新分支</span></span><br><span class="line">git checkout   develop <span class="comment">#切换分支</span></span><br></pre></td></tr></table></figure><h1 id="三：部署web服务器环境："><a href="#三：部署web服务器环境：" class="headerlink" title="三：部署web服务器环境："></a>三：部署web服务器环境：</h1><h4 id="3-1-部署tomcat环境"><a href="#3-1-部署tomcat环境" class="headerlink" title="3.1  部署tomcat环境"></a>3.1  部署tomcat环境</h4><p>各wenb服务器准备tomcat运行环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@tomcat-web1 /]<span class="comment"># useradd www -u 2000</span></span><br><span class="line">[root@tomcat-web1 /]<span class="comment">#  mkdir /apps &amp;&amp; cd /apps</span></span><br><span class="line">[root@tomcat-web1 apps]<span class="comment"># tar xvf jdk-8u192-linux-x64.tar.gz </span></span><br><span class="line">[root@tomcat-web1 /]<span class="comment">#  ln -sv /apps/jdk1.8.0_192/ /apps/jdk</span></span><br><span class="line">[root@tomcat-web1 /]<span class="comment">#  vim /etc/profile</span></span><br><span class="line"><span class="built_in">export</span> HISTTIMEFORMAT=<span class="string">"%F %T whoami "</span></span><br><span class="line"><span class="built_in">export</span> <span class="built_in">export</span> LANG=<span class="string">"en_US.utf-8"</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/apps/jdk</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/jre/lib/rt.jar:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line"></span><br><span class="line">[root@tomcat-web1 apps]<span class="comment"># ln -sv /apps/jdk1.8.0_192/ /apps/jdk</span></span><br><span class="line">‘/apps/jdk’ -&gt; ‘/apps/jdk1.8.0_192/’</span><br><span class="line">[root@tomcat-web1 apps]<span class="comment"># source /etc/profile</span></span><br><span class="line">[root@tomcat-web1 apps]<span class="comment"># java -version</span></span><br><span class="line"></span><br><span class="line">java version <span class="string">"1.8.0_192"</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_192-b12)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.192-b12, mixed mode)</span><br><span class="line">\<span class="comment"># tar xvf  apache-tomcat-8.5.37.tar.gz</span></span><br><span class="line">\<span class="comment"># ln -sv /apps/apache-tomcat-8.5.37 /apps/tomcat</span></span><br><span class="line">[root@tomcat-web2 apps]<span class="comment"># mkdir /data/tomcat_webdir /data/tomcat_appdir -pv</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim /apps/apache-tomcat-8.5.37/conf/server.xml</span><br><span class="line">#配置tomcat配置文件：</span><br><span class="line">appBase=&quot;/data/tomcat_webdir/&quot;    unpackWARs=&quot;false&quot; autoDeploy=&quot;false&quot;</span><br><span class="line">cd /data/tomcat_webdir/</span><br><span class="line">mkdir myapp</span><br><span class="line">vim myapp/index.html</span><br><span class="line">写入</span><br><span class="line">[root@tomcat-web1 ~]# cat /data/tomcat_webdir/myapp/index.html</span><br></pre></td></tr></table></figure><p>&lt;!DOCTYPE html&gt;</p><html lang="en"><br><head><meta name="generator" content="Hexo 3.8.0"><br>        <title>dsadasd</title><br></head><br><body><br><h1>tomcat1</h1><br><h1></h1><br></body><br></html><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cp /apps/tomcat/webapps/* /data/tomcat_webdir/ -r -a</span><br><span class="line">rz上传脚本 tomcat</span><br><span class="line">cp /root/tomcat /etc/init.d/</span><br><span class="line">chmod a+x /etc/init.d/tomcat </span><br><span class="line">useradd tomcat -u 2001</span><br><span class="line">passwd tomcat</span><br><span class="line">su - tomcat</span><br><span class="line">/etc/init.d/tomcat start</span><br></pre></td></tr></table></figure><p><img src="https://www.lh1.ink/img/5C1552635507551.png" alt="1552635507551"></p><p>打开172.20.102.228:8080/myapp/确认各web服务器访问正常：</p><p> <img src="https://www.lh1.ink/img/5C1552548720334.png" alt="1552548720334"></p><p>​<br> <img src="https://www.lh1.ink/img/5C1552548757681.png" alt="1552548757681"></p><h4 id="3-2-部署keepalived"><a href="#3-2-部署keepalived" class="headerlink" title="3.2 部署keepalived"></a>3.2 部署keepalived</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install libnfnetlink-devel libnfnetlink ipvsadm libnl libnl-devel libnl3 libnl3-devel lm_sensors-libs net-snmp-agent-libs net-snmp-libs open server openssh-clients openssl openssl-devel automake iproute</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#编译安装</span></span><br><span class="line">\<span class="comment"># cd keepalived-2.0.7 &amp;&amp; ./configure --prefix=/usr/local/keepalived --disable-fwmark</span></span><br><span class="line">\<span class="comment"># make &amp;&amp; amke install</span></span><br><span class="line">\<span class="comment"># # mkdir /usr/local/keepalived/etc/sysconfig –p &amp;&amp; cp keepalived/etc/init.d/keepalived.rh.init /usr/local/keepalived/etc/sysconfig/keepalived</span></span><br><span class="line">\<span class="comment"># cp keepalived/keepalived.service /usr/lib/systemd/system/</span></span><br><span class="line">\<span class="comment"># mkdir /usr/local/keepalived/sbin &amp;&amp; cp bin/keepalived /usr/local/keepalived/sbin/keepalived</span></span><br><span class="line">\<span class="comment"># mkdir /etc/keepalived</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#本次采用yum安装</span></span><br><span class="line">yum install keepalived -y</span><br><span class="line"></span><br><span class="line">haproxy1 上的keepalived为MASTER</span><br><span class="line">haproxy2 上的keepalived为BACKUP</span><br><span class="line">地址都为172.20.102.248</span><br><span class="line">做keepalived高可用，使用ifconfig可是两个keepalived存活性是否生效两台只允许有一个eth0:1，停掉一台，另一台开始服务</span><br><span class="line"></span><br><span class="line">\<span class="comment"># vim /etc/keepalived/keepalived.conf</span></span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 90</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        172.20.102.248 dev eth0 label eth0:1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@haproxy2 ~]<span class="comment"># systemctl restart keepalived</span></span><br><span class="line">[root@haproxy2 ~]<span class="comment"># systemctl enable keepalived</span></span><br></pre></td></tr></table></figure><p> haproxy2<img src="https://www.lh1.ink/img/5C1552628612457.png" alt="1552628612457"></p><h4 id="3-3部署haproxy："><a href="#3-3部署haproxy：" class="headerlink" title="3.3部署haproxy："></a>3.3部署haproxy：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">#编译安装</span><br><span class="line"># tar xvf haproxy-1.8.13.tar.gz</span><br><span class="line"># cd haproxy-1.8.13</span><br><span class="line"># make ARCH=x86_64 TARGET=linux2628 USE_PCRE=1 USE_OPENSSL=1 USE_ZLIB=1 USE_SYSTEMD=1 USE_CPU_AFFINITY=1 PREFIX=/usr/local/haproxy</span><br><span class="line"># make install PREFIX=/usr/local/haproxy</span><br><span class="line"># vim /usr/lib/systemd/system/haproxy.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=HAProxy Load Balancer</span><br><span class="line">After=syslog.target network.target</span><br><span class="line">[Service]</span><br><span class="line">#支持多配置文件读取，类似于从侧面是实现配置文件的include功能。</span><br><span class="line">ExecStartPre=/usr/sbin/haproxy -f /etc/haproxy/haproxy.cfg -f /etc/haproxy/conf -c -q</span><br><span class="line">ExecStart=/usr/sbin/haproxy -Ws -f /etc/haproxy/haproxy.cfg -f /etc/haproxy/conf -p /run/haproxy.pid</span><br><span class="line">ExecReload=/bin/kill -USR2 $MAINPID</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"># mkdir /etc/haproxy</span><br><span class="line">本次采用yum 安装</span><br><span class="line">yum install haproxy -y</span><br><span class="line">vim /etc/haproxy/haproxy.cfg</span><br><span class="line"></span><br><span class="line">global</span><br><span class="line">    # to have these messages end up in /var/log/haproxy.log you will</span><br><span class="line">    # need to:</span><br><span class="line">    #</span><br><span class="line">    # 1) configure syslog to accept network log events.  This is done</span><br><span class="line">    #    by adding the &apos;-r&apos; option to the SYSLOGD_OPTIONS in</span><br><span class="line">    #    /etc/sysconfig/syslog</span><br><span class="line">    #</span><br><span class="line">    # 2) configure local2 events to go to the /var/log/haproxy.log</span><br><span class="line">    #   file. A line like the following can be added to</span><br><span class="line">    #   /etc/sysconfig/syslog</span><br><span class="line">    #</span><br><span class="line">    #    local2.*                       /var/log/haproxy.log</span><br><span class="line">    #</span><br><span class="line">    log         127.0.0.1 local2</span><br><span class="line"></span><br><span class="line">    chroot      /var/lib/haproxy</span><br><span class="line">    pidfile     /var/run/haproxy.pid</span><br><span class="line">    maxconn     4000</span><br><span class="line">    user        haproxy</span><br><span class="line">    group       haproxy</span><br><span class="line">    daemon</span><br><span class="line"></span><br><span class="line">    # turn on stats unix socket</span><br><span class="line">    stats socket /var/lib/haproxy/stats</span><br><span class="line"></span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line"># common defaults that all the &apos;listen&apos; and &apos;backend&apos; sections will</span><br><span class="line"># use if not designated in their block</span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line">defaults</span><br><span class="line">    mode                    http</span><br><span class="line">    log                     global</span><br><span class="line">    option                  httplog</span><br><span class="line">    option                  dontlognull</span><br><span class="line">    option http-server-close</span><br><span class="line">    option forwardfor       except 127.0.0.0/8</span><br><span class="line">    option                  redispatch</span><br><span class="line">    retries                 3</span><br><span class="line">    timeout http-request    10s</span><br><span class="line">    timeout queue           1m</span><br><span class="line">    timeout connect         10s</span><br><span class="line">    timeout client          1m</span><br><span class="line">    timeout server          1m</span><br><span class="line">    timeout http-keep-alive 10s</span><br><span class="line">    timeout check           10s</span><br><span class="line">    maxconn                 3000</span><br><span class="line"></span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line"># main frontend which proxys to the backends</span><br><span class="line">#---------------------------------------------------------------------</span><br><span class="line">#此处需要app或者官网访问入口</span><br><span class="line">listen myapp</span><br><span class="line">    bind 172.20.102.248：80</span><br><span class="line">    balance     roundrobin</span><br><span class="line">    server  172.20.102.228 172.20.102.228:8080 check</span><br><span class="line">    server  172.20.102.216 172.20.102.240:8080 check </span><br><span class="line">    </span><br><span class="line">[root@haproxy2 ~]# systemctl restart haproxy</span><br><span class="line">[root@haproxy2 ~]# systemctl enable haproxy</span><br></pre></td></tr></table></figure><p><img src="https://www.lh1.ink/img/5C1552625864421.png" alt="1552625864421"></p><p>注释：</p><p>1 gitlab-server      172.20.102.205<br>2 jenkins-server   172.20.102.222<br>3 tomcat-web1      172.20.102.228<br>4 tomcat-web2      172.20.102.240<br>5 haproxy1             172.20.102.216<br>6 haproxy2             172.20.102.253 </p><h4 id="3-3-1-测试haproxy反向代理web服务器："><a href="#3-3-1-测试haproxy反向代理web服务器：" class="headerlink" title="3.3.1: 测试haproxy反向代理web服务器："></a>3.3.1: 测试haproxy反向代理web服务器：</h4><p>编辑本机hosts文件，将myapp.web.com解析到对应的IP负载IP：</p><p>C:\Windows\System32\drivers\etc\hosts</p><p>172.20.102.101 myapp.web.com</p><h4 id="3-3-2-记录HAProxy访问日志："><a href="#3-3-2-记录HAProxy访问日志：" class="headerlink" title="3.3.2: 记录HAProxy访问日志："></a>3.3.2: 记录HAProxy访问日志：</h4><p># vim /etc/rsyslog.conf：</p><p>14 # Provides UDP syslog reception</p><p>15 $ModLoad imudp #去掉注释</p><p>16 $UDPServerRun 514 #去掉注释</p><p>18 # Provides TCP syslog reception</p><p>19 $ModLoad imtcp #去掉注释</p><p>20 $InputTCPServerRun 514 #去掉注释</p><p>93 local3.* /var/log/haproxy.log</p><p># systemctl restart rsyslog</p><p>log 127.0.0.1 local3 info #global部分</p><p>listen web_port</p><p>bind 0.0.0.0:80</p><p>mode http</p><p>log global</p><p>option httplog</p><p>server 192.168.7.103 192.168.7.103:8080 check inter 3000 fall 2 rise 5</p><p>server 192.168.7.104 192.168.7.104:8080 check inter 3000 fall 2 rise 5</p><p>​<br> 重启rsyslog和haproxy服务，验证/var/log/haproxy.log可以记录日志：</p><h4 id="3-3-3-验证HAProxy统计页面："><a href="#3-3-3-验证HAProxy统计页面：" class="headerlink" title="3.3.3: 验证HAProxy统计页面："></a>3.3.3: 验证HAProxy统计页面：</h4><p><a href="http://myapp.web.com:9009/haproxy-status">http://myapp.web.com:9009/haproxy-status</a></p><p>​        </p><h4 id="3-3-4-验证haproxy代理web服务器："><a href="#3-3-4-验证haproxy代理web服务器：" class="headerlink" title="3.3.4.: 验证haproxy代理web服务器："></a>3.3.4.: 验证haproxy代理web服务器：</h4><p><a href="http://myapp.web.com/myapp/">http://myapp.web.com/myapp/</a></p><h1 id="四：Jenkins部署与基础配置："><a href="#四：Jenkins部署与基础配置：" class="headerlink" title="四：Jenkins部署与基础配置："></a>四：Jenkins部署与基础配置：</h1><h2 id="4-1：配置java环境并部署jenkins："><a href="#4-1：配置java环境并部署jenkins：" class="headerlink" title="4.1：配置java环境并部署jenkins："></a>4.1：配置java环境并部署jenkins：</h2><h3 id="4-1-1：java环境配置："><a href="#4-1-1：java环境配置：" class="headerlink" title="4.1.1：java环境配置："></a>4.1.1：java环境配置：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost src]# tar xvf jdk-8u192-linux-x64.tar.gz</span><br><span class="line"></span><br><span class="line">[root@localhost src]#ln -sv /usr/local/src/jdk1.8.0_192/ /usr/local/jdk</span><br><span class="line"></span><br><span class="line">[root@localhost src]# vim /etc/profile</span><br><span class="line"></span><br><span class="line">export JAVA_HOME=/usr/local/jdk</span><br><span class="line"></span><br><span class="line">export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH</span><br><span class="line"></span><br><span class="line">export CLASSPATH=.$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$JAVA_HOME/lib/tools.jar</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">[root@localhost src]#source /etc/profile</span><br><span class="line"></span><br><span class="line">[root@localhost src]#java -version</span><br><span class="line"></span><br><span class="line">java version &quot;1.8.0_192&quot;</span><br><span class="line"></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_192-b12)</span><br><span class="line"></span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.192-b12, mixed mode)</span><br></pre></td></tr></table></figure><h3 id="4-1-2：启动Jenkins"><a href="#4-1-2：启动Jenkins" class="headerlink" title="4.1.2：启动Jenkins"></a>4.1.2：启动Jenkins</h3><h4 id="4-1-2-1：通过jar包直接启动jenkins："><a href="#4-1-2-1：通过jar包直接启动jenkins：" class="headerlink" title="4.1.2.1：通过jar包直接启动jenkins："></a>4.1.2.1：通过jar包直接启动jenkins：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># java \</span><br><span class="line"></span><br><span class="line">-Dcom.sun.management.jmxremote \</span><br><span class="line"></span><br><span class="line">-Dcom.sun.management.jmxremote.port=12345 \</span><br><span class="line"></span><br><span class="line">-Dcom.sun.management.jmxremote.authenticate=false \</span><br><span class="line"></span><br><span class="line">-Dcom.sun.management.jmxremote.ssl=false \</span><br><span class="line"></span><br><span class="line">-Djava.rmi.server.hostname=&quot;192.168.245.27  &quot; \</span><br><span class="line"></span><br><span class="line">-jar jenkins-2.138.3.war &amp;</span><br><span class="line"></span><br><span class="line">此方法失败了，所以通过安装rpm包安装了</span><br></pre></td></tr></table></figure><h4 id="4-1-2-2：rpm包安装jenkins配置："><a href="#4-1-2-2：rpm包安装jenkins配置：" class="headerlink" title="4.1.2.2：rpm包安装jenkins配置："></a>4.1.2.2：rpm包安装jenkins配置：</h4><p>rz<br>rpm -ivh jenkins-2.138.3-1.1.noarch.rpm<br>grep -v “#” /etc/sysconfig/jenkins  | grep -v “^$”<br>vim /etc/sysconfig/jenkins </p><p>JENKINS_HOME=”/var/lib/jenkins”<br>JENKINS_JAVA_CMD=””<br>JENKINS_USER=”jenkins”<br>JENKINS_JAVA_OPTIONS=”-Djava.awt.headless=true”<br>JENKINS_PORT=”8080”<br>JENKINS_LISTEN_ADDRESS=””<br>JENKINS_HTTPS_PORT=””<br>JENKINS_HTTPS_KEYSTORE=””<br>JENKINS_HTTPS_KEYSTORE_PASSWORD=””<br>JENKINS_HTTPS_LISTEN_ADDRESS=””<br>JENKINS_DEBUG_LEVEL=”5”<br>JENKINS_ENABLE_ACCESS_LOG=”no”<br>JENKINS_HANDLER_MAX=”100”<br>JENKINS_HANDLER_IDLE=”20”<br>JENKINS_ARGS=””</p><p>systemctl restart jenkins</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@s1 ~]<span class="comment"># grep -v "#" /etc/sysconfig/jenkins  | grep -v "^$"</span></span><br><span class="line"></span><br><span class="line">JENKINS_HOME=<span class="string">"/var/lib/jenkins"</span></span><br><span class="line">JENKINS_JAVA_CMD=<span class="string">""</span></span><br><span class="line">JENKINS_USER=<span class="string">"root"</span></span><br><span class="line">JENKINS_JAVA_OPTIONS=<span class="string">"-Djava.awt.headless=true \</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote \</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.port=12345 \</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.authenticate=false \</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.ssl=false \</span></span><br><span class="line"><span class="string">-Djava.rmi.server.hostname="</span>192.168.245.27<span class="string">" </span></span><br><span class="line"><span class="string">"</span></span><br><span class="line">JENKINS_PORT=<span class="string">"8080"</span></span><br><span class="line">JENKINS_LISTEN_ADDRESS=<span class="string">""</span></span><br><span class="line">JENKINS_HTTPS_PORT=<span class="string">""</span></span><br><span class="line">JENKINS_HTTPS_KEYSTORE=<span class="string">""</span></span><br><span class="line">JENKINS_HTTPS_KEYSTORE_PASSWORD=<span class="string">""</span></span><br><span class="line">JENKINS_HTTPS_LISTEN_ADDRESS=<span class="string">""</span></span><br><span class="line">JENKINS_DEBUG_LEVEL=<span class="string">"5"</span></span><br><span class="line">JENKINS_ENABLE_ACCESS_LOG=<span class="string">"no"</span></span><br><span class="line">JENKINS_HANDLER_MAX=<span class="string">"100"</span></span><br><span class="line">JENKINS_HANDLER_IDLE=<span class="string">"20"</span></span><br><span class="line">JENKINS_ARGS=<span class="string">""</span></span><br></pre></td></tr></table></figure><h3 id="4-1-3-Jenkins-启动过程："><a href="#4-1-3-Jenkins-启动过程：" class="headerlink" title="4.1.3:Jenkins 启动过程："></a>4.1.3:Jenkins 启动过程：</h3><p>​                                          <img src="https://www.lh1.ink/img/5C1552642826794.png" alt="1552642826794">        </p><h3 id="4-1-4：访问jenkins-页面"><a href="#4-1-4：访问jenkins-页面" class="headerlink" title="4.1.4：访问jenkins 页面"></a>4.1.4：访问jenkins 页面</h3><p> <img src="https://www.lh1.ink/img/5C1552642838623.png" alt="1552642838623"></p><h3 id="4-1-5：选择安装jenkins插件："><a href="#4-1-5：选择安装jenkins插件：" class="headerlink" title="4.1.5：选择安装jenkins插件："></a>4.1.5：选择安装jenkins插件：</h3><p>​        </p><p> <img src="https://www.lh1.ink/img/5C1552642848919.png" alt="1552642848919"></p><h3 id="4-1-6：插件安装过程中："><a href="#4-1-6：插件安装过程中：" class="headerlink" title="4.1.6：插件安装过程中："></a>4.1.6：插件安装过程中：</h3><p>插件安装过程中。。，如果因为某种原因导致有有安装失败的插件，没有关系，可以后期再单独安装</p><p> <img src="https://www.lh1.ink/img/5C1552642861246.png" alt="1552642861246"></p><h3 id="4-1-7：创建jenkins管理员："><a href="#4-1-7：创建jenkins管理员：" class="headerlink" title="4.1.7：创建jenkins管理员："></a>4.1.7：创建jenkins管理员：</h3><p> <img src="https://www.lh1.ink/img/5C1552642970678.png" alt="1552642970678"></p><h3 id="4-1-8：配置jenkins-URL："><a href="#4-1-8：配置jenkins-URL：" class="headerlink" title="4.1.8：配置jenkins URL："></a>4.1.8：配置jenkins URL：</h3><p> <img src="https://www.lh1.ink/img/1552642902559.png" alt="1552642902559"></p><h3 id="4-1-9：配置完成并登陆jenkins："><a href="#4-1-9：配置完成并登陆jenkins：" class="headerlink" title="4.1.9：配置完成并登陆jenkins："></a>4.1.9：配置完成并登陆jenkins：</h3><p> <img src="https://www.lh1.ink/img/5C1552642983156.png" alt="1552642983156"></p><p> <img src="https://www.lh1.ink/img/5C1552642990899.png" alt="1552642990899"></p><h3 id="4-1-10：登陆jenkins界面："><a href="#4-1-10：登陆jenkins界面：" class="headerlink" title="4.1.10：登陆jenkins界面："></a>4.1.10：登陆jenkins界面：</h3><p>   <img src="https://www.lh1.ink/img/5C1552643006981.png" alt="1552643006981"></p><h3 id="4-1-11：jenkins插件管理及安装："><a href="#4-1-11：jenkins插件管理及安装：" class="headerlink" title="4.1.11：jenkins插件管理及安装："></a>4.1.11：jenkins插件管理及安装：</h3><h4 id="4-1-11-1：插件安装目录："><a href="#4-1-11-1：插件安装目录：" class="headerlink" title="4.1.11.1：插件安装目录："></a>4.1.11.1：插件安装目录：</h4><p>插件下载地址：<a href="http://updates.jenkins-ci.org/download/plugins/">http://updates.jenkins-ci.org/download/plugins/</a></p><p> <img src="https://www.lh1.ink/img/5C1552643017898.png" alt="1552643017898"></p><h4 id="4-1-11-2：安装插件："><a href="#4-1-11-2：安装插件：" class="headerlink" title="4.1.11.2：安装插件："></a>4.1.11.2：安装插件：</h4><p>搜索需要gitlab的插件并安装：</p><p>gitlab和Blue Ocean</p><p>   <img src="https://www.lh1.ink/img/5C1552643030371.png" alt="1552643030371"></p><p> <img src="https://www.lh1.ink/img/5C1552643037904.png" alt="1552643037904"></p><p> <img src="https://www.lh1.ink/img/5C1552643054619.png" alt="1552643054619"></p><h3 id="4-1-12：配置jenkins-权限管理："><a href="#4-1-12：配置jenkins-权限管理：" class="headerlink" title="4.1.12：配置jenkins 权限管理："></a>4.1.12：配置jenkins 权限管理：</h3><p>基于角色的权限管理，先创建角色和用户，给角色授权，然后把用户管理到角色。</p><h4 id="4-1-12-1：安装插件："><a href="#4-1-12-1：安装插件：" class="headerlink" title="4.1.12.1：安装插件："></a>4.1.12.1：安装插件：</h4><p> Role-based <img src="https://www.lh1.ink/img/5C1552643075784.png" alt="1552643075784"></p><h4 id="4-1-12-2：创建新用户："><a href="#4-1-12-2：创建新用户：" class="headerlink" title="4.1.12.2：创建新用户："></a>4.1.12.2：创建新用户：</h4><p>Jenkins—系统管理—管理用户：</p><p> <img src="https://www.lh1.ink/img/5C1552643101167.png" alt="1552643101167"></p><h4 id="4-1-12-3：更改认证方式："><a href="#4-1-12-3：更改认证方式：" class="headerlink" title="4.1.12.3：更改认证方式："></a>4.1.12.3：更改认证方式：</h4><p>Jenkins—系统管理—全局安全配置</p><p>默认创建的用户登录后可以做任何操作，取决于默认的认证授权方式。</p><p><img src="https://www.lh1.ink/img/5C1552643120269.png" alt="1552643120269"></p><p>  设置角色认证后，<strong>在进行角色授权之后才能退出浏览器，否则会导致账号登陆不上</strong><img src="https://www.lh1.ink/img/5C1552648275024.png" alt="1552648275024"></p><h4 id="4-1-12-4：创建角色："><a href="#4-1-12-4：创建角色：" class="headerlink" title="4.1.12.4：创建角色："></a>4.1.12.4：创建角色：</h4><p>Jenkins—系统管理–Manage and Assign Roles</p><p><img src="https://www.lh1.ink/img/5C1552647914080.png" alt="1552647914080"></p><h4 id="4-1-12-5：添加规则组："><a href="#4-1-12-5：添加规则组：" class="headerlink" title="4.1.12.5：添加规则组："></a>4.1.12.5：添加规则组：</h4><p>   <img src="https://www.lh1.ink/img/5C1552643144924.png" alt="1552643144924"></p><h4 id="4-1-12-6：对组分配权限："><a href="#4-1-12-6：对组分配权限：" class="headerlink" title="4.1.12.6：对组分配权限："></a>4.1.12.6：对组分配权限：</h4><p>   <img src="https://www.lh1.ink/img/5C1552643154495.png" alt="1552643154495"></p><h4 id="4-1-12-7：将用户关联到规则组："><a href="#4-1-12-7：将用户关联到规则组：" class="headerlink" title="4.1.12.7：将用户关联到规则组："></a>4.1.12.7：将用户关联到规则组：</h4><p><img src="https://www.lh1.ink/img/5C1552648051153.png" alt="1552648051153"></p><h4 id="4-1-12-8：测试普通用户登录："><a href="#4-1-12-8：测试普通用户登录：" class="headerlink" title="4.1.12.8：测试普通用户登录："></a>4.1.12.8：测试普通用户登录：</h4><p><img src="https://www.lh1.ink/img/5C1552648342809.png" alt="1552648342809"></p><p>登录成功之的界面，没有系统管理权限，只能执行被授权过的job且没有了管理员权限。</p><p> <img src="https://www.lh1.ink/img/5C1552643193611.png" alt="1552643193611"></p><h3 id="4-1-13：jenkins-邮箱配置："><a href="#4-1-13：jenkins-邮箱配置：" class="headerlink" title="4.1.13：jenkins 邮箱配置："></a>4.1.13：jenkins 邮箱配置：</h3><h4 id="4-1-13-1：生成QQ邮箱登录授权码："><a href="#4-1-13-1：生成QQ邮箱登录授权码：" class="headerlink" title="4.1.13.1：生成QQ邮箱登录授权码："></a>4.1.13.1：生成QQ邮箱登录授权码：</h4><p>   <img src="https://www.lh1.ink/img/5C1552643209319.png" alt="1552643209319"></p><h4 id="4-1-13-2：配置jenkins管理员邮箱："><a href="#4-1-13-2：配置jenkins管理员邮箱：" class="headerlink" title="4.1.13.2：配置jenkins管理员邮箱："></a>4.1.13.2：配置jenkins管理员邮箱：</h4><p>Jenkins—系统管理—系统设置：</p><p>   <img src="https://www.lh1.ink/img/5C1552643219014.png" alt="1552643219014"></p><h4 id="4-1-13-3：发件配置："><a href="#4-1-13-3：发件配置：" class="headerlink" title="4.1.13.3：发件配置："></a>4.1.13.3：发件配置：</h4><p>   <img src="https://www.lh1.ink/img/5C1552643230054.png" alt="1552643230054"></p><h4 id="4-1-13-4：测试发送邮件："><a href="#4-1-13-4：测试发送邮件：" class="headerlink" title="4.1.13.4：测试发送邮件："></a>4.1.13.4：测试发送邮件：</h4><p> <img src="https://www.lh1.ink/img/5C1552643240019.png" alt="1552643240019"></p><h2 id="4-2：基于ssh-key拉取代码："><a href="#4-2：基于ssh-key拉取代码：" class="headerlink" title="4.2：基于ssh key拉取代码："></a>4.2：基于ssh key拉取代码：</h2><h3 id="4-2-1：添加ssh-key："><a href="#4-2-1：添加ssh-key：" class="headerlink" title="4.2.1：添加ssh key："></a>4.2.1：添加ssh key：</h3><p> <img src="https://www.lh1.ink/img/5C1552643253854.png" alt="1552643253854"></p><p>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3niuTNTXCA4zoltRTu+qDMOyF0xglYFxIIZMolCH2+Ma3L4v/D72WascVBD4LrkJM3S6KTSLn4M4+7l+9fe5LaZu0WSD2Se2N0FVcPFsYOK5ZwPoWiL83R5T2bN4j69G7cAtHM5X5WOAuJs6ArSBSxsSnyeFnUFNw3rbmkCCt2TvrsmqTzEMA1PDQno/7wB3n8JfxjaKp5oHNPQrwN0p0lGuUMSxGSNjCEIiexxqpyrJ0DPShs+XximSOO7noWbZq2nMhsH7yWdwKN3qD00U52ACDijeAyKVa4ByQntDIPeCr8gdUZiT8rbfXtix2MhR2cCgZJAKYDQNAwltVVOCf <a href="mailto:root@jenkins.example.com">root@jenkins.example.com</a></p><h3 id="4-2-2：添加ssh-key："><a href="#4-2-2：添加ssh-key：" class="headerlink" title="4.2.2：添加ssh key："></a>4.2.2：添加ssh key：</h3><p>   <img src="https://www.lh1.ink/img/5C1552643289387.png" alt="1552643289387"></p><h3 id="4-2-3：创建ssh-key："><a href="#4-2-3：创建ssh-key：" class="headerlink" title="4.2.3：创建ssh key："></a>4.2.3：创建ssh key：</h3><p><strong>ssh key**</strong>只用于免认证获取代码**</p><p><strong>gitlab**</strong>和<strong><strong>jenkins</strong></strong>分别位于<strong> </strong>两个<strong> </strong>服务器**</p><p><strong>分别生成公钥私钥</strong></p><p><strong>ssh-keygen</strong> <strong>回车三次</strong></p><p><strong>cat /root/.ssh/id_rsa</strong></p><p><strong>cat /root/.ssh/id_rsa.pub</strong></p><p><strong>gitlab**</strong>网页添加<strong><strong>jenkins</strong></strong>服务器端生成的公钥<strong>**id_rsa.pub</strong></p><p><strong>jenkins**</strong>网页添加凭证要<strong><strong>jenkins</strong></strong>服务器端生成的私钥<strong>**id_rsa</strong></p><p>   <img src="https://www.lh1.ink/img/5C1552643308322.png" alt="1552643308322"></p><h3 id="4-2-4：测试ssh-key："><a href="#4-2-4：测试ssh-key：" class="headerlink" title="4.2.4：测试ssh key："></a>4.2.4：测试ssh key：</h3><p>测试可以不使用用户名密码后直接获取代码</p><p> <img src="https://www.lh1.ink/img/5C1552643338278.png" alt="1552643338278"></p><h2 id="4-3：配置jenkins自动拉取代码："><a href="#4-3：配置jenkins自动拉取代码：" class="headerlink" title="4.3：配置jenkins自动拉取代码："></a>4.3：配置jenkins自动拉取代码：</h2><h3 id="4-3-1：jenkins-服务器添加证书："><a href="#4-3-1：jenkins-服务器添加证书：" class="headerlink" title="4.3.1：jenkins 服务器添加证书："></a>4.3.1：jenkins 服务器添加证书：</h3><p>Jenkins-凭据-jenkins—全局凭据—添加凭据</p><p>   <img src="https://www.lh1.ink/img/5C1552643352409.png" alt="1552643352409"></p><h3 id="4-3-2：jenkins创建project："><a href="#4-3-2：jenkins创建project：" class="headerlink" title="4.3.2：jenkins创建project："></a>4.3.2：jenkins创建project：</h3><p><img src="https://www.lh1.ink/img/5C1552643361258.png" alt="1552643361258"></p><p>构建一个shell</p><p><img src="https://www.lh1.ink/img/5C1552649610425.png" alt="1552649610425"> </p><h3 id="4-3-3：配置git项目地址和用户："><a href="#4-3-3：配置git项目地址和用户：" class="headerlink" title="4.3.3：配置git项目地址和用户："></a>4.3.3：配置git项目地址和用户：</h3><p>添加完成的证书没有报错表示认证通过</p><p> <img src="https://www.lh1.ink/img/5C1552643372081.png" alt="1552643372081"></p><h3 id="4-3-4：测试构建项目："><a href="#4-3-4：测试构建项目：" class="headerlink" title="4.3.4：测试构建项目："></a>4.3.4：测试构建项目：</h3><h4 id="4-3-4-1：点击立即构建："><a href="#4-3-4-1：点击立即构建：" class="headerlink" title="4.3.4.1：点击立即构建："></a>4.3.4.1：点击立即构建：</h4><p> <img src="https://www.lh1.ink/img/5C1552643383906.png" alt="1552643383906"></p><h4 id="4-3-4-2：验证构建结果："><a href="#4-3-4-2：验证构建结果：" class="headerlink" title="4.3.4.2：验证构建结果："></a>4.3.4.2：验证构建结果：</h4><p> <img src="https://www.lh1.ink/img/5C1552643394758.png" alt="1552643394758"></p><h4 id="4-3-4-3：服务器验证数据："><a href="#4-3-4-3：服务器验证数据：" class="headerlink" title="4.3.4.3：服务器验证数据："></a>4.3.4.3：服务器验证数据：</h4><p> <img src="https://www.lh1.ink/img/5C1552643405100.png" alt="1552643405100"></p><h4 id="4-3-4-4：将代码部署至后端服务器："><a href="#4-3-4-4：将代码部署至后端服务器：" class="headerlink" title="4.3.4.4：将代码部署至后端服务器："></a>4.3.4.4：将代码部署至后端服务器：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> jenkins服务器先对后端tomcat服务器做基于tomcat的免密钥登陆</span><br><span class="line">ssh-copy-id -i /root/.ssh/id_rsa.pub tomcat@172.20.102.228</span><br><span class="line">ssh-copy-id -i /root/.ssh/id_rsa.pub tomcat@172.20.102.240</span><br></pre></td></tr></table></figure><p>将下列脚本写到Jenkins的web端的代码构建中</p><p>脚本内容：</p><p>###<br>git clone -b master <a href="mailto:git@172.20.102.205">git@172.20.102.205</a>:myapp/test-project.git<br>cd /var/lib/jenkins/workspace/demo1/test-project/<br>ssh <a href="mailto:tomcat@172.20.102.228">tomcat@172.20.102.228</a> “/etc/init.d/tomcat stop”<br>ssh <a href="mailto:tomcat@172.20.102.240">tomcat@172.20.102.240</a> “/etc/init.d/tomcat stop”<br>scp index.html  <a href="mailto:tomcat@172.20.102.228">tomcat@172.20.102.228</a>:/data/tomcat_webdir/myapp/<br>scp index.html  <a href="mailto:tomcat@172.20.102.240">tomcat@172.20.102.240</a>:/data/tomcat_webdir/myapp/<br>ssh <a href="mailto:tomcat@172.20.102.228">tomcat@172.20.102.228</a> “/etc/init.d/tomcat start”<br>ssh <a href="mailto:tomcat@172.20.102.240">tomcat@172.20.102.240</a> “/etc/init.d/tomcat start”</p><p> 构建之前</p><p><img src="https://www.lh1.ink/img/5C1552654945805.png" alt="1552654945805"></p><p>在gitlib上更新index.html文件并上传</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  255  2019-03-15 20:51:41 root vim index.html</span><br><span class="line">  256  2019-03-15 20:53:10 root git add index.html</span><br><span class="line">  257  2019-03-15 20:53:21 root git commit -m <span class="string">"v1"</span></span><br><span class="line">  258  2019-03-15 20:53:27 root git push</span><br><span class="line">  259  2019-03-15 20:54:01 root cat index.html </span><br><span class="line">  260  2019-03-15 20:54:53 root <span class="built_in">history</span> </span><br><span class="line">[root@gitlab-server <span class="built_in">test</span>-project]<span class="comment"># cat index.html</span></span><br></pre></td></tr></table></figure><p><img src="https://www.lh1.ink/img/5C1552654519301.png" alt="1552654519301"></p><p>上传完成后点击立即构建</p><p><img src="https://www.lh1.ink/img/5C1552654828341.png" alt="1552654828341"></p><p>刷新页面，可以看到jenkins已经从gitlab上拉取代码并传到了后端的tomcat服务器上</p><p><img src="https://www.lh1.ink/img/5C1552654976723.png" alt="1552654976723"></p><h2 id="4-3：pipline："><a href="#4-3：pipline：" class="headerlink" title="4.3：pipline："></a>4.3：pipline：</h2><p>官方介绍；<a href="https://jenkins.io/2.0/">https://jenkins.io/2.0/</a> </p><p>pipline是帮助Jenkins实现CI到CD转变的重要角色，是运行在jenkins 2.X版本的核心插件，简单来说Pipline就是一套运行于Jenkins上的工作流框架，将原本独立运行于单个或者多个节点的任务连接起来，实现单个任务难以完成的复杂发布流程，从而实现单个任务很难实现的复杂流程编排和任务可视化，Pipeline的实现方式是一套Groovy DSL，任何发布流程都可以表述为一段Groovy脚本。</p><h3 id="4-3-1：pipline优势："><a href="#4-3-1：pipline优势：" class="headerlink" title="4.3.1：pipline优势："></a>4.3.1：pipline优势：</h3><p>可持续性：jenkins的重启或者中断后不影响已经执行的Pipline Job</p><p>支持暂停：pipline可以选择停止并等待人工输入或批准后再继续执行。</p><p>可扩展：通过groovy的编程更容易的扩展插件。</p><p>并行执行：通过groovy脚本可以实现step，stage间的并行执行，和更复杂的相互依赖关系。</p><h3 id="4-3-2：pipline-语法："><a href="#4-3-2：pipline-语法：" class="headerlink" title="4.3.2：pipline 语法："></a>4.3.2：pipline 语法：</h3><p>Stage：阶段，一个pipline可以划分为若干个stage，每个stage都是一个操作，比如clone代码、代码编译、代码测试和代码部署，阶段是一个逻辑分组，可以跨多个node执行。</p><p>Node：节点，每个node都是一个jenkins节点，可以是jenkins  master也可以是jenkins  agent，node是执行step的具体服务器。</p><p>Step：步骤，step是jenkins pipline最基本的操作单元，从在服务器创建目录到构建容器镜像，由各类</p><p>Jenkins 插件提供实现，例如： sh “make”</p><h3 id="4-3-2：pipline-job测试："><a href="#4-3-2：pipline-job测试：" class="headerlink" title="4.3.2：pipline job测试："></a>4.3.2：pipline job测试：</h3><h4 id="4-3-2-1：创建pipline-job："><a href="#4-3-2-1：创建pipline-job：" class="headerlink" title="4.3.2.1：创建pipline job："></a>4.3.2.1：创建pipline job：</h4><h4 id="4-3-2-2：测试简单pipline-job运行："><a href="#4-3-2-2：测试简单pipline-job运行：" class="headerlink" title="4.3.2.2：测试简单pipline job运行："></a>4.3.2.2：测试简单pipline job运行：</h4><p>node {</p><p>​    stage(“clone 代码”){</p><p>​       echo “代码clone”</p><p>​    }</p><p>​    stage(“代码构建”){</p><p>​       echo “代码构建”</p><p>​    }</p><p>   stage(“代码测试”){</p><p>​       echo “代码测试”</p><p>   }</p><p>   stage(“代码部署”){</p><p>​     echo “代码部署”</p><p>   }</p><p>}</p><h4 id="4-3-2-3：执行pipline-job："><a href="#4-3-2-3：执行pipline-job：" class="headerlink" title="4.3.2.3：执行pipline job："></a>4.3.2.3：执行pipline job：</h4><h4 id="4-3-2-4：生成拉取代码的pipline脚本："><a href="#4-3-2-4：生成拉取代码的pipline脚本：" class="headerlink" title="4.3.2.4：生成拉取代码的pipline脚本："></a>4.3.2.4：生成拉取代码的pipline脚本：</h4><h4 id="4-3-2-5：更改pipline-job："><a href="#4-3-2-5：更改pipline-job：" class="headerlink" title="4.3.2.5：更改pipline job："></a>4.3.2.5：更改pipline job：</h4><p>node {</p><p>   stage(“code clone”){</p><p>​       echo “git clone”</p><p>​       git credentialsId: ‘b695c060-6a99-4ee3-bd4c-730bd4dd36ec’, url: <a href="mailto:&#39;git@192.168.8.3">&#39;git@192.168.8.3</a>:test-service/test-project.git’</p><p>   }</p><p>  stage(“code build”){</p><p>​      echo “code build”</p><p>  }</p><p>  stage(“code test”){</p><p>​      echo “code test”</p><p>  }</p><p>  stage(“code deploy”){</p><p>​      echo “code deploy”</p><p>  }</p><p>}</p><h4 id="4-3-2-6：执行jenkins-job："><a href="#4-3-2-6：执行jenkins-job：" class="headerlink" title="4.3.2.6：执行jenkins job："></a>4.3.2.6：执行jenkins job：</h4><h4 id="4-3-2-7：验证git-clone日志："><a href="#4-3-2-7：验证git-clone日志：" class="headerlink" title="4.3.2.7：验证git clone日志："></a>4.3.2.7：验证git clone日志：</h4><h4 id="4-3-2-8：服务器验证数据："><a href="#4-3-2-8：服务器验证数据：" class="headerlink" title="4.3.2.8：服务器验证数据："></a>4.3.2.8：服务器验证数据：</h4><h4 id="4-3-2-9：pipline中执行shell-命令："><a href="#4-3-2-9：pipline中执行shell-命令：" class="headerlink" title="4.3.2.9：pipline中执行shell 命令："></a>4.3.2.9：pipline中执行shell 命令：</h4><p>node {</p><p>   stage(“code clone”){</p><p>​       echo “git clone”</p><p>​       git credentialsId: ‘b695c060-6a99-4ee3-bd4c-730bd4dd36ec’, url: <a href="mailto:&#39;git@192.168.8.3">&#39;git@192.168.8.3</a>:test-service/test-project.git’</p><p>​       sh “cd /root/.jenkins/workspace/pipline-test &amp;&amp; tar czvf code.tar.gz ./*”</p><p>   }</p><p>  stage(“code build”){</p><p>​      echo “code build”</p><p>  }</p><p>  stage(“code test”){</p><p>​      echo “code test”</p><p>  }</p><p>  stage(“code deploy”){</p><p>​      echo “code deploy”</p><p>  }</p><p>}</p><h3 id="4-3-3：jenkins-分布式构建："><a href="#4-3-3：jenkins-分布式构建：" class="headerlink" title="4.3.3：jenkins 分布式构建："></a>4.3.3：jenkins 分布式构建：</h3><h4 id="4-3-3-1：添加slave节点："><a href="#4-3-3-1：添加slave节点：" class="headerlink" title="4.3.3.1：添加slave节点："></a>4.3.3.1：添加slave节点：</h4><p>Jenkins—系统管理—节点管理—新建节点：</p><p>添加slave节点：</p><h4 id="4-3-3-2：配置slave节点："><a href="#4-3-3-2：配置slave节点：" class="headerlink" title="4.3.3.2：配置slave节点："></a>4.3.3.2：配置slave节点：</h4><p>Slave服务器创建工作目录，如果slave需要执行编译job，则也需要配置java环境：</p><p>[root@jenkins-slave ~]# yum install java-1.8.0-openjdk –y</p><p>[root@jenkins-slave ~]#  mkdir /data/jenkins/slave -pv</p><p>mkdir: created directory ‘/data’</p><p>mkdir: created directory ‘/data/jenkins’</p><p>mkdir: created directory ‘/data/jenkins/slave’</p><h4 id="4-3-3-3：添加slave认证凭据："><a href="#4-3-3-3：添加slave认证凭据：" class="headerlink" title="4.3.3.3：添加slave认证凭据："></a>4.3.3.3：添加slave认证凭据：</h4><h3 id="4-3-3-：添加slave节点："><a href="#4-3-3-：添加slave节点：" class="headerlink" title="4.3.3.：添加slave节点："></a>4.3.3.：添加slave节点：</h3><h3 id="4-3-4：jenkins-slave创建日志："><a href="#4-3-4：jenkins-slave创建日志：" class="headerlink" title="4.3.4：jenkins slave创建日志："></a>4.3.4：jenkins slave创建日志：</h3><h3 id="4-3-5：如果slave-java报错如下："><a href="#4-3-5：如果slave-java报错如下：" class="headerlink" title="4.3.5：如果slave java报错如下："></a>4.3.5：如果slave java报错如下：</h3><h3 id="4-3-6：验证slave-状态："><a href="#4-3-6：验证slave-状态：" class="headerlink" title="4.3.6：验证slave 状态："></a>4.3.6：验证slave 状态：</h3><p>正常状态：</p><p>时间不同步状态</p><h3 id="4-3-7：slave-状态："><a href="#4-3-7：slave-状态：" class="headerlink" title="4.3.7：slave 状态："></a>4.3.7：slave 状态：</h3><h3 id="4-3-8：配置slave执行job："><a href="#4-3-8：配置slave执行job：" class="headerlink" title="4.3.8：配置slave执行job："></a>4.3.8：配置slave执行job：</h3><p>Slave的公钥也要同步到各个web服务器</p><p>node(‘slave-node1’){</p><p>   stage(“code clone”){</p><p>​       echo “git clone”</p><p>​       sh “cd /data/jenkins/slave/workspace/pipline-test &amp;&amp; rm -rf ./*”</p><p>​       git credentialsId: ‘b695c060-6a99-4ee3-bd4c-730bd4dd36ec’, url: <a href="mailto:&#39;git@192.168.8.3">&#39;git@192.168.8.3</a>:test-service/test-project.git’</p><p>​       sh “cd /data/jenkins/slave/workspace/pipline-test &amp;&amp; tar czvf code.tar.gz ./*”</p><p>   }</p><p>  stage(“code build”){</p><p>​      echo “code build”</p><p>  }</p><p>  stage(“code test”){</p><p>​      echo “code test”</p><p>  }</p><p>  stage(“code deploy”){</p><p>​      echo “code deploy”</p><p>  }</p><p>}</p><h3 id="4-3-9：验证slave执行构建："><a href="#4-3-9：验证slave执行构建：" class="headerlink" title="4.3.9：验证slave执行构建："></a>4.3.9：验证slave执行构建：</h3>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;DevOps-之基于Jenkins实现的CI与CD&quot;&gt;&lt;a href=&quot;#DevOps-之基于Jenkins实现的CI与CD&quot; class=&quot;headerlink&quot; title=&quot;DevOps 之基于Jenkins实现的CI与CD&quot;&gt;&lt;/a&gt;DevOps 之基于Jenkins实现的CI与CD&lt;/h1&gt;&lt;p&gt; &lt;img src=&quot;https://www.lh1.ink/img/001.png&quot; alt=&quot;1552469963552&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>linux之花里胡哨</title>
    <link href="http://yoursite.com/2018/11/11/Linux%E4%B9%8B%E8%8A%B1%E9%87%8C%E8%83%A1%E5%93%A8/"/>
    <id>http://yoursite.com/2018/11/11/Linux之花里胡哨/</id>
    <published>2018-11-11T10:18:18.000Z</published>
    <updated>2019-04-12T05:24:48.699Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux之花里胡哨"><a href="#Linux之花里胡哨" class="headerlink" title="Linux之花里胡哨"></a>Linux之花里胡哨</h1><p><img src="https://www.lh1.ink/img/5C1553323418761.png" alt="1553323418761"></p><a id="more"></a><h1 id="笔记本电脑查询已连接WIFI密码"><a href="#笔记本电脑查询已连接WIFI密码" class="headerlink" title="笔记本电脑查询已连接WIFI密码"></a>笔记本电脑查询已连接WIFI密码</h1><p>###本方法适用于忘了WiFi密码或者通过其他手段连上WiFi却不知道密码的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#按Windows+R，输入cmd启动命令行</span></span><br><span class="line"><span class="comment">#命令行中输入</span></span><br><span class="line">netsh wlan show profiles   <span class="comment">#列出已保存WiFi</span></span><br><span class="line">netsh wlan show profiles name=12345 key=clear </span><br><span class="line"><span class="comment">#即可查询WiFi名称为12345的密码，在安全设置中，密码即为下方关键内容</span></span><br></pre></td></tr></table></figure><h1 id="Linux下取出指定位的随机密码"><a href="#Linux下取出指定位的随机密码" class="headerlink" title="Linux下取出指定位的随机密码"></a>Linux下取出指定位的随机密码</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /dev/urandom |tr -dc <span class="string">'a-zA-Z0-9_'</span> |head -c12 <span class="comment">#取出12位的随机密码，尾数改变改为8即取8位</span></span><br></pre></td></tr></table></figure><h1 id="Linux命令颜色和欢迎界面！"><a href="#Linux命令颜色和欢迎界面！" class="headerlink" title="Linux命令颜色和欢迎界面！"></a>Linux命令颜色和欢迎界面！</h1><p>在全局设置中写入配置</p><h3 id="字体颜色和背景设置"><a href="#字体颜色和背景设置" class="headerlink" title="字体颜色和背景设置"></a>字体颜色和背景设置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile.d/env.sh   <span class="comment">#打开配置文件</span></span><br><span class="line">PS1=<span class="string">"\[\e[1;32m\][\u@\h \W]\\$\[\e[0m\]"</span></span><br><span class="line"><span class="comment">#按esc，然后输入wq保存，重新登陆客户端即可</span></span><br></pre></td></tr></table></figure><p>如图<br><img src="https://www.lh1.ink/img/20181101113754610.png" alt="111"><br><img src="https://www.lh1.ink/img/20181101113811394.png" alt="1112"><br>可以看到上面两图命令颜色变成了绿色<br>那么欢迎界面怎么设置呢？</p><h2 id="欢迎界面"><a href="#欢迎界面" class="headerlink" title="欢迎界面"></a>欢迎界面</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/motd   <span class="comment">#打开配置文件,复制下面的字符</span></span><br><span class="line"></span><br><span class="line">                                                     /*[*/<span class="comment">#include&lt;stdio.h&gt;//</span></span><br><span class="line">                         <span class="comment">#include&lt;stdlib.h&gt;//]++++[-&gt;++[-&gt;+&gt;++++&lt;&lt;]&lt;][(c)2013]</span></span><br><span class="line">                        <span class="comment">#ifndef                                           e//[o</span></span><br><span class="line">                       <span class="comment">#include&lt;string.h&gt;//]![misaka.c,size=3808,crc=d0ec3b36][</span></span><br><span class="line">                      <span class="comment">#define e                                           0x1//</span></span><br><span class="line">                     typedef struct&#123;int d,b,o,P;char*q,*p;&#125;f;int p,q,d,b,_=0//|</span><br><span class="line">                  <span class="comment">#include __FILE__//]&gt;&gt;&gt;[-&gt;+&gt;++&lt;&lt;]&lt;[-&lt;&lt;+&gt;&gt;&gt;++&lt;]&gt;&gt;+MISAKA*IMOUTO</span></span><br><span class="line">                <span class="comment">#undef e//[-&gt;[-&lt;&lt;+&lt;+&lt;+&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;++[-&gt;&gt;+&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;]&gt;+&gt;+++&gt;+++[&gt;]]b</span></span><br><span class="line">             <span class="comment">#define e(c)/**/if((_!=__LINE__?(_=__LINE__):0))&#123;c;&#125;//[20002,+[-.+]</span></span><br><span class="line">            ,O,i=0,Q=sizeof(f);static f*P;static FILE*t;static const char*o[]=&#123;//</span><br><span class="line">          <span class="string">"\n\40\"8oCan\40not\40open %s\n\0aaFbfeccdeaEbgecbbcda6bcedd#e(bbed<span class="variable">$bbd</span>"</span>,</span><br><span class="line">        <span class="string">"a6bgcdbbccd#ead<span class="variable">$c</span>%bcdea7bccde*b<span class="variable">$eebbdda9bsdbeccdbbecdcbbcceed</span>#eaa&amp;bae<span class="variable">$cbe</span>"</span>,</span><br><span class="line">       <span class="string">"e&amp;cbdd<span class="variable">$eldbdeedbbdede</span>)bdcdea&amp;bbde1bedbbcc&amp;b#ccdee&amp;bdcdea'bbcd)e'bad(bae&amp;bccd"</span>,</span><br><span class="line">      <span class="string">"e&amp;bbda1bdcdee<span class="variable">$bbce</span>#b<span class="variable">$c</span>&amp;bdedcd%ecdca4bhcdeebbcd#e<span class="variable">$b</span>#ecdcc<span class="variable">$bccda7bbcc</span>#e#d%c*bbda"</span>,</span><br><span class="line">     <span class="string">"&gt;bad/bbda"</span>&#125;;static int <span class="function"><span class="title">S</span></span>()&#123;<span class="built_in">return</span>(o[p][q]);&#125;static/**/int/**/Z=0  ;void/**/z(int//</span><br><span class="line">    l)&#123;<span class="keyword">if</span>(/**/Z<span class="_">-l</span>)&#123;Z=l;q++;<span class="keyword">if</span>(p&lt;b*5&amp;&amp;!S())&#123;p+=b;q=0;&#125;&#125;&#125;int main(int I,    /**/char**l)&#123;//</span><br><span class="line">   d=sizeof(f*);<span class="keyword">if</span>(1&lt;(O=_))&#123;b=((sizeof(o)/sizeof(char*))-1)/4;q=22; p=     0;<span class="keyword">while</span>(p&lt;b*5)&#123;</span><br><span class="line">  /*&lt;*/<span class="keyword">if</span>(Z-1)&#123;d=S()&gt;96;i=S()-(d?96:32) ;q++;<span class="keyword">if</span>(p&lt;b*5&amp;&amp;!S())&#123;p+=b;  q=      0;&#125;Z=1;&#125;/*[[*/</span><br><span class="line">  <span class="keyword">while</span>(i)&#123;_=o[0][S()-97];I=_-10?b:1;   <span class="keyword">for</span>( ;I--;)putchar(_ );<span class="keyword">if</span>   (!      --i||d)z(~i );&#125;</span><br><span class="line"> <span class="keyword">if</span>(p==b*5&amp;&amp;O)&#123;p-=b;O--;&#125;&#125;<span class="built_in">return</span> 0U;   &#125;<span class="keyword">if</span>(! (P=( f*)calloc /*]*/  (Q        ,I)))<span class="built_in">return</span> 1;</span><br><span class="line"> &#123;;&#125;<span class="keyword">for</span>(_=p=1;p&lt;I;p++)&#123;e(q=1);<span class="keyword">while</span>    (q&lt;   p&amp;&amp;  strcmp(  l[p     ]         ,l[(q)]))++  q;</span><br><span class="line"> t=stdin;<span class="keyword">if</span>(q&lt;p)&#123;(void)memcpy/* <span class="string">"      */    (&amp;P  [p],&amp;P   [q     ]          ,Q);continue ;&#125;</span></span><br><span class="line"><span class="string">if(strcmp(l[p],"</span>-<span class="string">"))&#123;t=fopen(l         [     p]   ,"</span>rb<span class="string">"   )                  ;if(!t )&#123;&#123;;&#125;  ;</span></span><br><span class="line"><span class="string">printf(05+*o,l[p ]);return+1;                      &#123;;&#125;                       &#125;&#125;_=b= 1&lt;&lt;16   ;</span></span><br><span class="line"><span class="string">*&amp;O=5;do&#123;if(!(P[p].q=realloc   (P[p].q,(P[p].P     +=       b)+1)))&#123;return   01;&#125;O   &amp;=72   /</span></span><br><span class="line"><span class="string">6/*][*/;P[p].o+=d=fread(P[p]      .q       +P[     p           ].       o,  1,b,t)   ;&#125;//</span></span><br><span class="line"><span class="string"> while(d==b)      ;P [p].q[       P[       p]                  .o       ]=  012;d    =0;</span></span><br><span class="line"><span class="string"> e(fclose(t        )  );P         [p]      .p                  =P[      p]  .q;if    (O)</span></span><br><span class="line"><span class="string"> &#123;for(;d&lt;P[            p]          .o     ;d=                   q+     1)    &#123;q=     d;</span></span><br><span class="line"><span class="string">  while(q&lt;P[                        p].o&amp;&amp;P[                    p].q[q]-     10     )&#123;</span></span><br><span class="line"><span class="string">  q++;&#125;b=q-d;                         _=P                         [p].        d     ;</span></span><br><span class="line"><span class="string">  if(b&gt;_)&#123;/*]b                                                                */</span></span><br><span class="line"><span class="string">   P[p].d=b;&#125;&#123;;                                                                &#125;</span></span><br><span class="line"><span class="string">   #undef/*pqdz'.*/  e//                                                      ;</span></span><br><span class="line"><span class="string">   #define/*s8qdb]*/e/**/0                                                   //</span></span><br><span class="line"><span class="string">   //&lt;&lt;.&lt;&lt;.----.&gt;.&lt;&lt;.&gt;++.++&lt;                                              .[&gt;]</span></span><br><span class="line"><span class="string">   /*P[*/P[p].b++;continue;&#125;&#125;&#125;t=                                       stdout;</span></span><br><span class="line"><span class="string">  for (p=1;p&lt;I;p++)&#123;/**/if(P[p].b&gt;i                               )&#123;i=P[p].b;&#125;&#125;</span></span><br><span class="line"><span class="string"> if  (O)&#123;for(p=0;p&lt;i;p++)&#123;q=0;/*[*/while(I               &gt;++q)&#123;_=P[q].p-P[q ].q;</span></span><br><span class="line"><span class="string">b=   0;if(_&lt;P[q ].o)&#123;while(012-*P[q].p)     &#123;putchar(*(P[q].p++));b++;&#125;P[q]. p++;</span></span><br><span class="line"><span class="string">&#125;   ;while (P[  q].d&gt;b++)putchar(040);&#125;             putchar(10);&#125;return 0;&#125;p   =1;</span></span><br><span class="line"><span class="string">   for(;   p&lt;I   ;p++)fwrite(P[p] .q,P[              p].o,1,t);return 0 ;&#125;//</span></span><br><span class="line"><span class="string">  #/*]     ]&lt;.    [-]&lt;[-]&lt;[- ]&lt;[    -]&lt;               [-  ]&lt;;*/elif  e    //b</span></span><br><span class="line"><span class="string"> |(1        &lt;&lt;     ( __LINE__        /*               &gt;&gt;   `*//45))  |     01U</span></span><br><span class="line"><span class="string">             #                       /*               */     endif            //</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#按esc，然后输入wq保存，重新登陆客户端即可</span></span><br></pre></td></tr></table></figure><p>或者复制这个<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">▽</span><br><span class="line">                              _.._        ,------------.                                                        </span><br><span class="line">                           ,&apos;      `.    ( I want you! )</span><br><span class="line">                          /  __) __` \    `-,----------&apos;</span><br><span class="line">                         (  (`-`(-&apos;)  ) _.-&apos;</span><br><span class="line">                         /)  \  = /  (</span><br><span class="line">                        /&apos;    |--&apos; .  \</span><br><span class="line">                       (  ,---|  `-.)__`</span><br><span class="line">                        )(  `-.,--&apos;   _`-.</span><br><span class="line">                       &apos;/,&apos;          (  Uu&quot;,</span><br><span class="line">                        (_       ,    `/,-&apos; )</span><br><span class="line">                        `.__,  : `-&apos;/  /`--&apos;</span><br><span class="line">                          |     `--&apos;  |</span><br><span class="line">                          `   `-._   /</span><br><span class="line">                           \        (</span><br><span class="line">                           /\ .      \.</span><br><span class="line">                          / |` \     ,-\</span><br><span class="line">                         /  \| .)   /   \</span><br><span class="line">                        ( ,&apos;|\    ,&apos;     :</span><br><span class="line">                        | \,`.`--&quot;/      &#125;</span><br><span class="line">                        `,&apos;    \  |,&apos;    /</span><br><span class="line">                       / &quot;-._   `-/      |</span><br><span class="line">                       &quot;-.   &quot;-.,&apos;|     ;</span><br><span class="line">                      /        _/[&quot;---&apos;&quot;&quot;]</span><br><span class="line">                     :        /  |&quot;-     &apos;</span><br><span class="line">                     &apos;           |      /</span><br><span class="line">                                 `      |</span><br><span class="line">~</span><br></pre></td></tr></table></figure></p><h1 id="在centos下用cmatrix做出×××屏幕代码雨效果"><a href="#在centos下用cmatrix做出×××屏幕代码雨效果" class="headerlink" title="在centos下用cmatrix做出×××屏幕代码雨效果"></a>在centos下用cmatrix做出×××屏幕代码雨效果</h1><p>文章出处：</p><p><a href="http://blog.51cto.com/5232821/2146115">http://blog.51cto.com/5232821/2146115</a>      作者：hubbywen0<br><strong>1、下载cmatrix-1.2a.tar.gz文件</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># wget https://jaist.dl.sourceforge.net/project/cmatrix/cmatrix/1.2a/cmatrix-1.2a.tar.gz    #centos 下载不了此安装包，需自行下载到本地，rz上传到Linux系统</span></span><br><span class="line">--2018-07-17 15:06:03--  https://jaist.dl.sourceforge.net/project/cmatrix/cmatrix/1.2a/cmatrix-1.2a.tar.gz</span><br><span class="line">Resolving jaist.dl.sourceforge.net (jaist.dl.sourceforge.net)... 150.65.7.130, 2001:df0:2ed:feed::feed</span><br><span class="line">Connecting to jaist.dl.sourceforge.net (jaist.dl.sourceforge.net)|150.65.7.130|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 74376 (73K) [application/x-gzip]</span><br><span class="line">Saving to: ‘cmatrix-1.2a.tar.gz’</span><br><span class="line"></span><br><span class="line">100%[=====================================================&gt;] 74,376      4.68KB/s   <span class="keyword">in</span> 16s    </span><br><span class="line"></span><br><span class="line">2018-07-17 15:06:20 (4.68 KB/s) - ‘cmatrix-1.2a.tar.gz’ saved [74376/74376]</span><br></pre></td></tr></table></figure></p><p><strong>2、解压缩cmatrix-1.2a.tar.gz文件</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># tar xvf cmatrix-1.2a.tar.gz</span></span><br><span class="line">cmatrix-1.2a/</span><br><span class="line">cmatrix-1.2a/NEWS</span><br><span class="line">cmatrix-1.2a/TODO</span><br><span class="line">cmatrix-1.2a/aclocal.m4</span><br><span class="line">cmatrix-1.2a/README</span><br><span class="line">cmatrix-1.2a/configure</span><br><span class="line">cmatrix-1.2a/configure.in</span><br><span class="line">cmatrix-1.2a/cmatrix.1</span><br><span class="line">cmatrix-1.2a/cmatrix.c</span><br><span class="line">cmatrix-1.2a/config.guess</span><br><span class="line">cmatrix-1.2a/install-sh</span><br><span class="line">cmatrix-1.2a/cmatrix.spec</span><br><span class="line">cmatrix-1.2a/cmatrix.spec.in</span><br><span class="line">cmatrix-1.2a/matrix.fnt</span><br><span class="line">cmatrix-1.2a/config.sub</span><br><span class="line">cmatrix-1.2a/missing</span><br><span class="line">cmatrix-1.2a/mkinstalldirs</span><br><span class="line">cmatrix-1.2a/Makefile.am</span><br><span class="line">cmatrix-1.2a/Makefile.in</span><br><span class="line">cmatrix-1.2a/mtx.pcf</span><br><span class="line">cmatrix-1.2a/config.h.in</span><br><span class="line">cmatrix-1.2a/matrix.psf.gz</span><br><span class="line">cmatrix-1.2a/stamp-h.in</span><br><span class="line">cmatrix-1.2a/AUTHORS</span><br><span class="line">cmatrix-1.2a/INSTALL</span><br><span class="line">cmatrix-1.2a/ChangeLog</span><br><span class="line">cmatrix-1.2a/acconfig.h</span><br><span class="line">cmatrix-1.2a/COPYING</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cd cmatrix-1.2a</span></span><br><span class="line"></span><br><span class="line">[root@localhost cmatrix-1.2a]<span class="comment"># yum install ncurses-deve</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon cmatrix-1.2a]<span class="comment"># ./configure &amp;&amp; make &amp;&amp; make install</span></span><br><span class="line">loading cache ./config.cache</span><br><span class="line">checking <span class="keyword">for</span> a BSD compatible install... /usr/bin/install -c</span><br><span class="line">checking whether build environment is sane... yes</span><br><span class="line">checking whether make sets <span class="variable">$&#123;MAKE&#125;</span>... yes</span><br><span class="line">checking <span class="keyword">for</span> working aclocal... missing</span><br><span class="line">checking <span class="keyword">for</span> working autoconf... missing</span><br><span class="line">checking <span class="keyword">for</span> working automake... missing</span><br><span class="line">checking <span class="keyword">for</span> working autoheader... missing</span><br><span class="line">checking <span class="keyword">for</span> working makeinfo... missing</span><br><span class="line">checking <span class="keyword">for</span> gcc... no</span><br><span class="line">checking <span class="keyword">for</span> cc... no</span><br><span class="line">configure: error: no acceptable cc found <span class="keyword">in</span> <span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line">当执行“./configure &amp;&amp; make &amp;&amp; make install ”命令出现如上信息时，表示没有安装gcc，gcc安装过程如下</span><br><span class="line">[root@bogon cmatrix-1.2a]<span class="comment"># yum -y install gcc</span></span><br><span class="line">[root@bogon cmatrix-1.2a]<span class="comment"># yum -y install gcc-c++</span></span><br><span class="line">[root@bogon cmatrix-1.2a]<span class="comment"># yum install make</span></span><br><span class="line"></span><br><span class="line">安装完后再运行“./configure &amp;&amp; make &amp;&amp; make install ”命令，如下：</span><br><span class="line">[root@localhost cmatrix-1.2a]<span class="comment"># ./configure &amp;&amp; make &amp;&amp; make install</span></span><br><span class="line">creating cache ./config.cache</span><br><span class="line">checking <span class="keyword">for</span> a BSD compatible install... /usr/bin/install -c</span><br><span class="line">checking whether build environment is sane... yes</span><br><span class="line">checking whether make sets <span class="variable">$&#123;MAKE&#125;</span>... yes</span><br><span class="line">checking <span class="keyword">for</span> working aclocal... missing</span><br><span class="line">checking <span class="keyword">for</span> working autoconf... missing</span><br><span class="line">checking <span class="keyword">for</span> working automake... missing</span><br><span class="line">checking <span class="keyword">for</span> working autoheader... missing</span><br><span class="line">checking <span class="keyword">for</span> working makeinfo... missing</span><br><span class="line">checking <span class="keyword">for</span> gcc... gcc</span><br><span class="line">checking whether the C compiler (gcc  ) works... yes</span><br><span class="line">checking whether the C compiler (gcc  ) is a cross-compiler... no</span><br><span class="line">checking whether we are using GNU C... yes</span><br><span class="line">checking whether gcc accepts -g... yes</span><br><span class="line">checking <span class="keyword">for</span> a BSD compatible install... /usr/bin/install -c</span><br><span class="line">checking whether make sets <span class="variable">$&#123;MAKE&#125;</span>... (cached) yes</span><br><span class="line">checking <span class="keyword">for</span> main <span class="keyword">in</span> -lncurses... yes</span><br><span class="line">checking how to run the C preprocessor... gcc -E</span><br><span class="line">checking <span class="keyword">for</span> ANSI C header files... yes</span><br><span class="line">checking <span class="keyword">for</span> fcntl.h... yes</span><br><span class="line">checking <span class="keyword">for</span> sys/ioctl.h... yes</span><br><span class="line">checking <span class="keyword">for</span> unistd.h... yes</span><br><span class="line">checking <span class="keyword">for</span> termios.h... yes</span><br><span class="line">checking <span class="keyword">for</span> termio.h... yes</span><br><span class="line">checking <span class="built_in">return</span> <span class="built_in">type</span> of signal handlers... void</span><br><span class="line">checking <span class="keyword">for</span> putenv... yes</span><br><span class="line">checking <span class="keyword">for</span> curses.h... yes</span><br><span class="line">checking <span class="keyword">for</span> ncurses.h... yes</span><br><span class="line">checking <span class="keyword">for</span> tgetent <span class="keyword">in</span> -lncurses... yes</span><br><span class="line">Using ncurses as the termcap library</span><br><span class="line">checking <span class="keyword">for</span> use_default_colors <span class="keyword">in</span> -lncurses... yes</span><br><span class="line">checking <span class="keyword">for</span> resizeterm <span class="keyword">in</span> -lncurses... yes</span><br><span class="line">checking <span class="keyword">for</span> wresize <span class="keyword">in</span> -lncurses... yes</span><br><span class="line">checking <span class="keyword">for</span> consolechars... no</span><br><span class="line">checking <span class="keyword">for</span> setfont... /usr/bin/setfont</span><br><span class="line">checking <span class="keyword">for</span> /usr/lib/kbd/consolefonts... yes</span><br><span class="line">checking <span class="keyword">for</span> /usr/share/consolefonts... no</span><br><span class="line">checking <span class="keyword">for</span> mkfontdir... no</span><br><span class="line">checking <span class="keyword">for</span> /usr/lib/X11/fonts/misc... no</span><br><span class="line">checking <span class="keyword">for</span> /usr/X11R6/lib/X11/fonts/misc... no</span><br><span class="line">configure: warning:  </span><br><span class="line"></span><br><span class="line">*** You <span class="keyword">do</span> not appear to have an X window fonts directory <span class="keyword">in</span> the standard</span><br><span class="line">*** locations (/usr/lib/X11/fonts/misc or /usr/X11R6/lib/X11/fonts/misc). The</span><br><span class="line">*** mtx.pcf font will not be installed.  This means you will probably not</span><br><span class="line">*** be able to use the mtx fonts <span class="keyword">in</span> your x terminals, and hence be unable</span><br><span class="line">*** to use the -x <span class="built_in">command</span> line switch.  Sorry about that...</span><br><span class="line"></span><br><span class="line">updating cache ./config.cache</span><br><span class="line">creating ./config.status</span><br><span class="line">creating Makefile</span><br><span class="line">creating cmatrix.spec</span><br><span class="line">creating config.h</span><br><span class="line">gcc -DHAVE_CONFIG_H -I. -I. -I.     -g -O2 -Wall -Wno-comment -c cmatrix.c</span><br><span class="line">gcc  -g -O2 -Wall -Wno-comment  -o cmatrix  cmatrix.o  -lncurses  -lncurses</span><br><span class="line">make[1]: Entering directory `/root/cmatrix-1.2a<span class="string">'</span></span><br><span class="line"><span class="string">/bin/sh ./mkinstalldirs /usr/local/bin</span></span><br><span class="line"><span class="string">  /usr/bin/install -c  cmatrix /usr/local/bin/cmatrix</span></span><br><span class="line"><span class="string">make  install-man1</span></span><br><span class="line"><span class="string">make[2]: Entering directory `/root/cmatrix-1.2a'</span></span><br><span class="line">/bin/sh ./mkinstalldirs /usr/<span class="built_in">local</span>/man/man1</span><br><span class="line">mkdir /usr/<span class="built_in">local</span>/man</span><br><span class="line">mkdir /usr/<span class="built_in">local</span>/man/man1</span><br><span class="line">/usr/bin/install -c -m 644 ./cmatrix.1 /usr/<span class="built_in">local</span>/man/man1/cmatrix.1</span><br><span class="line">make[2]: Leaving directory `/root/cmatrix-1.2a<span class="string">'</span></span><br><span class="line"><span class="string">Installing matrix fonts in /usr/lib/kbd/consolefonts...</span></span><br><span class="line"><span class="string">make[1]: Leaving directory `/root/cmatrix-1.2a'</span></span><br><span class="line"></span><br><span class="line">**到此，cmatrix安装完成，任意路径，输入cmatrix运行，按q退出。效果如下**</span><br><span class="line">[root@localhost cmatrix-1.2a]<span class="comment"># cmatrix</span></span><br><span class="line">![](http://i2.51cto.com/images/blog/201807/17/abaa3c9ee4b6cf559c3db8173c2cd2bc.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=)</span><br><span class="line"></span><br><span class="line">cmatrix常用命令如下:</span><br><span class="line">-a :异步滚动（默认）</span><br><span class="line">-b :随机粗体</span><br><span class="line">-B :全部粗体</span><br><span class="line">-o :使用旧风格滚动</span><br><span class="line">-x :X window 模式</span><br><span class="line">-V :显示版本信息</span><br><span class="line">-u :刷新频率，0-9，也就是滚动的快慢（值越小越快）</span><br><span class="line">-C :显示的颜色，支持green(默认),red,blue,white,yellow,cyan,magenta and black</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># cmatrix -b -u 3 -C yellow</span></span><br><span class="line">![](http://i2.51cto.com/images/blog/201807/17/4a2e39f2aa2889910d633b6bfb92d18f.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=)</span><br></pre></td></tr></table></figure><h1 id="Linux上sl工具安装（小火车）"><a href="#Linux上sl工具安装（小火车）" class="headerlink" title="Linux上sl工具安装（小火车）"></a>Linux上sl工具安装（小火车）</h1><p>centos7上跑火车代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirror.centos.org/centos/7/extras/x86_64/Packages/epel-release-7-9.noarch.rpm</span><br><span class="line">yum install -y epel-release-7-9.noarch.rpm</span><br><span class="line">yum install -y sl</span><br><span class="line">sl   <span class="comment">#运行程序</span></span><br></pre></td></tr></table></figure></p><p>centos6上跑火车代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirror.centos.org/centos-6/6.10/extras/x86_64/Packages/epel-release-6-8.noarch.rpm</span><br><span class="line">yum install -y epel-release-6-8.noarch.rpm</span><br><span class="line">yum install -y sl</span><br><span class="line">sl</span><br></pre></td></tr></table></figure></p><p>结果如图：<br><img src="https://www.lh1.ink/img/20181101230105477.png" alt="在这里插入图片描述"></p><h1 id="打出一个指定行与列的矩形，并使其边框闪烁"><a href="#打出一个指定行与列的矩形，并使其边框闪烁" class="headerlink" title="打出一个指定行与列的矩形，并使其边框闪烁"></a>打出一个指定行与列的矩形，并使其边框闪烁</h1><p>如图：<br><img src="https://www.lh1.ink/img/20181106154559195.png" alt="矩形"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#********************************************************************</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"please input colume: "</span>  col</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"please input line: "</span>  line</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq <span class="variable">$line</span>`;<span class="keyword">do</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> `seq <span class="variable">$col</span>`;<span class="keyword">do</span></span><br><span class="line">                <span class="comment">#if [ $i -eq 1 -o $i -eq $line -o $j -eq 1 -o $j -eq $col ];then</span></span><br><span class="line">                <span class="comment">#如果当前行等于1或者等于行号line，或者当前列等于1或者等于列号col，则</span></span><br><span class="line">                <span class="comment">#       COLOR=$[RANDOM%7+31]</span></span><br><span class="line">                <span class="comment">#       echo -e "\033[1;5;$&#123;COLOR&#125;m*\033[0m\c"</span></span><br><span class="line">                <span class="comment">#else</span></span><br><span class="line">                <span class="comment">#       echo -e "*\c"</span></span><br><span class="line">                <span class="comment">#fi   以上方法为if语句，下面为case语句，都可实现</span></span><br><span class="line">                <span class="keyword">case</span> <span class="variable">$i</span> <span class="keyword">in</span></span><br><span class="line">                1|<span class="variable">$line</span>)</span><br><span class="line">                        COLOR=$[RANDOM%7+31]</span><br><span class="line">                        <span class="built_in">echo</span> -e <span class="string">"\033[1;5;<span class="variable">$&#123;COLOR&#125;</span>m*\033[0m\c"</span></span><br><span class="line">                        ;;</span><br><span class="line">                *)</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">case</span> <span class="variable">$j</span> <span class="keyword">in</span></span><br><span class="line">                        1|<span class="variable">$col</span>)</span><br><span class="line">                                COLOR=$[RANDOM%7+31]</span><br><span class="line">                                <span class="built_in">echo</span> -e <span class="string">"\033[1;5;<span class="variable">$&#123;COLOR&#125;</span>m*\033[0m\c"</span></span><br><span class="line">                                ;;</span><br><span class="line">                        *)</span><br><span class="line">                                <span class="built_in">echo</span> -e <span class="string">"*\c"</span> </span><br><span class="line">                        <span class="keyword">esac</span></span><br><span class="line">                <span class="keyword">esac</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">        <span class="built_in">echo</span> </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h1 id="实验：输入一个行号，打印一个等腰三角形"><a href="#实验：输入一个行号，打印一个等腰三角形" class="headerlink" title="实验：输入一个行号，打印一个等腰三角形"></a>实验：输入一个行号，打印一个等腰三角形</h1><p>如图：<br><img src="https://www.lh1.ink/img/20181106160700716.png" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#********************************************************************</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"Please input line: "</span> line</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq <span class="variable">$line</span>`;<span class="keyword">do</span></span><br><span class="line">        <span class="built_in">let</span> star=<span class="variable">$i</span>*2-1</span><br><span class="line">        <span class="built_in">let</span> space=<span class="variable">$line</span>-<span class="variable">$i</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> `seq <span class="variable">$space</span>`;<span class="keyword">do</span></span><br><span class="line">                <span class="built_in">echo</span> -n <span class="string">" "</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> `seq <span class="variable">$star</span>`;<span class="keyword">do</span></span><br><span class="line">                <span class="built_in">echo</span> -n <span class="string">"*"</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">        <span class="built_in">echo</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h1 id="选菜菜单"><a href="#选菜菜单" class="headerlink" title="选菜菜单"></a>选菜菜单</h1><p>PS3=”Please input a number:”<br>select MENU in lamian huimian gaifan jiaozi baozi quit;do<br>​        case $REPLY in<br>​        1|2)<br>​                echo “The price is 15元”<br>​                ;;<br>​        3|5)<br>​                echo “The price is 20元”<br>​                ;;<br>​        4)<br>​                echo “The price is 25元”<br>​        ;;<br>​        6)<br>​                echo “bye”<br>​                break<br>​                ;;<br>​        *)<br>​                echo “Input false”<br>​        esac<br>done</p><h1 id="九九乘法表"><a href="#九九乘法表" class="headerlink" title="九九乘法表"></a>九九乘法表</h1><p>打印出九九乘法表<br>例如<br><img src="https://www.lh1.ink/img/20181106161952387.png" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..9&#125;;<span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> $(seq <span class="variable">$i</span>);<span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> -en <span class="string">"<span class="variable">$&#123;i&#125;</span>X<span class="variable">$&#123;j&#125;</span>=$[<span class="variable">$i</span>*<span class="variable">$j</span>]\t"</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h1 id="打印出国际象棋棋盘"><a href="#打印出国际象棋棋盘" class="headerlink" title="打印出国际象棋棋盘"></a>打印出国际象棋棋盘</h1><p><img src="https://www.lh1.ink/img/20181106162358832.png" alt="在这里插入图片描述"><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#！bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..8&#125;;<span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> &#123;1..8&#125;;<span class="keyword">do</span></span><br><span class="line">        flag=$[(j+i)%2]</span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$flag</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> -e <span class="string">"\033[47m  \033[0m\c"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> -e <span class="string">"  \c"</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Linux之花里胡哨&quot;&gt;&lt;a href=&quot;#Linux之花里胡哨&quot; class=&quot;headerlink&quot; title=&quot;Linux之花里胡哨&quot;&gt;&lt;/a&gt;Linux之花里胡哨&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://www.lh1.ink/img/5C1553323418761.png&quot; alt=&quot;1553323418761&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="L·H" scheme="http://yoursite.com/tags/L%C2%B7H/"/>
    
  </entry>
  
  <entry>
    <title>Chrome浏览器启用flash</title>
    <link href="http://yoursite.com/2018/11/08/%E8%B0%B7%E6%AD%8Cchrome%E6%B5%8F%E8%A7%88%E5%99%A8%E8%87%AA%E5%8A%A8%E5%90%AF%E7%94%A8flash/"/>
    <id>http://yoursite.com/2018/11/08/谷歌chrome浏览器自动启用flash/</id>
    <published>2018-11-08T10:18:18.000Z</published>
    <updated>2019-04-12T05:20:07.752Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.lh1.ink/img/5C1553323564367.png" alt="1553323564367"></p><a id="more"></a><p>新版的chrome浏览器不支持启用flash插件了，这也导致有时候打开视频或者微博上传图片时，浏览器提示你flash未启用或者版本过低，这时就算你再下载安装Adobe Flash Player也是不管用的。</p><p>这时我们先去chrome实验室界面<br>在地址栏输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chrome://flags/#enable-ephemeral-flash-permission</span><br></pre></td></tr></table></figure></p><p>选择取消Disabled。取消该实验室选项，如下图：<img src="https://www.lh1.ink/img/20181108192236425.png" alt="在这里插入图片描述"></p><p>然后去在地址栏输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chrome://settings/content/flash</span><br></pre></td></tr></table></figure></p><p>在下面的允许选项添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://*</span><br><span class="line">https://*</span><br></pre></td></tr></table></figure></p><p>如图：<br><img src="https://img-blog.csdnimg.cn/20181108192520934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzU1MTE1Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>并且退出浏览器之后不会不保存，Flash选项。<br>此时重启浏览器，你就发现微博上传图片就可以正常使用了<br><img src="https://img-blog.csdnimg.cn/20181108192648655.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzU1MTE1Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.lh1.ink/img/5C1553323564367.png&quot; alt=&quot;1553323564367&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="L·H" scheme="http://yoursite.com/tags/L%C2%B7H/"/>
    
  </entry>
  
  <entry>
    <title>shell防止黑客攻击</title>
    <link href="http://yoursite.com/2018/10/21/shell%E9%98%B2%E6%AD%A2%E6%94%BB%E5%87%BB/"/>
    <id>http://yoursite.com/2018/10/21/shell防止攻击/</id>
    <published>2018-10-21T10:18:18.000Z</published>
    <updated>2019-03-23T07:17:52.261Z</updated>
    
    <content type="html"><![CDATA[<h1 id="shell防止攻击"><a href="#shell防止攻击" class="headerlink" title="shell防止攻击"></a>shell防止攻击</h1><a id="more"></a><p><img src="https://img-blog.csdnimg.cn/20181106170929109.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzU1MTE1Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!bin/bash</span></span><br><span class="line"><span class="comment">#********************************************************************</span></span><br><span class="line"><span class="keyword">while</span> : ;<span class="keyword">do</span></span><br><span class="line">        iplist=`who | sed -rn <span class="string">'/^cracker/s/.*\((.*)\)/\1/p'</span>`    <span class="comment">#取出以cracker开头的黑客IP地址</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">"<span class="variable">$iplist</span>"</span> ] ;<span class="keyword">then</span></span><br><span class="line">                pkill -9 -U cracker </span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"cracker is killed"</span></span><br><span class="line">                <span class="built_in">echo</span> sshd:<span class="variable">$iplist</span> &gt;&gt; /etc/hosts.deny    <span class="comment">#将拦截的IP放到配置文件中，禁止下次连接</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        sleep  10</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;shell防止攻击&quot;&gt;&lt;a href=&quot;#shell防止攻击&quot; class=&quot;headerlink&quot; title=&quot;shell防止攻击&quot;&gt;&lt;/a&gt;shell防止攻击&lt;/h1&gt;
    
    </summary>
    
    
      <category term="L·H" scheme="http://yoursite.com/tags/L%C2%B7H/"/>
    
  </entry>
  
  <entry>
    <title>批量ping IP脚本</title>
    <link href="http://yoursite.com/2018/10/20/%E6%89%B9%E9%87%8Fping%20IP%E8%84%9A%E6%9C%AC/"/>
    <id>http://yoursite.com/2018/10/20/批量ping IP脚本/</id>
    <published>2018-10-20T10:18:18.000Z</published>
    <updated>2019-03-23T07:14:10.115Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ping-Script"><a href="#Ping-Script" class="headerlink" title="Ping Script"></a>Ping Script</h1><a id="more"></a><h1 id="批量ping一个网络ID中的254个IP地址，并把能够Ping通的地址放到：-tmp-iplist-log"><a href="#批量ping一个网络ID中的254个IP地址，并把能够Ping通的地址放到：-tmp-iplist-log" class="headerlink" title="批量ping一个网络ID中的254个IP地址，并把能够Ping通的地址放到：/tmp/iplist.log"></a>批量ping一个网络ID中的254个IP地址，并把能够Ping通的地址放到：/tmp/iplist.log</h1><p>例如ping百度的IP：123.125.115.110<br>bash scanip00.sh  输入正确格式的IP地址<br><img src="https://img-blog.csdnimg.cn/20181106152508960.png" alt="ping"><br>cat /tmp/iplist.log<br>结果<br><img src="https://img-blog.csdnimg.cn/20181106152703455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzU1MTE1Mg==,size_16,color_FFFFFF,t_70" alt="能够Ping通的IP"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#********************************************************************</span></span><br><span class="line"><span class="comment">#scanip00.sh    # 脚本名</span></span><br><span class="line">&gt; /tmp/iplist.log   <span class="comment">#每次运行前清空该文件内容</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"Please input a netid:(eg:192.168.34.0) "</span> netid  <span class="comment">#输入IP</span></span><br><span class="line">netid=`<span class="built_in">echo</span> <span class="variable">$netid</span> | sed -nr <span class="string">'s#(.*)\..*#\1#p'</span>`</span><br><span class="line"><span class="built_in">echo</span> netid=<span class="variable">$netid</span></span><br><span class="line"><span class="keyword">for</span> id <span class="keyword">in</span> &#123;1..254&#125;;<span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span> ping -c1 -w1  <span class="variable">$netid</span>.<span class="variable">$id</span> &amp;&gt;/dev/null ;<span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"<span class="variable">$netid</span>.<span class="variable">$id</span>"</span> &gt;&gt; /tmp/iplist.log  <span class="comment">#ping通的放入文件</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$netid</span>.<span class="variable">$id</span> is up</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$netid</span>.<span class="variable">$id</span> is down</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        &#125;&amp;                  <span class="comment">#并行执行</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">wait</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Ping-Script&quot;&gt;&lt;a href=&quot;#Ping-Script&quot; class=&quot;headerlink&quot; title=&quot;Ping Script&quot;&gt;&lt;/a&gt;Ping Script&lt;/h1&gt;
    
    </summary>
    
    
      <category term="L·H" scheme="http://yoursite.com/tags/L%C2%B7H/"/>
    
  </entry>
  
  <entry>
    <title>iptables防火墙</title>
    <link href="http://yoursite.com/2018/10/20/iptables/"/>
    <id>http://yoursite.com/2018/10/20/iptables/</id>
    <published>2018-10-20T10:18:18.000Z</published>
    <updated>2019-03-23T07:10:19.467Z</updated>
    
    <content type="html"><![CDATA[<h1 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h1><a id="more"></a><h1 id="1-Linux防火墙"><a href="#1-Linux防火墙" class="headerlink" title="1. Linux防火墙"></a>1. Linux防火墙</h1><ul><li>防火墙的概念</li><li>iptables的基本认识</li><li>iptables的组成</li><li>iptables的基本语法</li><li>iptables之forward的概念</li><li>iptables之地址转换法则</li><li>SNAT源地址转换的具体实现</li><li>DNAT目标地址转换的具体实现</li></ul><h2 id="1-1-安全技术"><a href="#1-1-安全技术" class="headerlink" title="1.1. 安全技术"></a>1.1. 安全技术</h2><ul><li>入侵检测与管理系统（Intrusion Detection Systems）：特点是不阻断任何网络访问，量化、定位来自内外网络的威胁情况，主要以提供报告和事后监督为主，提供有针对性的指导措施和安全决策依据。一般采用旁路部署方式。</li><li>入侵防御系统（Intrusion Prevention System）：以透明模式工作，分析数据包的内容如：溢出攻击、拒绝服务攻击、木马、蠕虫、系统漏洞等进行准确的分析判断，在判定为攻击行为后立即予以阻断，主动而有效的保护网络的安全，一般采用在线部署方式。</li><li>防火墙（FireWall ）：隔离功能， 工作在网络或主机边缘，对进出网络或主机的数据包基于一定的规则检查，并在匹配某规则时由规则定义的行为进行处理的一组功能的组件，基本上的实现都是默认情况下关闭所有的通过型访问，只开放允许访问的策略。</li></ul><h2 id="1-2-防火墙的分类"><a href="#1-2-防火墙的分类" class="headerlink" title="1.2. 防火墙的分类"></a>1.2. 防火墙的分类</h2><ul><li>主机防火墙：服务范围为当前主机。<br>网络防火墙：服务范围为防火墙一侧的局域网。</li><li>硬件防火墙：在专用硬件级别实现部分功能的防火墙；另一个部分功能基于软件实现， Checkpoint,NetScreen。<br>软件防火墙：运行于通用硬件平台之上的防火墙的应用软件。</li><li>网络层防火墙： OSI模型下四层。<br>应用层防火墙/代理服务器：代理网关， OSI模型七层。</li></ul><h2 id="1-3-网络层防火墙"><a href="#1-3-网络层防火墙" class="headerlink" title="1.3. 网络层防火墙"></a>1.3. 网络层防火墙</h2><ul><li>包过滤防火墙</li><li>网络层对数据包进行选择，选择的依据是系统内设置的过滤逻辑，被称为访问控制列表（ACL），通过检查数据流中每个数据的源地址，目的地址，所用端口号和协议状态等因素，或他们的组合来确定是否允许该数据包通过。</li><li>优点：对用户来说透明，处理速度快且易于维护。</li><li>缺点：无法检查应用层数据，如病毒等。</li></ul><h2 id="1-4-应用层防火墙-代理服务型防火墙（Proxy-Service）"><a href="#1-4-应用层防火墙-代理服务型防火墙（Proxy-Service）" class="headerlink" title="1.4. 应用层防火墙/代理服务型防火墙（Proxy Service）"></a>1.4. 应用层防火墙/代理服务型防火墙（Proxy Service）</h2><ul><li>将所有跨越防火墙的网络通信链路分为两段。</li><li>内外网用户的访问都是通过代理服务器上的“链接”来实现。</li><li>优点： 在应用层对数据进行检查，比较安全。</li><li>缺点：增加防火墙的负载。</li></ul><p>现实生产环境中所使用的防火墙一般都是二者结合体。<br>即先检查网络数据，通过之后再送到应用层去检查。</p><h1 id="2-iptables的基本知识"><a href="#2-iptables的基本知识" class="headerlink" title="2. iptables的基本知识"></a>2. iptables的基本知识</h1><p>Netfilter组件</p><ul><li>内核空间，集成在linux内核中。</li><li>扩展各种网络服务的结构化底层框架。</li><li>内核中选取五个位置放了五个hook(勾子) function（INPUT、OUTPUT、FORWARD、PREROUTING、POSTROUTING），而这五个hook function向用户开放，用户可以通过一个命令工具（iptables）向其写入规则。</li><li>由信息过滤表（table）组成，包含控制IP包处理的规则集（rules），规则被分组放在链（chain）上。</li></ul><p>三种报文流向：</p><ul><li>流入本机：PREROUTING –&gt; INPUT –&gt; 用户空间进程</li><li>流出本机：用户空间进程 –&gt; OUTPUT –&gt; POSTROUTING</li><li>转发：PREROUTING –&gt; FORWARD –&gt; POSTROUTING</li></ul><p>防火墙工具</p><ul><li>iptables<br>命令行工具，工作在用户空间。<br>用来编写规则，写好的规则被送往netfilter，告诉内核如何去处理信息包。</li><li>firewalld<br>CentOS 7 引入了新的前端管理工具。<br>管理工具：<br>firewall-cmd 命令行<br>firewall-config 图形</li></ul><h1 id="3-iptables的组成"><a href="#3-iptables的组成" class="headerlink" title="3. iptables的组成"></a>3. iptables的组成</h1><p>iptables由五个表和五个链以及一些规则组成。</p><h2 id="3-1-五个表"><a href="#3-1-五个表" class="headerlink" title="3.1. 五个表"></a>3.1. 五个表</h2><p>table：filter、nat、mangle、raw、security</p><table><thead><tr><th>table</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td>filter</td><td style="text-align:left">过滤规则表，根据预定义的规则过滤符合条件的数据包。</td></tr><tr><td>nat</td><td style="text-align:left">network address translation 地址转换规则表。</td></tr><tr><td>mangle</td><td style="text-align:left">修改数据标记位规则表。</td></tr><tr><td>raw</td><td style="text-align:left">关闭NAT表上启用的连接跟踪机制，加快封包穿越防火墙速度。</td></tr><tr><td>security</td><td style="text-align:left">用于强制访问控制（MAC）网络规则，由Linux安全模块（如SELinux）实现。</td></tr></tbody></table><p>优先级由高到低的顺序为:security –&gt; raw –&gt; mangle –&gt; nat –&gt; filter</p><h2 id="3-2-五个内置链chain，对应5个钩子hook"><a href="#3-2-五个内置链chain，对应5个钩子hook" class="headerlink" title="3.2. 五个内置链chain，对应5个钩子hook"></a>3.2. 五个内置链chain，对应5个钩子hook</h2><ul><li>INPUT</li><li>OUTPUT</li><li>FORWARD</li><li>PREROUTING</li><li>POSTROUTING</li></ul><h2 id="3-3-Netfilter表和链对应关系"><a href="#3-3-Netfilter表和链对应关系" class="headerlink" title="3.3. Netfilter表和链对应关系"></a>3.3. Netfilter表和链对应关系</h2><ul><li>filter：INPUT, FORWARD, OUTPUT</li><li>nat：PREROUTING, INPUT, OUTPUT, POSTROUTING</li><li>mangle：5个都有</li><li>raw：PREROUTING, OUTPUT</li></ul><p><img src="/1545563453239.png" alt="1545563453239"></p><h1 id="4-IPTABLES和路由"><a href="#4-IPTABLES和路由" class="headerlink" title="4. IPTABLES和路由"></a>4. IPTABLES和路由</h1><h2 id="4-1-路由功能发生的时间点"><a href="#4-1-路由功能发生的时间点" class="headerlink" title="4.1. 路由功能发生的时间点"></a>4.1. 路由功能发生的时间点</h2><p>报文进入本机后</p><ul><li>判断目标主机是否为本机<ul><li>是：INPUT</li><li>否：FORWARD</li></ul></li></ul><p>报文离开本机之前</p><ul><li>判断由哪个接口送往下一跳</li></ul><p>内核中数据包的传输过程</p><p><img src="/1545563568936.png" alt="1545563568936"></p><h2 id="4-2-内核中数据包的传输过程"><a href="#4-2-内核中数据包的传输过程" class="headerlink" title="4.2. 内核中数据包的传输过程"></a>4.2. 内核中数据包的传输过程</h2><ul><li>当一个数据包进入网卡时，数据包首先进入PREROUTING链，内核根据数据包目的IP判断是否需要转送出去。</li><li>如果数据包就是进入本机的，数据包就会沿着图向下移动，到达INPUT链。数据包到达INPUT链后，任何进程都会收到它。本机上运行的程序可以发送数据包，这些数据包经过OUTPUT链，然后到达POSTROUTING链输出。</li><li>如果数据包是要转发出去的，且内核允许转发，数据包就会向右移动，经过FORWARD链，然后到达POSTROUTING链输出。</li></ul><h1 id="5-iptables规则"><a href="#5-iptables规则" class="headerlink" title="5. iptables规则"></a>5. iptables规则</h1><p>规则rule：根据规则的匹配条件尝试匹配报文，对匹配成功的报文根据规则定义的处理动作作出处理。</p><p>匹配条件：默认为与条件，同时满足</p><ul><li>基本匹配： IP，端口， TCP的Flags（SYN，ACK等）</li><li>扩展匹配：通过复杂高级功能匹配</li></ul><p>处理动作：称为target，跳转目标</p><ul><li>内建处理动作： ACCEPT，DROP，REJECT，SNAT，DNAT，MASQUERADE，MARK，LOG…</li><li>自定义处理动作：自定义chain，利用分类管理复杂情形。</li></ul><p>规则要添加在链上，才生效；添加在自定义上不会自动生效</p><p>链chain：</p><ul><li>内置链：每个内置链对应于一个钩子函数。</li><li>自定义链：用于对内置链进行扩展或补充，可实现更灵活的规则组织管理机制；只有Hook钩子调用自定义链时，才生效。</li></ul><h1 id="6-iptables添加要点"><a href="#6-iptables添加要点" class="headerlink" title="6. iptables添加要点"></a>6. iptables添加要点</h1><p>iptables规则添加时考量点</p><ul><li>要实现哪种功能：判断添加在哪张表上</li><li>报文流经的路径：判断添加在哪个链上</li><li>报文的流向：判断源和目的</li><li>匹配规则：业务需要</li></ul><p>链上规则的次序，即为检查的次序，因此隐含一定的法则</p><p>同类规则(访问同一应用)，匹配范围小的放上面<br>不同类规则(访问不同应用)，匹配到报文频率较大的放上面<br>将那些可由一条规则描述的多个规则合并为一个</p><p>iptables 规则优化</p><ul><li>安全放行所有入站和出站的状态为ESTABLISHED状态连接</li></ul><ul><li>谨慎放行入站的新请求</li><li>有特殊目的限制访问功能，要在放行规则之前加以拒绝</li><li>同类规则（访问同一应用），匹配范围小的放在前面，用于特殊处理</li><li>不同类的规则（访问不同应用），匹配范围大的放在前面</li><li>应该将那些可由一条规则能够描述的多个规则合并为一条</li><li>设置默认策略，建议白名单（只放行特定连接）</li><li>​    iptables -P，不建议</li><li>​    建议在规则的最后定义规则做为默认策略</li></ul><p>语法：iptables [-t table] 子命令 chain [-m 匹配条件 [模块选项]] -j 处理动作 [模块选项]</p><p>table:</p><p>raw, mangle, nat, [filter]默认</p><p>实验环境准备：<br>Centos7：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service</span><br></pre></td></tr></table></figure><p>Centos6：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service iptables stop</span><br><span class="line">chkconfig iptables off</span><br></pre></td></tr></table></figure><h1 id="7-iptables命令"><a href="#7-iptables命令" class="headerlink" title="7. iptables命令"></a>7. iptables命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">man 8 iptables</span><br><span class="line">iptables [-t table] &#123;-A|-C|-D&#125; chain rule-specification</span><br><span class="line">iptables [-t table] -I chain [rulenum] rule-specification</span><br><span class="line">iptables [-t table] -R chain rulenum rule-specification</span><br><span class="line">iptables [-t table] -D chain rulenum</span><br><span class="line">iptables [-t table] -S [chain [rulenum]]</span><br><span class="line">iptables [-t table] &#123;-F|-L|-Z&#125; [chain [rulenum]] [options...]</span><br><span class="line">iptables [-t table] -N chain</span><br><span class="line">iptables [-t table] -X [chain]</span><br><span class="line">iptables [-t table] -P chain target</span><br><span class="line">iptables [-t table] -E old-chain-name new-chain-name</span><br><span class="line">rule-specification = [matches...] [target]</span><br><span class="line">match = -m matchname [per-match-options]</span><br><span class="line">target = -j targetname [per-target-options]</span><br></pre></td></tr></table></figure><h1 id="8-用法："><a href="#8-用法：" class="headerlink" title="8. 用法："></a>8. 用法：</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables [-t table] SUBCOMMAND chain [-m matchname [per-match-options]] -j targetname [per-target-options]</span><br></pre></td></tr></table></figure><h1 id="9-选项"><a href="#9-选项" class="headerlink" title="9. 选项"></a>9. 选项</h1><h2 id="9-1-表"><a href="#9-1-表" class="headerlink" title="9.1. 表"></a>9.1. 表</h2><p>table，需要实现的功能</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-t table</span><br><span class="line"></span><br><span class="line">table的值：raw, mangle, nat, [filter]默认</span><br></pre></td></tr></table></figure><h2 id="9-2-SUBCOMMAND："><a href="#9-2-SUBCOMMAND：" class="headerlink" title="9.2. SUBCOMMAND："></a>9.2. SUBCOMMAND：</h2><p>1、 链管理：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">-P      Policy，设置默认策略；对filter表中的链而言，其默认策略有：</span><br><span class="line">        ACCEPT：接受</span><br><span class="line">        DROP：丢弃</span><br><span class="line"></span><br><span class="line">-N chain_name           new, 自定义一条新的规则链。</span><br><span class="line">-X chain_name           delete，删除自定义的、空的、规则链。</span><br><span class="line">-E old_name new_name    重命名自定义链；引用计数不为0的自定义链不能够被重命名，也不能被删除。</span><br><span class="line">示例：</span><br><span class="line">一、默认策略</span><br><span class="line">1. 黑名单</span><br><span class="line"><span class="comment"># iptables -P INPUT ACCEPT</span></span><br><span class="line"><span class="comment"># iptables -P OUTPUT ACCEPT</span></span><br><span class="line">2. 白名单</span><br><span class="line">2.1 白名单 之DROP</span><br><span class="line"><span class="comment"># iptables -P INPUT DROP</span></span><br><span class="line"><span class="comment"># iptables -P OUTPUT DROP</span></span><br><span class="line">2.2 白名单 之REJECT</span><br><span class="line"><span class="comment"># iptables -P INPUT DROP</span></span><br><span class="line"><span class="comment"># iptables -P OUTPUT DROP</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">二、自定义链</span><br><span class="line"><span class="comment"># iptables -A cifs_rules -p tcp --dport 139 -j ACCEPT</span></span><br><span class="line"><span class="comment"># iptables -A cifs_rules -p tcp --dport 445 -j ACCEPT</span></span><br><span class="line"><span class="comment"># iptables -A cifs_rules -p udp --dport 137:138 -j ACCEPT</span></span><br><span class="line"><span class="comment"># iptables -A cifs_rules -j RETURN</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># iptables -I INPUT 5 -s 172.18.0.0/16 -j cifs_rules</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># iptable -D INPUT 5          //删除引用</span></span><br><span class="line"><span class="comment"># iptable -F cifs_rules       //清空链规则</span></span><br><span class="line"><span class="comment"># iptable -X cifs_rules       //删除链</span></span><br></pre></td></tr></table></figure><p>2、查看：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-L      list, 列出指定链上的所有规则，本选项须置后。</span><br><span class="line">-n      numberic，以数字格式显示地址和端口号。</span><br><span class="line">-v      verbose，详细信息。</span><br><span class="line">-vv     更详细。</span><br><span class="line">-x      exactly，显示计数器结果的精确值，而非单位转换后的易读值。</span><br><span class="line">--line-numbers      显示规则的序号。</span><br><span class="line">-S      selected，以iptables-save 命令格式显示链上规则。</span><br><span class="line">常用组合：</span><br><span class="line">-vnL</span><br><span class="line">-vvnxL --line-numbers</span><br></pre></td></tr></table></figure><p>3、规则管理：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-A      append，追加</span><br><span class="line">-I      insert, 插入，要指明插入至的规则编号，默认为第一条。</span><br><span class="line">-D      delete，删除</span><br><span class="line">        (1) 指明规则序号。</span><br><span class="line">        (2) 指明规则本身。</span><br><span class="line">-R      replace，替换，将指定的规则替换为新规则；不能仅修改规则中的部分，而是整条规则完全替换</span><br><span class="line">-F      flush，清空指定的规则链。</span><br><span class="line">-Z      zero，置零。</span><br><span class="line">        iptables的每条规则都有两个计数器</span><br><span class="line">        (1) 匹配到的报文的个数。</span><br><span class="line">        (2) 匹配到的所有报文的大小之和。</span><br></pre></td></tr></table></figure><h2 id="9-3-chain："><a href="#9-3-chain：" class="headerlink" title="9.3. chain："></a>9.3. chain：</h2><p>PREROUTING， INPUT， FORWARD， OUTPUT， POSTROUTING<br>自定义链</p><h2 id="9-4-匹配条件"><a href="#9-4-匹配条件" class="headerlink" title="9.4. 匹配条件"></a>9.4. 匹配条件</h2><ul><li>基本：通用的， PARAMETERS</li><li>扩展：需加载模块， MATCH EXTENTIONS</li></ul><h2 id="9-5-基本匹配条件："><a href="#9-5-基本匹配条件：" class="headerlink" title="9.5. 基本匹配条件："></a>9.5. 基本匹配条件：</h2><p>无需加载模块，由iptables/netfilter自行提供。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[!] -s, --<span class="built_in">source</span> address[/mask][,...]       源IP地址或范围。不能是离散值。</span><br><span class="line">[!] -d, --destination address[/mask][,...]  目标IP地址或范围。</span><br><span class="line">[!] -p, --protocol protocol                 指定协议，可使用数字如0（all）。</span><br><span class="line">                                            protocol: tcp, udp, icmp, icmpv6, udplite, esp, ah, sctp, mh or “all“</span><br><span class="line">                                            参看： /etc/protocols</span><br><span class="line">[!] -i, --<span class="keyword">in</span>-interface name                 报文流入的接口；只能应用于数据报文流入环节，只应用于INPUT、 FORWARD、 PREROUTING链。</span><br><span class="line">[!] -o, --out-interface name                报文流出的接口；只能应用于数据报文流出的环节，只应用于FORWARD、 OUTPUT、 POSTROUTING链。</span><br></pre></td></tr></table></figure><h2 id="9-6-扩展匹配条件："><a href="#9-6-扩展匹配条件：" class="headerlink" title="9.6. 扩展匹配条件："></a>9.6. 扩展匹配条件：</h2><p>需要加载扩展模块（/usr/lib64/xtables/*.so），方可生效。</p><p>查看帮助</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man iptables-extensions</span><br></pre></td></tr></table></figure><h3 id="9-6-1-隐式扩展："><a href="#9-6-1-隐式扩展：" class="headerlink" title="9.6.1. 隐式扩展："></a>9.6.1. 隐式扩展：</h3><p>在使用-p选项指明了特定的协议时，无需再用-m选项指明扩展模块的扩展机制，不需要手动加载扩展模块。</p><p>1、tcp协议的扩展选项<br>-p tcp：隐含了-m tcp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[!] --<span class="built_in">source</span>-port, --sport port[:port]      匹配报文源端口，可为端口范围。</span><br><span class="line">[!] --destination-port,--dport port[:port]  匹配报文目标端口，可为范围。</span><br><span class="line">[!] --tcp-flags mask comp</span><br><span class="line">                                            mask 需检查的标志位列表，用分号（,）分隔</span><br><span class="line">                                                例如 SYN,ACK,FIN,RST</span><br><span class="line">                                            comp 在mask列表中必须为1的标志位列表，无指定则必须为0，用分号（,）分隔</span><br><span class="line">    示例：</span><br><span class="line">    --tcp-flags SYN,ACK,FIN,RST SYN 表示要检查的标志位为SYN,ACK,FIN,RST四个，其中SYN必须为1，余下的必须为0</span><br><span class="line">    --tcp-flags SYN,ACK,FIN,RST SYN,ACK</span><br><span class="line">    --tcp-flags ALL ALL</span><br><span class="line">    --tcp_flags ALL NONE</span><br><span class="line">[!] --syn                                   用于匹配第一次握手。</span><br><span class="line">                                            相当于： --tcp-flags SYN,ACK,FIN,RST SYN</span><br></pre></td></tr></table></figure><p>2、udp扩展<br>-p udp：隐含了-m udp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[!] --<span class="built_in">source</span>-port, --sport port[:port]      匹配报文的源端口或端口范围。</span><br><span class="line">[!] --destination-port,--dport port[:port]  匹配报文的目标端口或端口范围。</span><br></pre></td></tr></table></figure><p>3、icmp<br>-p icmp：隐含了-m icmp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[!] --icmp-type &#123;<span class="built_in">type</span>[/code]|typename&#125;</span><br><span class="line">    <span class="built_in">type</span>/code</span><br><span class="line">        0/0 <span class="built_in">echo</span>-reply      icmp应答</span><br><span class="line">        8/0 <span class="built_in">echo</span>-request    icmp请求</span><br></pre></td></tr></table></figure><h3 id="9-6-2-显式扩展："><a href="#9-6-2-显式扩展：" class="headerlink" title="9.6.2. 显式扩展："></a>9.6.2. 显式扩展：</h3><p>必须使用-m选项指明要调用的扩展模块的扩展机制，要手动加载扩展模块。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[-m matchname [per-match-options]]</span><br></pre></td></tr></table></figure><p>显式扩展：必须显式地指明使用的扩展模块进行的扩展。</p><p>使用帮助：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CentOS 6: man iptables</span><br><span class="line">CentOS 7: man iptables-extensions</span><br></pre></td></tr></table></figure><p>1、multiport扩展<br>以离散方式定义多端口匹配，最多指定15个端口。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[!] --<span class="built_in">source</span>-ports,--sports port[,port|,port:port]...</span><br><span class="line">指定多个源端口</span><br><span class="line"></span><br><span class="line">[!] --destination-ports,--dports port[,port|,port:port]...</span><br><span class="line">指定多个目标端口</span><br><span class="line"></span><br><span class="line">[!] --ports port[,port|,port:port]...</span><br><span class="line">多个源或目标端口</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">iptables -A INPUT -s 172.16.0.0/16 -d 172.16.100.10 -p tcp -m multiport --dports 20:22,80 -j ACCEPT</span><br></pre></td></tr></table></figure><p>2、iprange扩展<br>指明连续的（但一般不是整个网络）ip地址范围。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[!] --src-range from[-to]   源IP地址范围。</span><br><span class="line">[!] --dst-range from[-to]   目标IP地址范围。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">iptables -A INPUT -d 172.16.1.100 -p tcp --dport 80 -m iprange --src-range 172.16.1.5-172.16.1.10 -j DROP</span><br></pre></td></tr></table></figure><p>3、mac扩展<br>指明源MAC地址<br>适用于： PREROUTING，FORWARD，INPUT chains</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[!] --mac-source XX:XX:XX:XX:XX:XX</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">iptables -A INPUT -s 172.16.0.100 -m mac --mac-source 00:50:56:12:34:56 -j ACCEPT</span><br><span class="line">iptables -A INPUT -s 172.16.0.100 -j REJECT</span><br></pre></td></tr></table></figure><p>3、set扩展<br>依赖于ipset命令行工具；<br>set存在类型，常用的有两个：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">hash</span>:net 网络地址的集合</span><br><span class="line"><span class="built_in">hash</span>:ip  IP地址的集合</span><br></pre></td></tr></table></figure><p>使用方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//先创建集合：</span><br><span class="line">ipset create NAME TYPE</span><br><span class="line">//向集合添加元素：</span><br><span class="line">ipset add NAME ELEMENT</span><br><span class="line">示例：</span><br><span class="line">yum install ipset</span><br><span class="line">ipset create allowpinghosts <span class="built_in">hash</span>:ip   //如果是网段用<span class="built_in">hash</span>:net</span><br><span class="line">ipset list</span><br><span class="line">ipset add allowpinghosts 172.18.0.100</span><br><span class="line">ipset add allowpinghosts 172.18.0.200</span><br><span class="line">ipset list</span><br><span class="line">                </span><br><span class="line">iptables -I INPUT 4 -p icmp --icmp-type 8 -m <span class="built_in">set</span> --match-set allowpinghosts src -j ACCEPT</span><br><span class="line">iptables -I OUTPUT 4 -p icmp --icmp-type 0 -m <span class="built_in">set</span> --match-set allowpinghosts dst -j ACCEPT</span><br></pre></td></tr></table></figure><p>4、string扩展<br>对报文中的应用层数据做字符串模式匹配检测</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">--algo &#123;bm|kmp&#125;             字符串匹配检测算法  </span><br><span class="line">    bm： Boyer-Moore  </span><br><span class="line">    kmp： Knuth-Pratt-Morris  </span><br><span class="line">--from offset               开始偏移</span><br><span class="line">--to offset                 结束偏移</span><br><span class="line">[!] --string pattern        要检测的字符串模式</span><br><span class="line">[!] --hex-string pattern    要检测字符串模式， 16进制格式</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">iptables -I INPUT -m string --string <span class="string">"sex"</span> --algo bm -j REJECT</span><br><span class="line">iptables -I OUTPUT -m string --string <span class="string">"sex"</span> --algo bm -j REJECT</span><br></pre></td></tr></table></figure><p>5、time扩展<br>根据将报文到达的时间与指定的时间范围进行匹配。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">--datestart YYYY[-MM[-DD[Thh[:mm[:ss]]]]]   日期</span><br><span class="line">--datestop YYYY[-MM[-DD[Thh[:mm[:ss]]]]]</span><br><span class="line">--timestart hh:mm[:ss]                      时间</span><br><span class="line">--timestop hh:mm[:ss]</span><br><span class="line">[!] --monthdays day[,day...]                每个月的几号。</span><br><span class="line">[!] --weekdays day[,day...]                 星期几， 1 – 7 分别表示星期一到星期日。</span><br><span class="line">--kerneltz                                  内核时区，不建议使用，CentOS7系统默认为UTC。</span><br><span class="line">                                            注意：centos6 不支持kerneltz ，--localtz指定本地时区(默认)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">iptables -A INPUT -s 172.16.0.0/16 -d 172.16.100.10 -p tcp --dport 80 -m time --timestart 14:30 --timestop 18:30 --weekdays Sat,Sun --kerneltz -j DROP</span><br></pre></td></tr></table></figure><p>6、connlimit扩展<br>根据每客户端IP做并发连接数数量匹配。<br>可防止CC(Challenge Collapsar挑战黑洞)攻击。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">--connlimit-upto <span class="comment">#      连接的数量小于等于#时匹配</span></span><br><span class="line">--connlimit-above <span class="comment">#     连接的数量大于#时匹配</span></span><br><span class="line">上述二个选线通常分别与默认的拒绝或允许策略配合使用。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">iptables -A INPUT -d 172.16.100.10 -p tcp --dport 22 -m connlimit --connlimit-above 2 -j REJECT</span><br></pre></td></tr></table></figure><p>7、limit扩展<br>基于收发报文的速率做匹配。<br>令牌桶过滤器，令牌桶（bucket），突发尖峰</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">--<span class="built_in">limit</span> <span class="comment">#[/second|/minute|/hour|/day]</span></span><br><span class="line">--<span class="built_in">limit</span>-burst number</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">iptables -I INPUT -d 172.16.100.10 -p icmp --icmp-type 8 -m <span class="built_in">limit</span> --<span class="built_in">limit</span> 10/minute --<span class="built_in">limit</span>-burst 5 -j ACCEPT</span><br><span class="line">iptables -I INPUT 2 -p icmp -j REJECT</span><br></pre></td></tr></table></figure><p>8、state扩展<br>根据“连接追踪机制”去检查连接的状态。<br>较耗资源，消耗cpu，消耗内核空间的内存。</p><p>conntrack机制：追踪本机上的请求和响应之间的关系。</p><p>状态有如下几种：</p><ul><li>NEW：新发出请求；连接追踪信息库中不存在此连接的相关信息条目，因此，将其识别为第一次发出的请求。</li><li>ESTABLISHED： NEW状态之后，连接追踪信息库中为其建立的条目失效之前期间内所进行的通信状态。</li><li>RELATED：新发起的但与已有连接相关联的连接，如： ftp协议中的数据连接与命令连接之间的关系。</li><li>INVALID：无效的连接，如flag标记不正确。</li><li>UNTRACKED：未进行追踪的连接，如raw表中关闭追踪。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[!] --state state</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">iptables -F</span><br><span class="line"></span><br><span class="line">入栈方向:</span><br><span class="line">已建立的连接都放行</span><br><span class="line">22,21,139,445,80 NEW</span><br><span class="line">iptables -A INPUT -m state --state ESTABLISHED -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp -m multiport --dports 21:22,80,139,445 -m state --state NEW -j ACCEPT</span><br><span class="line">iptables -I INPUT 3 -p tcp -m state --state RELATED -j ACCEPT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">出栈方向:</span><br><span class="line">已建立的连接都放行</span><br><span class="line">iptables -A OUTPUT -m state --state ESTABLISHED -j ACCEPT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">默认策略</span><br><span class="line">iptables -A INPUT ! -i lo -j REJECT</span><br><span class="line">iptables -A OUTPUT ! -i lo -j REJECT</span><br><span class="line">可以合并</span><br><span class="line">iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT</span><br></pre></td></tr></table></figure><p>已经追踪到的并记录下来的连接信息库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/proc/net/nf_conntrack</span><br></pre></td></tr></table></figure><p>调整连接追踪功能所能够容纳的最大连接数量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/proc/sys/net/nf_conntrack_max</span><br></pre></td></tr></table></figure><p>不同的协议的连接追踪时长</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/proc/sys/net/netfilter/</span><br></pre></td></tr></table></figure><p>注意：CentOS7 需要加载模块：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">modprobe nf_conntrack</span><br></pre></td></tr></table></figure><p>iptables的链接跟踪表最大容量为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/proc/sys/net/nf_conntrack_max</span><br><span class="line">各种状态的超时链接会从表中删除；当模板满载时，后续连接可能会超时。</span><br></pre></td></tr></table></figure><p>解决方法两个：</p><p>(1) 加大nf_conntrack_max 值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysctl.conf</span><br><span class="line">net.nf_conntrack_max = 393216</span><br><span class="line">net.netfilter.nf_conntrack_max = 393216</span><br><span class="line">//不修改/etc/sysctl.conf文件内容，而是在/etc/sysctl.d/下单独创建一个配置文件nf_conntrack_max.conf</span><br><span class="line"></span><br><span class="line">vim /etc/sysctl.d/nf_conntrack_max.conf</span><br><span class="line">net.nf_conntrack_max = 1000000</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><p>(2) 降低 nf_conntrack timeout时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysctl.conf</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_established = 300</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_time_wait = 120</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_close_wait = 60</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_fin_wait = 120</span><br><span class="line">iptables -t nat -L -n</span><br></pre></td></tr></table></figure><p>开放被动模式的ftp服务</p><p>(1) 装载ftp连接追踪的专用模块：<br>跟踪模块路径：/lib/modules/kernelversion/kernel/net/netfilter</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/iptables-config      配置文件</span><br><span class="line">IPTABLES_MODULES=<span class="string">"nf_conntrack_ftp"</span></span><br><span class="line"></span><br><span class="line">vim /etc/sysconfig/modules/nf_conntrack.modules</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">/sbin/modprobe nf_conntrack_ftp</span><br><span class="line"></span><br><span class="line">modproble nf_conntrack_ftp</span><br><span class="line">modinfo nf_conntrack_ftp</span><br><span class="line">lsmod | grep nf_conntrack_ftp</span><br></pre></td></tr></table></figure><p>(2) 放行请求报文：<br>命令连接： NEW, ESTABLISHED<br>数据连接： RELATED, ESTABLISHED</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables –I INPUT -d LocalIP -p tcp -m state --state ESTABLISHED,RELATED -j ACCEPT</span><br><span class="line">iptables -A INPUT -d LocalIP -p tcp --dport 21 -m state --state NEW -j ACCEPT</span><br></pre></td></tr></table></figure><p>(3) 放行响应报文：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -I OUTPUT -s LocalIP -p tcp -m state --state ESTABLISHED -j ACCEPT</span><br></pre></td></tr></table></figure><p>开放被动模式的ftp服务示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum install vsftpd</span><br><span class="line">systemctl start vsftpd</span><br><span class="line">modprobe nf_conntrack_ftp</span><br><span class="line">iptables -F</span><br><span class="line">iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --dport 21 -m state --state NEW -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -m state --state ESTABLISHED -j ACCEPT</span><br><span class="line">iptables -P INPUT DROP</span><br><span class="line">iptables -P OUTPUT DROP</span><br><span class="line">iptables -vnL</span><br></pre></td></tr></table></figure><h2 id="9-7-处理动作："><a href="#9-7-处理动作：" class="headerlink" title="9.7. 处理动作："></a>9.7. 处理动作：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-j targetname [per-target-options]</span><br><span class="line">//target</span><br><span class="line">ACCEPT      接受</span><br><span class="line">DROP        丢弃</span><br><span class="line">REJECT      拒绝。弹回，快速断开。--reject-with:icmp-port-unreachable默认</span><br><span class="line">RETURN      返回调用链</span><br><span class="line">REDIRECT    端口重定向</span><br><span class="line">LOG         记录日志， dmesg</span><br><span class="line">MARK        做防火墙标记</span><br><span class="line">DNAT        目标地址转换</span><br><span class="line">SNAT        源地址转换</span><br><span class="line">MASQUERADE  地址伪装</span><br><span class="line">...</span><br><span class="line">自定义链：</span><br></pre></td></tr></table></figure><p>Target：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">LOG：非中断target，本身不拒绝和允许，放在拒绝和允许规则前，并将日志记录在/var/<span class="built_in">log</span>/messages系统日志中。</span><br><span class="line"></span><br><span class="line">--<span class="built_in">log</span>-level level </span><br><span class="line">级别： debug， info， notice, warning, error, crit, alert,emerg</span><br><span class="line"></span><br><span class="line">--<span class="built_in">log</span>-prefix prefix </span><br><span class="line">日志前缀，用于区别不同的日志，最多29个字符</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">iptables -I INPUT -s 10.0.1.0/24 -p tcp -m multiport --dports 80,21,22,23 -m state --state NEW -j LOG --<span class="built_in">log</span>-prefix <span class="string">"new connections: "</span></span><br></pre></td></tr></table></figure><h1 id="10-规则"><a href="#10-规则" class="headerlink" title="10. 规则"></a>10. 规则</h1><p>任何不允许的访问，应该在请求到达时给予拒绝。<br>规则在链接上的次序即为其检查时的生效次序。</p><p>基于上述，规则优化</p><ol><li>安全放行所有入站和出站的状态为ESTABLISHED状态连接。</li><li>谨慎放行入站的新请求。</li><li>有特殊目的限制访问功能，要在放行规则之前加以拒绝。</li><li>同类规则（访问同一应用），匹配范围小的放在前面，用于特殊处理。</li><li>不同类的规则（访问不同应用），匹配范围大的放在前面。</li><li>应该将那些可由一条规则能够描述的多个规则合并为一条。</li><li>设置默认策略，建议白名单（只放行特定连接）。<br>1） iptables -P，不建议。<br>2） 建议在规则的最后定义规则做为默认策略。</li></ol><h1 id="11-保存及加载规则"><a href="#11-保存及加载规则" class="headerlink" title="11. 保存及加载规则"></a>11. 保存及加载规则</h1><p>规则有效期限：<br>使用iptables命令定义的规则，手动删除之前，其生效期限为kernel存活期限。</p><h2 id="11-1-保存规则"><a href="#11-1-保存规则" class="headerlink" title="11.1. 保存规则"></a>11.1. 保存规则</h2><p>保存规则至指定的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">- CentOS 6</span><br><span class="line">service iptables save</span><br><span class="line">将规则覆盖保存至/etc/sysconfig/iptables文件中。</span><br><span class="line"></span><br><span class="line">- CentOS 7</span><br><span class="line">iptables-save &gt; /PATH/TO/SOME_RULES_FILE</span><br><span class="line">也可以保存至/etc/sysconfig/iptables文件中。</span><br><span class="line">/usr/libexec/iptables/iptables.init save</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">iptables-save &gt; /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure><h2 id="11-2-载入规则"><a href="#11-2-载入规则" class="headerlink" title="11.2. 载入规则"></a>11.2. 载入规则</h2><p>查看iptables.service，<br>里面start时会读取文件/etc/sysconfig/iptables，即自动从/etc/sysconfig/iptables 重新载入规则。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">CentOS 6：</span><br><span class="line">service iptables restart</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CentOS 7</span><br><span class="line">iptables-restore &lt; /PATH/FROM/SOME_RULES_FILE</span><br><span class="line"></span><br><span class="line">-n, --noflush   不清除原有规则</span><br><span class="line">-t, --<span class="built_in">test</span>      仅分析生成规则集，但不提交开机自动重载规则</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">iptables-restore &lt; /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure><p>开机自动重载规则文件中的规则：</p><p>(1) 用脚本保存各iptables命令；让此脚本开机后自动运行<br>/etc/rc.d/rc.local文件中添加脚本路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/rc.d/rc.local</span><br><span class="line">/PATH/TO/SOME_SCRIPT_FILE</span><br></pre></td></tr></table></figure><p>(2) 用规则文件保存各规则，开机时自动载入此规则文件中的规则<br>/etc/rc.d/rc.local文件添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/rc.d/rc.local</span><br><span class="line">iptables-restore &lt; /PATH/FROM/IPTABLES_RULES_FILE</span><br></pre></td></tr></table></figure><p>(3)自定义Unit File，进行iptables-restore</p><h1 id="12-网络防火墙"><a href="#12-网络防火墙" class="headerlink" title="12. 网络防火墙"></a>12. 网络防火墙</h1><p>iptables/netfilter网络防火墙：</p><ul><li>(1) 充当网关</li><li>(2) 使用filter表的FORWARD链</li></ul><p>注意的问题：</p><ul><li>(1) 请求-响应报文均会经由FORWARD链，要注意规则的方向性。</li><li>(2) 如果要启用conntrack机制，建议将双方向的状态为ESTABLISHED的报文直接放行。</li></ul><p>需要启用核心转发功能</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/proc/sys/net/ipv4/ip_forward</span><br><span class="line">sysctl -w net.ipv4.ip_forward=1</span><br></pre></td></tr></table></figure><p>示例环境：<br>主机C — （ip0）防火墙F（IP1） — 服务器S</p><table><thead><tr><th>主机</th><th>IP</th><th>服务，端口</th></tr></thead><tbody><tr><td>主机C</td><td>172.18.0.101</td><td></td></tr><tr><td>防火墙F</td><td>ip0：172.18.0.1 ip1：192.168.0.1</td><td></td></tr><tr><td>服务器S</td><td>192.168.0.66</td><td>httpd，80端口 dns，53 vsftpd，21，被动模式</td></tr></tbody></table><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1. 开启核心转发功能</span><br><span class="line"><span class="comment"># sysctl -w net.ipv4.ip_forward=1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2. 配置路由</span><br><span class="line"><span class="comment"># route add -net 192.168.10.0/24 gw 172.18.0.66</span></span><br><span class="line"><span class="comment"># route add -net default gw 172.18.0.66</span></span><br><span class="line">注意：其实开启核心转发功能会自动添加接口连接网络的路由。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3. 配置转发</span><br><span class="line">访问httpd、dns、vsftpd服务器</span><br><span class="line"><span class="comment"># iptables -A FORWARD -s 172.18.0.0/16 -p tcp -m multiport --dports 80,21,53 -m state --state NEW -j ACCEPT</span></span><br><span class="line"><span class="comment"># iptables -A FORWARD -s 172.18.0.0/16 -p udp --dport 53 -m state --state NEW -j ACCEPT</span></span><br><span class="line"><span class="comment"># iptables -A FORWARD -s 172.18.0.0./16 -p tcp -m state --state RELATED -j ACCEPT</span></span><br><span class="line"><span class="comment"># iptables -A FORWARD -m state --state ESTABLISHED -j ACCEPT</span></span><br><span class="line"><span class="comment"># iptables -A FORWARD -j DROP</span></span><br><span class="line">注意：(1) 方向：NEW、RELATED，自左至右。ESTABLISHED，双方向。</span><br></pre></td></tr></table></figure><h1 id="13-NAT"><a href="#13-NAT" class="headerlink" title="13. NAT"></a>13. NAT</h1><p>NAT：network address translation</p><ul><li>隐藏：设置初衷，用来隐藏请求报文中的地址信息。</li><li>解决ip地址不足问题。</li><li>请求报文：修改源/目标IP，自定义如何修改。</li><li>响应报文：修改源/目标IP，连接跟踪机制自动实现。</li></ul><p>SNAT：source NAT</p><ul><li>作用于POSTROUTING, INPUT</li><li>让本地网络中的主机通过某一特定地址访问外部网络，实现地址伪装。</li><li>请求报文：修改源IP</li></ul><p>DNAT：destination NAT</p><ul><li>作用于PREROUTING , OUTPUT</li><li>把本地网络中的主机上的某服务开放给外部网络访问(发布服务和端口映射)，但隐藏真实IP。</li><li>请求报文：修改目标IP</li></ul><p>PNAT：port nat，端口和IP都进行修改。</p><h1 id="14-SNAT"><a href="#14-SNAT" class="headerlink" title="14. SNAT"></a>14. SNAT</h1><h2 id="14-1-SNAT：固定IP"><a href="#14-1-SNAT：固定IP" class="headerlink" title="14.1. SNAT：固定IP"></a>14.1. SNAT：固定IP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">--to-source [ipaddr[-ipaddr]][:port[-port]]</span><br><span class="line">--random</span><br><span class="line">iptables -t nat -A POSTROUTING -s LocalNET ! -d LocalNet -j SNAT --to-source ExtIP</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line"><span class="comment"># iptables -t nat -A POSTROUTING -s 10.0.1.0/24 ! –d 10.0.1.0/24 -j SNAT --to-source 172.18.1.6-172.18.1.9</span></span><br></pre></td></tr></table></figure><p>讲解：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-s 10.0.1.0/24                      对源地址（-s 10.0.1.0/24）进行SNAT。</span><br><span class="line">-to-source 172.18.1.6-172.18.1.9    源地址转为（）。</span><br><span class="line">! –d 10.0.1.0/24                    不对内部网路隐藏源地址。可能有多个内部网络（网络接口）都要去除。</span><br></pre></td></tr></table></figure><h2 id="14-2-MASQUERADE：动态IP，如拨号网络"><a href="#14-2-MASQUERADE：动态IP，如拨号网络" class="headerlink" title="14.2. MASQUERADE：动态IP，如拨号网络"></a>14.2. MASQUERADE：动态IP，如拨号网络</h2><p>地址伪装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">--to-ports port[-port]</span><br><span class="line">--random</span><br><span class="line">iptables -t nat -A POSTROUTING -s LocalNET ! -d LocalNet -j MASQUERADE [--to-ports port[-port]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line"><span class="comment"># iptables -t nat -A POSTROUTING -s 10.0.1.0/24 ! –d 10.0.1.0/24 -j MASQUERADE</span></span><br></pre></td></tr></table></figure><h1 id="15-DNAT"><a href="#15-DNAT" class="headerlink" title="15. DNAT"></a>15. DNAT</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--to-destination [ipaddr[-ipaddr]][:port[-port]]</span><br><span class="line"><span class="comment"># iptables -t nat -A PREROUTING -d ExtIP -p tcp|udp --dport PORT -j DNAT --to-destination InterSeverIP[:PORT]</span></span><br></pre></td></tr></table></figure><h2 id="15-1-DNAT"><a href="#15-1-DNAT" class="headerlink" title="15.1. DNAT"></a>15.1. DNAT</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line"><span class="comment"># iptables -t nat -A PREROUTING -s 0/0 -d 172.18.100.6 -p tcp --dport 22 -j DNAT --to-destination 10.0.1.22</span></span><br><span class="line"><span class="comment"># iptables -t nat -A PREROUTING -s 0/0 -d 172.18.100.6 -p tcp --dport 80 -j DNAT --to-destination 10.0.1.22</span></span><br></pre></td></tr></table></figure><h2 id="15-2-PAT"><a href="#15-2-PAT" class="headerlink" title="15.2. PAT"></a>15.2. PAT</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line"><span class="comment"># iptables -t nat -A PREROUTING -s 0/0 -d 172.18.100.6 -p tcp --dport 80 -j DNAT --to-destination 10.0.1.22:8080</span></span><br><span class="line"></span><br><span class="line">假设mysql在内网工作在正常服务端口，但告知外面工作在6789端口上</span><br><span class="line"><span class="comment"># iptables -t nat -A PREROUTING -d 10.0.10.62 -p tcp --dport 6789 -j DNAT --to-destination 192.168.0.110:3306</span></span><br></pre></td></tr></table></figure><h2 id="15-3-REDIRECT"><a href="#15-3-REDIRECT" class="headerlink" title="15.3. REDIRECT"></a>15.3. REDIRECT</h2><p>可用于： PREROUTING OUTPUT 自定义链<br>通过改变目标IP和端口，将接受的包转发至不同端口。响应报文也是由连接追踪自动修改的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--to-ports port[-port]</span><br><span class="line">示例：</span><br><span class="line">iptables -t nat -A PREROUTING -d 172.16.100.10 -p tcp --dport 80 -j REDIRECT --to-ports 8080</span><br></pre></td></tr></table></figure><p>讲解：普通用户不能使用小于1024端口。例如httpd默认端口为80。普通用户可监听在8080端口。当有访问80端口的请求到达时，请求会被重定向到8080端口。</p><h1 id="16-练习"><a href="#16-练习" class="headerlink" title="16. 练习"></a>16. 练习</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dns, httpd: ALL</span><br><span class="line">nfs, smaba, vsftpd: LOCALNET</span><br><span class="line">mysql: LOCALHOST</span><br><span class="line">ping: ALL, 10/minute</span><br><span class="line">ssh: 3conns/IP, worktime</span><br></pre></td></tr></table></figure><p>一、禁用selinux和firewalld</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># setenforce 0</span></span><br><span class="line"><span class="comment"># sed -i 's/^SELINUX=.*/SELINUX=disabled/' /etc/selinux/config</span></span><br><span class="line"><span class="comment"># systemctl stop firewalld</span></span><br><span class="line"><span class="comment"># systemctl disable firewalld</span></span><br></pre></td></tr></table></figure><p>二、安装软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install -y httpd nfs-utils samba bind mariadb-server vsftpd iptables-services</span></span><br><span class="line"><span class="comment"># systemctl start httpd nfs smb named mariadb vsftpd iptables</span></span><br><span class="line"><span class="comment"># systemctl enable httpd nfs smb named mariadb vsftpd iptables</span></span><br></pre></td></tr></table></figure><p>三、iptables配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># iptables -P INPUT ACCEPT</span></span><br><span class="line"><span class="comment"># iptables -P OUTPUT ACCEPT</span></span><br><span class="line"><span class="comment"># iptables -F</span></span><br></pre></td></tr></table></figure><p>开始配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">1. ssh: 3conns/IP, worktime</span><br><span class="line"><span class="comment"># iptables -A INPUT -p tcp --dport 22 -m connlimit --connlimit-upto 3 -m time --timestart 8:00 --timestop 18:00 --weekdays 1,2,3,4,5 --kerneltz -j ACCEPT</span></span><br><span class="line"><span class="comment"># iptables -A OUTPUT -p tcp --sport 22 -j ACCEPT</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2. dns, httpd: ALL</span><br><span class="line">//dns</span><br><span class="line"><span class="comment"># iptables -I INPUT -p udp --dport 53 -j ACCEPT</span></span><br><span class="line"><span class="comment"># iptables -I OUTPUT -p udp --sport 53 -j ACCEPT</span></span><br><span class="line">//httpd</span><br><span class="line"><span class="comment"># iptables -I INPUT -p tcp --dport 80 -j ACCEPT</span></span><br><span class="line"><span class="comment"># iptables -I OUTPUT -p tcp --sport 80 -j ACCEPT</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3. nfs, samba, vsftpd: LOCALNET</span><br><span class="line">//samba</span><br><span class="line"><span class="comment"># iptables -I INPUT -p tcp -s 192.168.10.0/24 -m multiport --dports 139,445 -j ACCEPT</span></span><br><span class="line"><span class="comment"># iptables -I OUTPUT -p tcp -d 192.168.10.0/24 -m multiport --sports 139,445 -j ACCEPT</span></span><br><span class="line"></span><br><span class="line">//nfs</span><br><span class="line"><span class="comment"># iptables -I INPUT -p tcp -s 192.168.10.0/24 -m multiport --dports 111,2049,875,32803,32769,892,662,2020 -j ACCEPT </span></span><br><span class="line"><span class="comment"># iptables -I INPUT -p udp -s 192.168.10.0/24 -m multiport --dports 111,2049 -j ACCEPT </span></span><br><span class="line"></span><br><span class="line">//vsftpd</span><br><span class="line"><span class="comment"># modprobe nf_conntrack_ftp</span></span><br><span class="line"><span class="comment"># iptables -I INPUT -p tcp --dport 21 -s 192.168.10.0/24 -m state --state NEW -j ACCEPT</span></span><br><span class="line"><span class="comment"># iptables -I INPUT -s 192.168.10.0/24 -m state --state RELATED -j ACCEPT</span></span><br><span class="line"><span class="comment"># iptables -I INPUT -s 192.168.10.0/24 -m state --state ESTABLISHED -j ACCEPT</span></span><br><span class="line"><span class="comment"># iptables -I OUTPUT -d 192.168.10.0/24 -m state --state ESTABLISHED -j ACCEPT</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4. mysql: LOCALHOST</span><br><span class="line"><span class="comment"># iptables -I INPUT -p tcp --dport 3306 -i lo -j ACCEPT</span></span><br><span class="line"><span class="comment"># iptables -I OUTPUT -p tcp --sport 3306 -o lo -j ACCEPT</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5. ping: ALL, 10/minute</span><br><span class="line"><span class="comment"># iptables -I INPUT -p icmp --icmp-type 8 -m limit --limit 10/minute -j ACCEPT</span></span><br><span class="line"><span class="comment"># iptables -I OUTPUT -p icmp --icmp-type 0 -j ACCEPT</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x. 最后的drop策略</span><br><span class="line"><span class="comment"># iptables -A INPUT ! -i lo -j DROP</span></span><br><span class="line"><span class="comment"># iptables -A OUTPUT ! -o lo -j DROP</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;iptables&quot;&gt;&lt;a href=&quot;#iptables&quot; class=&quot;headerlink&quot; title=&quot;iptables&quot;&gt;&lt;/a&gt;iptables&lt;/h1&gt;
    
    </summary>
    
    
      <category term="L·H" scheme="http://yoursite.com/tags/L%C2%B7H/"/>
    
  </entry>
  
  <entry>
    <title>shell脚本进阶和条件语句</title>
    <link href="http://yoursite.com/2018/10/19/shell%E8%84%9A%E6%9C%AC%E8%BF%9B%E9%98%B6%E5%92%8C%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5/"/>
    <id>http://yoursite.com/2018/10/19/shell脚本进阶和条件语句/</id>
    <published>2018-10-19T10:18:18.000Z</published>
    <updated>2019-03-23T06:33:06.332Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h1><p>单分支<br>if 判断条件;then<br>条件为真的分支代码<br>fi<br>双分支<br>if 判断条件; then<br>条件为真的分支代码<br>else<br>条件为假的分支代码<br>fi<br>多分支<br>if 判断条件1; then<br>条件1为真的分支代码<br>elif 判断条件2; then<br>条件2为真的分支代码<br>elif 判断条件3; then<br>条件3为真的分支代码<br>else<br>以上条件都为假的分支代码<br>fi</p><h2 id="if示例"><a href="#if示例" class="headerlink" title="if示例"></a>if示例</h2><p>根据命令的退出状态来执行命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ping -c1 -W2 station1 &amp;&gt; /dev/null; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'Station1 is UP'</span></span><br><span class="line"><span class="keyword">elif</span> grep <span class="string">"station1"</span> ~/maintenance.txt &amp;&gt; /dev/null; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'Station1 is undergoing maintenance‘</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">echo '</span>Station1 is unexpectedly DOWN!<span class="string">'</span></span><br><span class="line"><span class="string">exit 1</span></span><br><span class="line"><span class="string">fi</span></span><br></pre></td></tr></table></figure></p><h1 id="case语句"><a href="#case语句" class="headerlink" title="case语句"></a>case语句</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> 变量引用 <span class="keyword">in</span></span><br><span class="line">PAT1)</span><br><span class="line">分支1</span><br><span class="line">;;</span><br><span class="line">PAT2)</span><br><span class="line">分支2</span><br><span class="line">;;</span><br><span class="line">...</span><br><span class="line">*)</span><br><span class="line">默认分支</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">case</span>支持glob风格的通配符：</span><br><span class="line">*: 任意长度任意字符</span><br><span class="line">?: 任意单个字符</span><br><span class="line">[]：指定范围内的任意单个字符</span><br><span class="line">a|b: a或b</span><br></pre></td></tr></table></figure><h3 id="选菜菜单"><a href="#选菜菜单" class="headerlink" title="选菜菜单"></a>选菜菜单</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="variable">$number</span> <span class="keyword">in</span></span><br><span class="line">1|2|3)</span><br><span class="line">cmd1</span><br><span class="line">;;</span><br><span class="line">4|5|6)</span><br><span class="line">cmd1</span><br><span class="line">;;</span><br><span class="line">...</span><br><span class="line">*)</span><br><span class="line">cmd6</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">case</span>脚本</span><br><span class="line">cat  &lt;&lt;EOF</span><br><span class="line">1:lamian</span><br><span class="line">2:gaifan</span><br><span class="line">3:jiaozi</span><br><span class="line">4:baozi</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 选菜菜单  vim xuancai.sh</span></span><br><span class="line">PS3=<span class="string">"Please input a number:"</span></span><br><span class="line">select MENU <span class="keyword">in</span> lamian huimian gaifan jiaozi baozi quit;<span class="keyword">do</span></span><br><span class="line">        <span class="keyword">case</span> <span class="variable">$REPLY</span> <span class="keyword">in</span></span><br><span class="line">        1|2)</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"The price is 15元"</span></span><br><span class="line">                ;;</span><br><span class="line">        3|5)</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"The price is 20元"</span></span><br><span class="line">                ;;</span><br><span class="line">        4)</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"The price is 25元"</span></span><br><span class="line">        ;;</span><br><span class="line">        6)</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"bye"</span></span><br><span class="line">                <span class="built_in">break</span></span><br><span class="line">                ;;</span><br><span class="line">        *)</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"Input false"</span></span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><strong>执行命令</strong><br>bash xuancai.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">read</span> -p <span class="string">"Please choose menu num: "</span> menu</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$menu</span> <span class="keyword">in</span></span><br><span class="line">1|2）</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"lamian gaifan 15元 "</span></span><br><span class="line">;;</span><br><span class="line">3|4)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"jiaozi baozi 10元"</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"wrong"</span></span><br></pre></td></tr></table></figure><p>例如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">read</span> -p <span class="string">"Do you agree(yes or no)? "</span> ans</span><br><span class="line">ans= <span class="string">'echo "$ans|tr '</span>a-z<span class="string">' '</span>A-Z<span class="string">'" '</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$ans</span> <span class="keyword">in</span></span><br><span class="line">y|yes)</span><br><span class="line"><span class="built_in">echo</span> yes</span><br><span class="line">;;</span><br><span class="line">n|no)</span><br><span class="line"><span class="built_in">echo</span> no</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> wrong</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure></p><h1 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h1><p>for适用于有列表的循环<br>while适合没有列表的循环，比较通用<br>until与while条件相反</p><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><p>for 变量名 in 列表;do<br>循环体<br>done<br>执行机制：<br>依次将列表中的元素赋值给“变量名”; 每次赋值后即执行一次循环体; 直<br>到列表中的元素耗尽，循环结束<br>for特殊格式<br>双小括号方法，即((…))格式，也可以用于算术运算<br>双小括号方法也可以使bash Shell实现C语言风格的变量操作<br>I=10<br>((I++))<br>for循环的特殊格式：<br>for ((控制变量初始化;条件判断表达式;控制变量的修正表达式))<br>do<br>循环体<br>done<br>控制变量初始化：仅在运行到循环代码段时执行一次<br>控制变量的修正表达式：每轮循环结束会先进行控制变量修正运算，而后再做<br>条件判断<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>     ;<span class="keyword">do</span></span><br><span class="line">      <span class="keyword">for</span>    ;<span class="keyword">do</span></span><br><span class="line">         <span class="keyword">if</span>        ;<span class="keyword">then</span></span><br><span class="line">             <span class="built_in">continue</span>,<span class="built_in">break</span>(默认1,2为退出，执行外层循环)</span><br><span class="line">         <span class="keyword">fi</span></span><br><span class="line">      <span class="keyword">done</span></span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">done</span></span><br><span class="line">lastb  查询其他人登陆失败的信息</span><br><span class="line">&amp;&gt; /dev/null  <span class="comment">#将输出结果扔到垃圾箱，不在屏幕显示</span></span><br><span class="line">防止dos攻击，将攻击的ip地址放到/data/cracker_ip.log中</span><br><span class="line">netstat -nat|sed -nr <span class="string">'/^tcp /s/.*  ([1-9].*):.*/\1/p'</span>|sort  |uniq -c |<span class="keyword">while</span> <span class="built_in">read</span> iplist ;<span class="keyword">do</span></span><br><span class="line">        linknum=`<span class="built_in">echo</span> <span class="variable">$iplist</span>|cut -d<span class="string">" "</span> -f1`</span><br><span class="line">        ip=`<span class="built_in">echo</span> <span class="variable">$iplist</span>|cut -d<span class="string">" "</span> -f2`</span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$linknum</span> -ge 2 ];<span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$ip</span> &gt;&gt; /data/cracker_ip.log</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 象棋方块</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..8&#125;;<span class="keyword">do</span></span><br><span class="line">        temp1=$[ <span class="variable">$i</span> % 2 ]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> &#123;1..8&#125;;<span class="keyword">do</span></span><br><span class="line">        temp2=$[ <span class="variable">$j</span> % 2 ]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$temp1</span> -eq  <span class="variable">$temp2</span>  ];<span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> -e -n <span class="string">"\033[47m  \033[0m"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">echo</span> -e -n <span class="string">"\033[41m  \033[0m"</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">echo</span> </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="实验：输入一个行号，打印一个等腰三角形"><a href="#实验：输入一个行号，打印一个等腰三角形" class="headerlink" title="实验：输入一个行号，打印一个等腰三角形"></a>实验：输入一个行号，打印一个等腰三角形</h3><p>如图：<br><img src="https://img-blog.csdnimg.cn/20181106160700716.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzU1MTE1Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#********************************************************************</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"Please input line: "</span> line</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq <span class="variable">$line</span>`;<span class="keyword">do</span></span><br><span class="line">        <span class="built_in">let</span> star=<span class="variable">$i</span>*2-1</span><br><span class="line">        <span class="built_in">let</span> space=<span class="variable">$line</span>-<span class="variable">$i</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> `seq <span class="variable">$space</span>`;<span class="keyword">do</span></span><br><span class="line">                <span class="built_in">echo</span> -n <span class="string">" "</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> `seq <span class="variable">$star</span>`;<span class="keyword">do</span></span><br><span class="line">                <span class="built_in">echo</span> -n <span class="string">"*"</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">        <span class="built_in">echo</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="批量ping一个网络ID中的254个IP地址，并把能够Ping通的地址放到：-tmp-iplist-log"><a href="#批量ping一个网络ID中的254个IP地址，并把能够Ping通的地址放到：-tmp-iplist-log" class="headerlink" title="批量ping一个网络ID中的254个IP地址，并把能够Ping通的地址放到：/tmp/iplist.log"></a>批量ping一个网络ID中的254个IP地址，并把能够Ping通的地址放到：/tmp/iplist.log</h3><p>例如ping百度的IP：123.125.115.110<br>bash scanip00.sh  输入正确格式的IP地址<br><img src="https://img-blog.csdnimg.cn/20181106152508960.png" alt="ping"><br>cat /tmp/iplist.log<br>结果<br><img src="https://img-blog.csdnimg.cn/20181106152703455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzU1MTE1Mg==,size_16,color_FFFFFF,t_70" alt="能够Ping通的IP"><br><strong>代码</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#********************************************************************</span></span><br><span class="line"><span class="comment">#scanip00.sh    # 脚本名</span></span><br><span class="line">&gt; /tmp/iplist.log   <span class="comment">#每次运行前清空该文件内容</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"Please input a netid:(eg:192.168.34.0) "</span> netid  <span class="comment">#输入IP</span></span><br><span class="line">netid=`<span class="built_in">echo</span> <span class="variable">$netid</span> | sed -nr <span class="string">'s#(.*)\..*#\1#p'</span>`</span><br><span class="line"><span class="built_in">echo</span> netid=<span class="variable">$netid</span></span><br><span class="line"><span class="keyword">for</span> id <span class="keyword">in</span> &#123;1..254&#125;;<span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span> ping -c1 -w1  <span class="variable">$netid</span>.<span class="variable">$id</span> &amp;&gt;/dev/null ;<span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"<span class="variable">$netid</span>.<span class="variable">$id</span>"</span> &gt;&gt; /tmp/iplist.log  <span class="comment">#ping通的放入文件</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$netid</span>.<span class="variable">$id</span> is up</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$netid</span>.<span class="variable">$id</span> is down</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        &#125;&amp;                  <span class="comment">#并行执行</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">wait</span></span><br></pre></td></tr></table></figure></p><p><strong>计算从1加到100</strong><br>echo {1..100}|tr ‘ ‘ +|bc   管道计算得出5050<br>或者写一个脚本<br>sum.sh<br>sum=0<br>for i in {1..100};do<br>let sum=sum+i<br>done<br>echo sum=$sum<br>bash sum.sh  得出5050</p><h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><p>while CONDITION; do<br>循环体<br>done<br>CONDITION：循环控制条件；进入循环之前，先做一次判断；每一次循环之后<br>会再次做判断；条件为“true”，则执行一次循环；直到条件测试状态为“false”<br>终止循环<br>因此：CONDTION一般应该有循环控制变量；而此变量的值会在循环体不断地被<br>修正<br>进入条件：CONDITION为true<br>退出条件：CONDITION为false</p><h1 id="函数调用-function待整理"><a href="#函数调用-function待整理" class="headerlink" title="函数调用(function待整理)"></a>函数调用(function待整理)</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">version</span></span>()&#123;</span><br><span class="line">        sed -nr <span class="string">'s/.* ([0-9]+)\..*/\1/p'</span> /etc/centos-release</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">sysinfo</span></span>()&#123;</span><br><span class="line">        <span class="built_in">local</span> name=wang</span><br><span class="line">        <span class="built_in">echo</span> sysinfo:<span class="variable">$name</span></span><br><span class="line">        <span class="built_in">echo</span> Hostname is `hostname`</span><br><span class="line">        <span class="built_in">echo</span> OS version is `version`</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">ipaddr</span></span>()&#123;</span><br><span class="line">        ifconfig <span class="variable">$1</span>|sed -nr <span class="string">'2s/.*inet (addr:)?([^ ]+).*/\2/p'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">is_digit</span></span>()&#123;</span><br><span class="line">        [[ <span class="string">"<span class="variable">$1</span>"</span> =~ ^[0-9]+$ ]] &amp;&amp; <span class="literal">true</span> || <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;if语句&quot;&gt;&lt;a href=&quot;#if语句&quot; class=&quot;headerlink&quot; title=&quot;if语句&quot;&gt;&lt;/a&gt;if语句&lt;/h1&gt;&lt;p&gt;单分支&lt;br&gt;if 判断条件;then&lt;br&gt;条件为真的分支代码&lt;br&gt;fi&lt;br&gt;双分
      
    
    </summary>
    
    
      <category term="L·H" scheme="http://yoursite.com/tags/L%C2%B7H/"/>
    
  </entry>
  
  <entry>
    <title>网络配置及route路由</title>
    <link href="http://yoursite.com/2018/10/18/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%E5%8F%8Aroute%E8%B7%AF%E7%94%B1/"/>
    <id>http://yoursite.com/2018/10/18/网络配置及route路由/</id>
    <published>2018-10-18T10:18:18.000Z</published>
    <updated>2018-11-08T13:08:06.636Z</updated>
    
    <content type="html"><![CDATA[<h1 id="修改主机名hostname"><a href="#修改主机名hostname" class="headerlink" title="修改主机名hostname"></a>修改主机名hostname</h1><p>centos6<br>vim /etc/sysconfig/network 写入HOSTNAME=centos666.localdomain<br>hostname centos666.localdomain<br>最后exit退出或者exec bash刷新下缓存</p><p>centos7 设置主机名<br>hostnamectl set-hostname centos777.localdomain<br>最后exit退出或者exec bash刷新下缓存</p><p>注：修改完成后最好将hosts里的主机名中添加新修改的主机名<br>vim /etc/hosts<br>在127回环地址后将加上修改的新主机名</p><h1 id="ip和ifconfig的使用"><a href="#ip和ifconfig的使用" class="headerlink" title="ip和ifconfig的使用"></a>ip和ifconfig的使用</h1><p>ifconfig,route,netstat<br>ip:object{link,addr,route},ss,tc<br>systtem-config-network-tui,setup<br>ip a 查询网卡<br>ip addr add =ip a a 缩写<br>例子：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ip a a 1.1.1.1/24 dev eth0 <span class="comment">#添加网卡地址</span></span><br><span class="line">ipdown ipup 禁用启用网卡</span><br><span class="line">ifconfig eth1 172.18.0.55/24</span><br><span class="line">ifconfig eth1:2 172.18.0.60/24网卡别名，复制一个网卡，实现一个物理网卡绑定多个IP</span><br><span class="line">ip addr del 1.1.1.1/24 dev eth0 <span class="comment">#删除网卡地址</span></span><br></pre></td></tr></table></figure></p><p>netstat命令<br>显示网络连接：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">netstat [--tcp|-t] [--udp|-u] [--raw|-w] [--listening|-l] [--all|-a] [--</span><br><span class="line">numeric|-n] [--extend|-e[--extend|-e]] [--program|-p]</span><br><span class="line">-t: tcp协议相关</span><br><span class="line">-u: udp协议相关</span><br><span class="line">-w: raw socket相关</span><br><span class="line">-l: 处于监听状态</span><br><span class="line">-a: 所有状态</span><br><span class="line">-n: 以数字显示IP和端口</span><br><span class="line">-e：扩展格式</span><br><span class="line">-p: 显示相关进程及PID</span><br><span class="line">显示路由表：</span><br><span class="line">netstat &#123;--route|-r&#125; [--numeric|-n]</span><br><span class="line">-r: 显示内核路由表</span><br><span class="line">-n: 数字格式</span><br><span class="line">显示接口统计数据：</span><br><span class="line">netstat &#123;--interfaces|-I|-i&#125; [iface] [--all|-a] [--extend|-e] [--program|-p]</span><br><span class="line">[--numeric|-n]</span><br><span class="line">netstat -i</span><br><span class="line">netstat –I=IFACE</span><br><span class="line">ifconfig -s eth0</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">ss</span><br><span class="line">ss -nt 查询连接的用户</span><br><span class="line">ss [OPTION]... [FILTER]</span><br><span class="line"> netstat通过遍历proc来获取socket信息，ss使用netlink与内核tcp_diag模块通信获取socket信息。</span><br><span class="line">选项：</span><br><span class="line">-t: tcp协议相关</span><br><span class="line">-u: udp协议相关</span><br><span class="line">-w: 裸套接字相关</span><br><span class="line">-x：unix sock相关</span><br><span class="line">-l: listen状态的连接</span><br><span class="line">-a: 所有</span><br><span class="line">-n: 数字格式</span><br><span class="line">-p: 相关的程序及PID</span><br><span class="line">-e: 扩展的信息</span><br><span class="line">-m：内存用量</span><br><span class="line">-o：计时器信息</span><br><span class="line">常见用法</span><br><span class="line">ss -l 显示本地打开的所有端口</span><br><span class="line">ss -pl 显示每个进程具体打开的socket</span><br><span class="line">ss -t -a 显示所有tcp socket</span><br><span class="line">ss -u -a 显示所有的UDP Socekt</span><br><span class="line">ss -o state established <span class="string">'( dport = :ssh or sport = :ssh )'</span> 显示所有已建立的ssh连接</span><br><span class="line">ss -o state established <span class="string">'( dport = :http or sport = :http )'</span> 显示所有已建立的HTTP连接</span><br><span class="line">ss -s 列出当前socket详细信息</span><br></pre></td></tr></table></figure><h1 id="网络配置文件"><a href="#网络配置文件" class="headerlink" title="网络配置文件"></a>网络配置文件</h1><p>IP、MASK、GW、DNS相关配置文件：/etc/sysconfig/network-<br>scripts/ifcfg-IFACE<br>路由相关的配置文件：</p><blockquote><p>/etc/sysconfig/network-scripts/route-IFACE<br>/etc/sysconfig/network-scripts/ifcfg-IFACE：<br>DEVICE：此配置文件应用到的设备<br>HWADDR：对应的设备的MAC地址<br>BOOTPROTO：激活此设备时使用的地址配置协议，常用的dhcp, static,<br>none, bootp<br>NM_CONTROLLED：NM是NetworkManager的简写，此网卡是否接受<br>NM控制；建议CentOS6为“no”<br>ONBOOT：在系统引导时是否激活此设备<br>TYPE：接口类型；常见有的Ethernet, Bridge<br>UUID：设备的惟一标识<br>IPADDR：指明IP地址<br>NETMASK：子网掩码<br>GATEWAY: 默认网关<br>DNS1：第一个DNS服务器指向<br>DNS2：第二个DNS服务器指向<br>USERCTL：普通用户是否可控制此设备<br>PEERDNS：如果BOOTPROTO的值为“dhcp”，是否允许dhcp server分配的dns服务器指向信息直接覆盖至/etc/resolv.conf文件中</p></blockquote><h1 id="route路由"><a href="#route路由" class="headerlink" title="route路由"></a>route路由</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">route</span><br><span class="line">目标：192.168.1.1 网关：172.16.0.1</span><br><span class="line">route add -default gw 192.168.1.1                                                          <span class="comment">#添加默认路由</span></span><br><span class="line">route add -host 192.168.1.6 gw 172.16.0.1 dev eth0                                       <span class="comment">#添加主机路由</span></span><br><span class="line">route add -net 192.168.1.6 netmask 255.255.255.0 gw 172.16.0.1 dev eth0   <span class="comment">#添加网络路由</span></span><br><span class="line">route add -net 192.168.1.6/24 gw 172.16.0.1 dev eth0                                   <span class="comment">#添加网络路由  </span></span><br><span class="line">route del 删除路由，同add</span><br><span class="line">tcpdump -nn icmp    抓包（IP地址）</span><br><span class="line">tcpdump -e -nn -s0   抓包（基于MAC地址）</span><br><span class="line">quagga 动态路由协议管理包</span><br></pre></td></tr></table></figure><p>配置路由<br>/etc/sysconfig/network-scripts/route-IFACE<br>两种风格：<br>(1) TARGET via GW<br>如：10.0.0.0/8 via 172.16.0.1<br>(2) 每三行定义一条路由<br>ADDRESS#=TARGET<br>NETMASK#=mask<br>GATEWAY#=GW</p><h1 id="nmcli命令"><a href="#nmcli命令" class="headerlink" title="nmcli命令"></a>nmcli命令</h1><p>地址配置工具：nmcli<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">nmcli [ OPTIONS ] OBJECT &#123; COMMAND | <span class="built_in">help</span> &#125;</span><br><span class="line">device - show and manage network interfaces</span><br><span class="line">nmcli device <span class="built_in">help</span></span><br><span class="line">connection - start, stop, and manage network connections</span><br><span class="line">nmcli connection <span class="built_in">help</span></span><br><span class="line">修改IP地址等属性：</span><br><span class="line">nmcli connection modify IFACE [+|-]setting.property value</span><br><span class="line">setting.property:</span><br><span class="line">ipv4.addresses ipv4.gateway</span><br><span class="line">ipv4.dns1 ipv4.method manual | auto</span><br><span class="line">修改配置文件执行生效：systemctl restart network</span><br><span class="line">nmcli con reload</span><br><span class="line">nmcli命令生效： nmcli con down eth0 ;nmcli con up eth0</span><br><span class="line">显示网络接口属性</span><br><span class="line">nmcli dev show eth0</span><br><span class="line">创建新连接default，IP自动通过dhcp获取</span><br><span class="line">nmcli con add con-name default <span class="built_in">type</span> Ethernet ifname eth0</span><br><span class="line">删除连接</span><br><span class="line">nmcli con del default</span><br><span class="line">创建新连接static ，指定静态IP，不自动连接</span><br><span class="line">nmcti con add con-name static ifname eth0 autoconnect no <span class="built_in">type</span></span><br><span class="line">Ethernet ipv4.addresses 172.25.X.10/24 ipv4.gateway 172.25.X.254</span><br><span class="line">修改连接设置</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nmcli con mod“static” connection.autoconnect no</span><br><span class="line">nmcli con mod “static” ipv4.dns 172.25.X.254</span><br><span class="line">nmcli con mod “static” +ipv4.dns 8.8.8.8</span><br><span class="line">nmcli con mod “static” -ipv4.dns 8.8.8.8</span><br><span class="line">nmcli con mod “static” ipv4.addresses “172.25.X.10/24 172.25.X.254”</span><br><span class="line">nmcli con mod “static” +ipv4.addresses 10.10.10.10/16</span><br></pre></td></tr></table></figure><p>修改网卡的名称<br>vim /etc/udev/rules.d/70-persistent-net.rules<br>修改保存后要卸载网卡驱动才会生效<br>ethtool -i eth1 查询网卡的驱动<br>modprobe -r e1000 从内存中卸载网卡驱动，实际上硬件上的驱动没变化<br>modprobe e1000 装载网卡驱动<br>reboot重启虚拟机生效<br>以上方法只需要在cengos6上修改，centos7不需要<br>原因：克隆虚拟机后MAC地址会被自动修改，与MAC地址对应的网卡名称也就需要修改了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">scp -r wang@172.18.0.7:/data/script/ /data/  复制主机上文件</span><br><span class="line">ssh wang@172.18.0.7  连接主机</span><br><span class="line">  tar -czvf beifen.tar.gz /data/script/*   将/data/script下的文件打包为beifen.tar.gz</span><br><span class="line">   sz beifen.tar.gz  将备份文件下载到Windows中，路径为C:\Users\Administrator\Downloads</span><br><span class="line">time bash *.sh 可以看出脚本运行需要多少时间</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;修改主机名hostname&quot;&gt;&lt;a href=&quot;#修改主机名hostname&quot; class=&quot;headerlink&quot; title=&quot;修改主机名hostname&quot;&gt;&lt;/a&gt;修改主机名hostname&lt;/h1&gt;&lt;p&gt;centos6&lt;br&gt;vim /etc/syscon
      
    
    </summary>
    
    
      <category term="L·H" scheme="http://yoursite.com/tags/L%C2%B7H/"/>
    
  </entry>
  
  <entry>
    <title>Crontab</title>
    <link href="http://yoursite.com/2018/10/16/%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1/"/>
    <id>http://yoursite.com/2018/10/16/计划任务/</id>
    <published>2018-10-16T10:18:18.000Z</published>
    <updated>2019-04-12T05:17:54.411Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Crontab"><a href="#Crontab" class="headerlink" title="Crontab"></a>Crontab</h1><p><img src="https://www.lh1.ink/img/5C1553323662201.png" alt="1553323662201"></p><a id="more"></a><p>计划任务<br>Linux任务计划、周期性任务执行<br>• 未来的某时间点执行一次任务<br>at 指定时间点，执行一次性任务<br>batch 系统自行选择空闲时间去执行此处指定的任务<br>• 周期性运行某任务<br>cron</p><p>at任务 (按ctrl+D保存)<br>包：at<br>at命令：at [option] TIME<br>常用选项：</p><p>-V 显示版本信息<br>-t time 时间格式 [[CC]YY]MMDDhhmm[.ss]<br>-l 列出指定队列中等待运行的作业；相当于atq<br>-d 删除指定的作业；相当于atrm<br>-c 查看具体作业任务<br>-f /path/file 指定的文件中读取任务<br>-m 当任务被完成之后，将给用户发送邮件，即使没有标准输出<br>注意：作业执行命令的结果中的标准输出和错误以邮件通知给相关用户<br>at时间格式<br>HH:MM 02:00<br>在今日的 HH:MM 进行，若该时刻已过，则明天此时执行任务<br>HH:MM YYYY-MM-DD 02:00 2016-09-20<br>规定在某年某月的某一天的特殊时刻进行该项任务<br>HH:MM[am|pm] [Month] [Date]<br>04pm March 17<br>17:20 tomorrow<br>HH:MM[am|pm] + number [minutes|hours|days|weeks]<br>在某个时间点再加几个时间后才进行该项任务<br>now + 5 min<br>02pm + 3 days</p><p>计划任务cron<br>放在/var/spool/cron/下<br>crontab -e 创建计划任务</p><p>@reboot Run once after reboot<br>@yearly 0 0 1 1 <em><br>@annually 0 0 1 1 </em><br>@monthly 0 0 1 <em> </em><br>@weekly 0 0 <em> </em> 0<br>@daily 0 0 <em> </em> <em><br>@hourly 0 </em> <em> </em> *<br>示例：每3小时echo和wall命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0 */3 * * * centos /bin/<span class="built_in">echo</span> “howdy”; wall “welcome to Magedu!”</span><br><span class="line">etc/cron.hourly 下0anacron放着关机后未执行的计划任务，会在开机后一个合适的时间自动运行</span><br><span class="line">etc/anacrontab记录了每天每周每月因关机未执行的计划任务自动执行的时间设置,配置文件：/etc/anacrontab，负责执行/etc/ cron.daily /etc/cron.weekly</span><br><span class="line">/etc/cron.monthly中系统任务</span><br></pre></td></tr></table></figure></p><p>字段1：如果在这些日子里没有运行这些任务……<br>• 字段2：在重新引导后等待这么多分钟后运行它<br>• 字段3：任务识别器，在日志文件中标识<br>• 字段4：要执行的任务<br>crontab命令：</p><p>crontab [-u user] [-l | -r | -e] [-i]<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-l 列出所有任务</span><br><span class="line">-e 编辑任务</span><br><span class="line">-r 移除所有任务</span><br><span class="line">-I 同-r一同使用，以交互式模式移除指定任务</span><br><span class="line">-u user 仅root可运行，指定用户管理cron任务</span><br></pre></td></tr></table></figure></p><p>控制用户执行计划任务：<br>/etc/cron.{allow,deny}</p><p>at和crontab<br>一次性作业使用 at<br>重复性作业使用crontab<br>Create at time crontab -e<br>List at -l crontab -l<br>Details at -c jobnum crontab -l<br>Remove at -d jobnum crontab -r<br>Edit N/A crontab -e<br>没有被重定向的输出会被邮寄给用户<br>root能够修改其它用户的作业</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Crontab&quot;&gt;&lt;a href=&quot;#Crontab&quot; class=&quot;headerlink&quot; title=&quot;Crontab&quot;&gt;&lt;/a&gt;Crontab&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://www.lh1.ink/img/5C1553323662201.png&quot; alt=&quot;1553323662201&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="L·H" scheme="http://yoursite.com/tags/L%C2%B7H/"/>
    
  </entry>
  
  <entry>
    <title>三次握手及子网划分</title>
    <link href="http://yoursite.com/2018/10/16/%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%8F%8A%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86/"/>
    <id>http://yoursite.com/2018/10/16/三次握手及子网划分/</id>
    <published>2018-10-16T10:18:18.000Z</published>
    <updated>2019-03-23T07:14:53.824Z</updated>
    
    <content type="html"><![CDATA[<h1 id="三次握手及四次挥手"><a href="#三次握手及四次挥手" class="headerlink" title="三次握手及四次挥手"></a>三次握手及四次挥手</h1><a id="more"></a><p><strong>三次握手</strong> （最好能画出图） （一般抓包软件wireshark默认客户端和服务器第一次建立连接，x,y取绝对，为0）</p><ol><li>客户端发送SYN=1,seq=x 到服务器（LISTEN状态）</li><li>服务器收到后 回发SYN=1,ACK=1,seq,=y,ack=x+1 给客户端，说明收到（同步收到状态）</li><li>客户端（同步已发送状态）收到反馈后， 发送ACK=1,seq=x+1,ack=y+1 给服务器，双方建立连接（都为ESTAB-LISHED状态）</li></ol><p><img src="https://img-blog.csdnimg.cn/2018110416125017.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzU1MTE1Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>四次挥手</strong> (最好能画出图)</p><ol><li>客户端(FIN-WAIT-1终止等待1)发送FIN=1,seq=u</li><li>服务器收到后回复 ACK=1,seq=v,ack=u+1给客户端（FIN-WAIT-1终止等待2）</li><li>等待一会服务器(CLOSE_WAIT关闭等待)发送FIN=1,ack=1,seq=w,ack=u+1给客户端（TIME-WAIT时间等待）</li><li>客户端收到后回复ACK=1,seq=u+1,ack=w+1给服务器（LAST-ACK最后确认）<br>最后客户端和服务器断开连接<br>注：抓包软件wireshark中数据最后几行为分开信息<br>分别为:<br>[FIN,ACK]<br>[ACK]<br>[FIN,ACK]<br>[ACK]<br><img src="https://img-blog.csdnimg.cn/20181104161213565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzU1MTE1Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>ss -nt |sed -rn ‘1!s/^([^ ]+).*/\1/p’ |sort  抓取网络连接中有多少状态</li></ol><h1 id="服务器和各个协议端口号："><a href="#服务器和各个协议端口号：" class="headerlink" title="服务器和各个协议端口号："></a>服务器和各个协议端口号：</h1><blockquote><p>FTP:21<br>ssh：22<br>Telnet:20<br>HTTP tcp:80<br>HTTPS tcp：443 和HTTP不是一种协议<br>DNS:53<br>TFTP:69<br>SNMPP:161<br>QQ :udp 8000<br>dhcp 67,68 snmp 161<br>mysql tcp   3306<br>oracle tcp  1521<br>sql server  1433<br>kerberos    88/tcp<br>smtp   25<br>pop3   110<br>imap   143<br>smb    445</p></blockquote><p>10.00000 000.0.0  10.0.0.0/16<br>10.00001 000.0.0  10.8.0.0/16<br>10.00011 000.0.0  10.24.0.0/16<br>10.00111 000.0.0  10.</p><p>10.152.0000 0000 10.152.0.0<br>10.152.0000 0000</p><h1 id="arp协议"><a href="#arp协议" class="headerlink" title="arp协议"></a>arp协议</h1><p>IP 逻辑地址，可以查询此IP在网络的哪个位置<br>MAC地址 物理地址<br>1-126.x.y.z  A类地址，全球共126个A类网段</p><p>以太网  数据链路层<br>以太网帧的数据报文  （和IP的不一样）<br>长度 72-1526 去掉前导信息（8）和FCS（4），有用的数据长度为60-1514<br>MAC地址唯一，前三位标识各个厂商后三位厂商自定义，<br>如34-E1-2D-D0-72-DA，共6个字节，一个字母或数字4位<br>tcpdump -i eth0 -nn -X   抓包工具练习<br>两主机连接前互相询问MAC地址<br>arp -n查看获取的MAC地址</p><p>协议类型查询：cat /etc/protocols<br>TCP 6<br>UDP 17</p><h1 id="IP地址类型"><a href="#IP地址类型" class="headerlink" title="IP地址类型"></a>IP地址类型</h1><p>分类</p><p><strong>A类地址</strong><br>1-126.X.Y.Z<br>1600万<br>网络ID位为高8位，主机ID位为24<br>0xxxxxxx.X.Y.Z<br>00000000 0<br>01111111 127</p><p>10.0.0.100<br>10.0.0.0<br>10.255.255.255</p><p>114.114.114.114</p><p><strong>B类地址</strong><br>128-191.x.y.z<br>网络ID位为高16位，主机ID位为16<br>10xxxxxx.X.Y.Z</p><ol start="10000000"><li>128</li><li>191<br>65534</li></ol><p>172.18.0.100</p><p><strong>C类地址</strong><br>192-223.x.y.z<br>网络ID位为高24位，主机ID位为8<br>110xxxxx.x.y.z<br>11000000 192<br>11011111 223<br>254</p><p><strong>D类地址</strong><br>224-239.x.y.z<br>多播地址<br>1110xxxx.x.y.z</p><p><strong>E类地址</strong><br>11110xxx.<br>240-254.x.y.z</p><hr><p><strong>无类域间路由CIDR:网络id位数不确定,22<br>netmask子网掩码:32bit 二进制,对应于网络ID位为1，对应于主机ID位为0</strong> </p><hr><h1 id="子网划分"><a href="#子网划分" class="headerlink" title="子网划分"></a>子网划分</h1><p>10.0.0.100/19    255.255.224.0 </p><p>203.110.200.199/22                    22为网络ID数，主机ID数=32-网络ID数<br>1 主机数?1022<br>2 netmask?255.255.252.0<br>3 网络ID值?</p><p>203.110.200.199</p><p>203.110.110010 00.199<br>255.255.111111 00.00000000<br>203.110.110010 00.0/22<br>203.110.200.0/22</p><p>192.168.34.6<br>255.255.255.0<br>192.168.34.0/24</p><p>0与1=0<br>0与0=0<br>1与0=0<br>1与1=1</p><p>A 192.168.1.100<br>  255.255.255.0</p><p>B 192.168.2.100<br>  255.255.0.0</p><p><strong>A ：172.18.0.100 255.0.0.0  172.18.0.0/16<br>B： 172.18.0.123 255.255.255.0 172.18.0.0/24</strong></p><p>例子：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">100.123.199.124/20</span><br><span class="line">1 主机数  2^12-2</span><br><span class="line">2 子网掩码 255.255.240.0 </span><br><span class="line">3 网络ID:100.123.192.0/20</span><br><span class="line">4 最小和最大IP:100.123.192.1 --- 100.123.207.254</span><br><span class="line"></span><br><span class="line">100.123.11000111.124</span><br><span class="line">255.255.240.0 </span><br><span class="line">100.123.1100 0000.1 </span><br><span class="line">100.123.1100 1111.254 </span><br><span class="line"></span><br><span class="line">123.200.233.100/23  </span><br><span class="line">123.200.235.100/23  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">100.123.1100  0000.000000001</span><br><span class="line">100.123.1100  1111.111111110</span><br><span class="line"></span><br><span class="line">00000000  0</span><br><span class="line">10000000  128</span><br><span class="line">11000000  192</span><br><span class="line">11100000  224</span><br><span class="line">11110000  240</span><br><span class="line">11111000  248</span><br><span class="line">11111100  252</span><br><span class="line">11111110  254</span><br><span class="line">11111111  255</span><br><span class="line"></span><br><span class="line">00000001  1</span><br><span class="line">00000010  2</span><br><span class="line">00000100  4</span><br><span class="line">00001000  8</span><br><span class="line">00010000  16</span><br><span class="line">00100000  32</span><br><span class="line">01000000  64</span><br><span class="line">10000000  128</span><br><span class="line"></span><br><span class="line">10.0.0.1--10.255.255.254  </span><br><span class="line">10.00 000000.0.0</span><br><span class="line"></span><br><span class="line">10.00 000000.0.0   10.0.0.0/10</span><br><span class="line">10.01 000000.0.0   10.64.0.0/10</span><br><span class="line">10.10 000000.0.0   10.128.0.0/10</span><br><span class="line">10.11 000000.0.0   10.192.0.0/10</span><br><span class="line"></span><br><span class="line">10.0 0000000.0.0   10.0.0.0/9 </span><br><span class="line">10.1 0000000.0.0   10.128.0.0/9</span><br><span class="line"></span><br><span class="line">10.0.0.0/8 给32省份划分各自子网</span><br><span class="line">借5位</span><br><span class="line">1 子网子网掩码 255.248.0.0 </span><br><span class="line">2 最小子网，最大子网的网络ID</span><br><span class="line">10.00000  000.0.0  10.0.0.0/13</span><br><span class="line">10.11111  000.0.0  10.248.0.0/13</span><br><span class="line">3 每个子网主机数？2^19-2</span><br><span class="line">4 第20个子网分给河南使用，最小IP10.152.0.1，最大IP范围10.159.255.254</span><br><span class="line"></span><br><span class="line">10.10011  000.0.1       </span><br><span class="line">10.10011  111.255.254</span><br></pre></td></tr></table></figure></p><p><strong>子网掩码和网关在一个网段才能上网，/后的数字为网络id位数，从前往后查多少位不变的</strong><br>公式：</p><ol><li>一个网络中主机最大数=2^主机ID位数(32-网络ID位数)^-2=2^(32-网络ID位数)^-2</li><li>网络数=2^可变网络ID位</li><li>CIDR表示法：IP/网络ID位数</li><li>网络ID值=IP与子网掩码</li><li>划分子网：一个大网划分成多个小网，网络ID位变多，主机ID位才变少，网络ID向主机ID借位N,分成2^N个小网</li><li>合并超网：多个小网合并成一个大网，主机ID向网络ID借位</li></ol><p>例子 ：</p><p>河南省10.152.0.0/13 给15个地市，划分各自子网 2^N^&gt;=15 N=4<br>1 子网子网掩码<br> 17 255.255.128.0</p><p>2 最小子网，最大子网的网络ID</p><p>10.10011  000.0  0000000.0 10.152.0.0/17<br>10.10011  111.1  0000000.0 10.159.128.0/17</p><p>3 每个子网主机数？ 2^(32-17)^-2 </p><p>4 最大子网的最小IP，最大IP范围 10.159.128.1——10.159.255.254</p><p>10.10011  111.1  0000000.0<br>10.10011  111.1  0000000.1  10.159.128.1<br>10.10011  111.1  1111111.254 10.159.255.254</p><p> 河南省10.152.0.0/13 给87个区县，划分各自子网<br>1 子网子网掩码<br> 21 255.255.248.0</p><p>2 最小子网，最大子网的网络ID</p><p>10.10011  000.00000  000.0  10.152.0.0/21<br>10.10011  111.11111  000.0  10.159.248.0/21</p><p>3 每个子网主机数？   2^11-2</p><p>4 最大子网 的最小IP，最大IP范围 </p><p>10.10011  111.11111  000.0    10.159.248.1<br>10.10011  111.11111  111.254  10.159.255.254</p><hr><p>路由表：<br>目标网络ID：目标IP所在网络ID<br>接口：本设备要发送数据包到目标，从哪个接口发送出来，才能到达<br>网关：到达目标网络，需要将数据交给下一个路口哪个接口的对应的IP</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;三次握手及四次挥手&quot;&gt;&lt;a href=&quot;#三次握手及四次挥手&quot; class=&quot;headerlink&quot; title=&quot;三次握手及四次挥手&quot;&gt;&lt;/a&gt;三次握手及四次挥手&lt;/h1&gt;
    
    </summary>
    
    
      <category term="L·H" scheme="http://yoursite.com/tags/L%C2%B7H/"/>
    
  </entry>
  
  <entry>
    <title>磁盘备份及raid0和raid10的组建</title>
    <link href="http://yoursite.com/2018/10/15/%E7%A3%81%E7%9B%98%E5%A4%87%E4%BB%BD%E5%8F%8Araid0%E5%92%8Craid10%E7%9A%84%E7%BB%84%E5%BB%BA/"/>
    <id>http://yoursite.com/2018/10/15/磁盘备份及raid0和raid10的组建/</id>
    <published>2018-10-15T10:18:18.000Z</published>
    <updated>2019-03-23T06:38:50.391Z</updated>
    
    <content type="html"><![CDATA[<h1 id="磁盘备份及raid0和raid10的组建"><a href="#磁盘备份及raid0和raid10的组建" class="headerlink" title="磁盘备份及raid0和raid10的组建"></a>磁盘备份及raid0和raid10的组建</h1><a id="more"></a><h1 id="blkid-查询各个设备UUID"><a href="#blkid-查询各个设备UUID" class="headerlink" title="blkid 查询各个设备UUID"></a>blkid 查询各个设备UUID</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mount -U <span class="string">'UUID'</span> 加挂载点  挂载设备</span><br><span class="line">umount /mnt/sdb1  卸载挂载设备sdb1（无占用）  </span><br><span class="line">lsof /mnt/sdb1   有用户占用时，查询sdb1占用进程和用户</span><br><span class="line">fuser -km /mnt/sdb1  结束sdb1的所有占用</span><br><span class="line">cat /proc/mounts 查询所有的挂载点</span><br><span class="line">umount -o remount +挂载点 重新挂载，某些设备不能取消挂载</span><br><span class="line"></span><br><span class="line">df -P  对其系统信息显示</span><br><span class="line">du    显示当前目录每个文件夹的大小</span><br><span class="line">du -sh  显示当前目录的总大小</span><br><span class="line">du -sh /*查询根目录下每个目录有多大</span><br><span class="line"></span><br><span class="line">dd 命令**********************</span><br><span class="line">dd <span class="keyword">if</span>= /dev读取的文件    of=/输出的文件，没有则新建该文件</span><br></pre></td></tr></table></figure><p>例子<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">f1=abcdefghi</span><br><span class="line">f2= 123456</span><br><span class="line">dd <span class="keyword">if</span>=f2 of=f1 bs=1 count=2 skip=3 seek=4 一次1块，跳过源文件的3个（123），读取两个（45），f1跳过4个，把ef替代了</span><br><span class="line">输出信息为abcd45 </span><br><span class="line"></span><br><span class="line">备份：</span><br><span class="line">dd <span class="keyword">if</span>=/dev/sdx of=/dev/sdy</span><br><span class="line">将本地的/dev/sdx整盘备份到/dev/sdy</span><br><span class="line">dd <span class="keyword">if</span>=/dev/sdx of=/path/to/image</span><br><span class="line">将/dev/sdx全盘数据备份到指定路径的image文件</span><br><span class="line">dd <span class="keyword">if</span>=/dev/sdx | gzip &gt;/path/to/image.gz</span><br><span class="line">备份/dev/sdx全盘数据，并利用gzip压缩，保存到指定路径</span><br><span class="line">恢复：</span><br><span class="line">dd <span class="keyword">if</span>=/path/to/image of=/dev/sdx</span><br><span class="line">将备份文件恢复到指定盘</span><br><span class="line">gzip -dc /path/to/image.gz | dd of=/dev/sdx</span><br><span class="line">将压缩的备份文件恢复到指定盘</span><br></pre></td></tr></table></figure></p><h1 id="拷贝内存资料到硬盘"><a href="#拷贝内存资料到硬盘" class="headerlink" title="拷贝内存资料到硬盘"></a>拷贝内存资料到硬盘</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">dd <span class="keyword">if</span>=/dev/mem of=/root/mem.bin bs=1024</span><br><span class="line">将内存里的数据拷贝到root目录下的mem.bin文件</span><br><span class="line">从光盘拷贝iso镜像</span><br><span class="line">dd <span class="keyword">if</span>=/dev/cdrom of=/root/cd.iso</span><br><span class="line">拷贝光盘数据到root文件夹下，并保存为cd.iso文件</span><br><span class="line">销毁磁盘数据</span><br><span class="line">dd <span class="keyword">if</span>=/dev/urandom of=/dev/sda1</span><br><span class="line">利用随机的数据填充硬盘，在某些必要的场合可以用来销毁数据，执行此操作以后，</span><br><span class="line">/dev/sda1将无法挂载，创建和拷贝操作无法执行</span><br></pre></td></tr></table></figure><h1 id="测试硬盘写速度"><a href="#测试硬盘写速度" class="headerlink" title="测试硬盘写速度"></a>测试硬盘写速度</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dd <span class="keyword">if</span>=/dev/zero of=/root/1Gb.file bs=1024 count=1000000</span><br><span class="line">测试硬盘读速度</span><br><span class="line">dd <span class="keyword">if</span>=/root/1Gb.file bs=64k | dd of=/dev/null</span><br><span class="line">partx -d --nr 1 /dev/sdb  删除硬盘sdb上的第一个分区</span><br><span class="line">删除硬盘上的一个分区</span><br></pre></td></tr></table></figure><p>raid 01 容错率3分之1<br>raid 10 容错率3分之2<br>所以一般都用raid 10 或者20.30 </p><p>简述 raid0，raid1，raid5，raid10 的区别和各自特点：</p><blockquote><p>raid0:RAID0 具有低成本、高读写性能、 100% 的高存储空间利用率等优点，但是它不提供数据冗余保护，一<br>旦数据损坏，将无法恢复。 因此， RAID0 一般适用于对性能要求严格但对数据安全性和可靠性不高的<br>应用。<br>raid1:RAID1 称为镜像，它将数据完全一致地分别写到工作磁盘和镜像磁盘，从而达到安全性好、技术简单、<br>管理方便。 RAID1 拥有完全容错的能力，但实现成本高。<br>raid5:RAID5 的磁盘上同时存储数据和校验数据，数据块和对应的校验信息存保存在不同的磁盘上，当一个数<br>据盘损坏时，系统可以根据同一条带的其他数据块和对应的校验数据来重建损坏的数据。与其他 RAID<br>等级一样，重建数据时， RAID5 的性能会受到较大的影响。RAID5 兼顾存储性能、数据安全和存储成<br>本等各方面因素，它可以理解为 RAID0 和 RAID1 的折中方案，是目前综合性能最佳的数据保护解决方<br>案。<br>raid10：RAID10 是先做镜像再作条带化，是对虚拟磁盘实现镜像，保证数据安全性的同时又提高了性能，整<br>体磁盘利用率均仅为 50%。</p></blockquote><p>raid5在视频第12天第三个视频64分钟开始</p><h1 id="实验：实现raid0"><a href="#实验：实现raid0" class="headerlink" title="实验：实现raid0"></a>实验：实现raid0</h1><p>VMware中添加两块200G硬盘，重启虚拟机<br>输入lsblk查看多了一个sdb 硬盘<br>fdisk /dev/sdb<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">Device contains neither a valid DOS partition table, nor Sun, SGI or OSF disklabel</span><br><span class="line">Building a new DOS disklabel with disk identifier 0x25e5fb5c.</span><br><span class="line">Changes will remain <span class="keyword">in</span> memory only, until you decide to write them.</span><br><span class="line">After that, of course, the previous content won<span class="string">'t be recoverable.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Warning: invalid flag 0x0000 of partition table 4 will be corrected by w(rite)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">WARNING: DOS-compatible mode is deprecated. It'</span>s strongly recommended to</span><br><span class="line">         switch off the mode (<span class="built_in">command</span> <span class="string">'c'</span>) and change display units to</span><br><span class="line">         sectors (<span class="built_in">command</span> <span class="string">'u'</span>).</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line">Command action</span><br><span class="line">   e   extended</span><br><span class="line">   p   primary partition (1-4)</span><br><span class="line">1</span><br><span class="line">Invalid partition number <span class="keyword">for</span> <span class="built_in">type</span> `1<span class="string">'</span></span><br><span class="line"><span class="string">Command action</span></span><br><span class="line"><span class="string">   e   extended</span></span><br><span class="line"><span class="string">   p   primary partition (1-4)</span></span><br><span class="line"><span class="string">p</span></span><br><span class="line"><span class="string">Partition number (1-4): 1</span></span><br><span class="line"><span class="string">First cylinder (1-26108, default 1): </span></span><br><span class="line"><span class="string">Using default value 1</span></span><br><span class="line"><span class="string">Last cylinder, +cylinders or +size&#123;K,M,G&#125; (1-26108, default 26108): +50G</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Command (m for help): t</span></span><br><span class="line"><span class="string">Selected partition 1</span></span><br><span class="line"><span class="string">Hex code (type L to list codes): fd</span></span><br><span class="line"><span class="string">Changed system type of partition 1 to fd (Linux raid autodetect)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Command (m for help): p</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Disk /dev/sdc: 214.7 GB, 214748364800 bytes</span></span><br><span class="line"><span class="string">255 heads, 63 sectors/track, 26108 cylinders</span></span><br><span class="line"><span class="string">Units = cylinders of 16065 * 512 = 8225280 bytes</span></span><br><span class="line"><span class="string">Sector size (logical/physical): 512 bytes / 512 bytes</span></span><br><span class="line"><span class="string">I/O size (minimum/optimal): 512 bytes / 512 bytes</span></span><br><span class="line"><span class="string">Disk identifier: 0x25e5fb5c</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   Device Boot      Start         End      Blocks   Id  System</span></span><br><span class="line"><span class="string">/dev/sdc1               1        6528    52436128+  fd  Linux raid autodetect</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Command (m for help): w</span></span><br><span class="line"><span class="string">The partition table has been altered!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Calling ioctl() to re-read partition table.</span></span><br><span class="line"><span class="string">Syncing disks.</span></span><br><span class="line"><span class="string">然后按w保存分区信息**************************</span></span><br></pre></td></tr></table></figure></p><p>分区完成<br>若lsblk后没有新建的分区，可以输入partx -a /dev/sdb  来通知内核重新读取分区表<br>或者输入partprobe 进行分区同步</p><hr><p>重复以上步骤将sdc也创建一个50G的分区<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">lsblk</span><br><span class="line">NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda      8:0    0  200G  0 disk </span><br><span class="line">├─sda1   8:1    0    1G  0 part /boot</span><br><span class="line">├─sda2   8:2    0 48.8G  0 part /</span><br><span class="line">├─sda3   8:3    0 29.3G  0 part /data</span><br><span class="line">├─sda4   8:4    0    1K  0 part </span><br><span class="line">└─sda5   8:5    0    2G  0 part [SWAP]</span><br><span class="line">sdb      8:16   0  200G  0 disk </span><br><span class="line">└─sdb1   8:17   0   50G  0 part </span><br><span class="line">sdc      8:32   0  200G  0 disk </span><br><span class="line">└─sdc1   8:33   0   50G  0 part </span><br><span class="line">sr0     11:0    1  3.7G  0 rom </span><br><span class="line">可以看到sdb1和sdc1两个50G的分区</span><br><span class="line">将两个分区组成raid0</span><br><span class="line">mdadm -C -a yes /dev/md0 -l 0 -n 2 /dev/sd&#123;b,c&#125;1</span><br><span class="line">lsblk</span><br><span class="line">NAME    MAJ:MIN RM  SIZE RO TYPE  MOUNTPOINT</span><br><span class="line">sda       8:0    0  200G  0 disk  </span><br><span class="line">├─sda1    8:1    0    1G  0 part  /boot</span><br><span class="line">├─sda2    8:2    0 48.8G  0 part  /</span><br><span class="line">├─sda3    8:3    0 29.3G  0 part  /data</span><br><span class="line">├─sda4    8:4    0    1K  0 part  </span><br><span class="line">└─sda5    8:5    0    2G  0 part  [SWAP]</span><br><span class="line">sdb       8:16   0  200G  0 disk  </span><br><span class="line">└─sdb1    8:17   0   10G  0 part  </span><br><span class="line">  └─md0   9:0    0   20G  0 raid0 /mnt/raid</span><br><span class="line">sdc       8:32   0  200G  0 disk  </span><br><span class="line">└─sdc1    8:33   0   10G  0 part  </span><br><span class="line">  └─md0   9:0    0   20G  0 raid0 /mnt/raid</span><br><span class="line">sr0      11:0    1  3.7G  0 rom </span><br><span class="line">mkfs.ext4 /dev/md0    给raid0创建文件系统</span><br><span class="line">blkid</span><br><span class="line">mkdir /mnt/raid     创建挂载点</span><br><span class="line">tune2fs -L /mnt/raid /dev/md0   挂载md0  </span><br><span class="line">输入partprobe 进行分区同步</span><br><span class="line">df -h 可以看到raid0组建完成</span><br></pre></td></tr></table></figure></p><hr><h1 id="测试组建raid前后速度"><a href="#测试组建raid前后速度" class="headerlink" title="测试组建raid前后速度"></a>测试组建raid前后速度</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">dd <span class="keyword">if</span>=/dev/zero of=/mnt/raid/f1 bs=1M count=1024   raid0速度</span><br><span class="line">1024+0 records <span class="keyword">in</span></span><br><span class="line">1024+0 records out</span><br><span class="line">1073741824 bytes (1.1 GB) copied, 4.94718 s, 217 MB/s</span><br><span class="line">dd <span class="keyword">if</span>=/dev/zero of=/data/f2 bs=1M count=1024    普通硬盘速度</span><br><span class="line">1024+0 records <span class="keyword">in</span></span><br><span class="line">1024+0 records out</span><br><span class="line">1073741824 bytes (1.1 GB) copied, 23.4932 s, 45.7 MB/s</span><br><span class="line">********************************************************************8</span><br><span class="line">raid0和raid1组建区别</span><br><span class="line">mdadm -C -a yes /dev/md0 -l 0 -n 2 /dev/sd&#123;b,c&#125;1   raid0</span><br><span class="line">mdadm -C -a yes /dev/md0 -l 1 -n 2 /dev/sd&#123;b,c&#125;1   raid1</span><br><span class="line"></span><br><span class="line">将-l 后的类别改为1就是raid1</span><br></pre></td></tr></table></figure><h1 id="RAID10组建"><a href="#RAID10组建" class="headerlink" title="RAID10组建"></a>RAID10组建</h1><p>组建raid10就是先组建两个raid0，组合成raid1<br>再次添加两个硬盘sdd,sde重启系统，或者刷新硬件信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mdadm -C -a yes /dev/md0 -l 0 -n 2 /dev/sd&#123;d,e&#125;1</span><br><span class="line">umount /dev/md0   取消挂载md0</span><br><span class="line">mdadm -C -a yes /dev/md2 -l 1 -n 2 /dev/md&#123;0,1&#125;   将两个raid0组建为raid10</span><br><span class="line">lsblk  查看是否有md2</span><br><span class="line">df -h看到没有md2</span><br><span class="line">mkfs.ext4 /dev/md2  创建文件系统</span><br><span class="line">mkdir /mnt/raid111  创建挂载点</span><br><span class="line">mount /dev/md2 /mnt/raid111  挂载raid10</span><br><span class="line">vim /etc/fstab  写入raid10 信息,重启后raid10不会丢失</span><br><span class="line">partprobe 同布信息</span><br><span class="line">df -h 可以看到有了md2</span><br><span class="line"></span><br><span class="line">mdadm -D /dev/md0    删除raid0</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;磁盘备份及raid0和raid10的组建&quot;&gt;&lt;a href=&quot;#磁盘备份及raid0和raid10的组建&quot; class=&quot;headerlink&quot; title=&quot;磁盘备份及raid0和raid10的组建&quot;&gt;&lt;/a&gt;磁盘备份及raid0和raid10的组建&lt;/h1&gt;
    
    </summary>
    
    
      <category term="L·H" scheme="http://yoursite.com/tags/L%C2%B7H/"/>
    
  </entry>
  
  <entry>
    <title>Linux进程管理</title>
    <link href="http://yoursite.com/2018/10/15/Linux%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2018/10/15/Linux进程管理/</id>
    <published>2018-10-15T10:18:18.000Z</published>
    <updated>2019-03-23T07:09:45.705Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PS命令基础"><a href="#PS命令基础" class="headerlink" title="PS命令基础"></a>PS命令基础</h2><a id="more"></a><p>ps常见选项<br>ps</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">C cmdlist 指定命令，多个命令用，分隔</span><br><span class="line">L 显示线程</span><br><span class="line">e: 显示所有进程，相当于-A</span><br><span class="line">f: 显示完整格式程序信息</span><br><span class="line">F: 显示更完整格式的进程信息</span><br><span class="line">H: 以进程层级格式显示进程相关信息</span><br><span class="line">u userlist 指定有效的用户ID或名称</span><br><span class="line">U userlist 指定真正的用户ID或名称</span><br><span class="line">g gid或groupname 指定有效的gid或组名称</span><br><span class="line">G gid或groupname 指定真正的gid或组名称</span><br><span class="line">p pid 显示指pid的进程</span><br><span class="line">-ppid pid 显示属于pid的子进程</span><br><span class="line">M 显示SELinux信息，相当于Z</span><br></pre></td></tr></table></figure><p>ps输出属性<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">VSZ: Virtual memory SiZe，虚拟内存集，线性内存</span><br><span class="line">RSS: ReSident Size, 常驻内存集</span><br><span class="line">STAT：进程状态</span><br><span class="line">R：running</span><br><span class="line">S: interruptable sleeping</span><br><span class="line">D: uninterruptable sleeping</span><br><span class="line">T: stopped</span><br><span class="line">Z: zombie</span><br><span class="line">+: 前台进程</span><br><span class="line">l: 多线程进程</span><br><span class="line">L：内存分页并带锁</span><br><span class="line">N：低优先级进程</span><br><span class="line">&lt;: 高优先级进程</span><br><span class="line">s: session leader，会话（子进程）发起者</span><br></pre></td></tr></table></figure></p><p>ps示例</p><blockquote><p>询你拥有的所有进程<br>ps -x<br>示指定用户名(RUID)或用户ID的进程<br>ps -fU apache<br>ps -fU 48<br>示指定用户名(EUID)或用户ID的进程<br>ps -fu wang<br>ps -fu 1000<br>看以root用户权限（实际和有效ID）运行的每个进程<br>ps -U root -u root<br>出某个组拥有的所有进程（实际组ID：RGID或名称）<br>ps -fG nginx<br>列出有效组名称（或会话）所拥有的所有进程<br>ps -fg mysql<br>ps -fg 27<br>示指定的进程ID对应的进程<br>ps -fp 1234<br>父进程ID来显示其下所有的进程，如显示父进程为1234的所有进程<br>ps -f –ppid 1234<br>示指定PID的多个进程<br>ps -fp 1204,1239,1263<br>按tty显示所属进程<br>ps -ft pts/0<br>自定义格式显示文件系统组,ni值开始时间和进程的时间<br>ps -p 1234 -o pid,ppid,fgroup,ni,lstart,etime<br>用其PID查找进程名称：<br>ps -p 1244 -o comm=<br>以其名称选择特定进程，显示其所有子进程<br>ps -C sshd,bash<br>找指定进程名所有的所属PID，在编写需要从std输出或文件读取PID的脚本时<br>这个参数很有用<br>ps -C httpd,sshd -o pid=<br>查一个进程的执行时间<br>ps -eo comm,etime,user | grep nginx</p></blockquote><h2 id="搜索进程"><a href="#搜索进程" class="headerlink" title="搜索进程"></a>搜索进程</h2><p>灵活：ps 选项 | 其它命令<br>预定义的模式：pgrep<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">pgrep [options] pattern</span><br><span class="line">-u uid: effective user，生效者</span><br><span class="line">-U uid: real user，真正发起运行命令者</span><br><span class="line">-t terminal: 与指定终端相关的进程</span><br><span class="line">-l: 显示进程名</span><br><span class="line">-a: 显示完整格式的进程名</span><br><span class="line">-P pid: 显示指定进程的子进程</span><br><span class="line">确切的程序名称：/sbin/pidof</span><br><span class="line">pidof bash</span><br></pre></td></tr></table></figure></p><h2 id="进程管理工具top"><a href="#进程管理工具top" class="headerlink" title="进程管理工具top"></a>进程管理工具top</h2><p>top：有许多内置命令<br>排序：<br>P：以占据的CPU百分比,%CPU<br>M：占据内存百分比,%MEM<br>T：累积占据CPU时长,TIME+<br>首部信息显示：<br>uptime信息：l命令<br>tasks及cpu信息：t命令<br>cpu分别显示：1 (数字)<br>memory信息：m命令<br>退出命令：q<br>修改刷新时间间隔：s<br>终止指定进程：k<br>保存文件：W<br>top选项：<br>-d # 指定刷新时间间隔，默认为3秒<br>-b 全部显示所有进程<br>-n # 刷新多少次后退出<br>-H 线程模式，示例：top -H -p pidof mysqld</p><h2 id="htop命令：EPEL源"><a href="#htop命令：EPEL源" class="headerlink" title="htop命令：EPEL源"></a>htop命令：EPEL源</h2><p>选项：<br>-d #: 指定延迟时间；<br>-u UserName: 仅显示指定用户的进程<br>-s COLUME: 以指定字段进行排序<br>子命令：<br>s：跟踪选定进程的系统调用<br>l：显示选定进程打开的文件列表<br>a：将选定的进程绑定至某指定CPU核心<br>t：显示进程树</p><p>内存空间<br>存空间使用状态：</p><p>free [OPTION]<br>-b 以字节为单位<br>-m 以MB为单位<br>-g 以GB为单位<br>-h 易读格式<br>-o 不显示-/+buffers/cache行<br>-t 显示RAM + swap的总和<br>-s n 刷新间隔为n秒<br>-c n 刷新n次后即退出</p><h2 id="内存工具"><a href="#内存工具" class="headerlink" title="内存工具"></a>内存工具</h2><p>vmstat命令：虚拟内存信息<br>vmstat [options] [delay [count]]<br>vmstat 2 5<br>procs:<br>r：可运行（正运行或等待运行）进程的个数，和核心数有关<br>b：处于不可中断睡眠态的进程个数(被阻塞的队列的长度)<br>memory：</p><p>swpd: 交换内存的使用总量<br>free：空闲物理内存总量<br>buffer：用于buffer的内存总量<br>cache：用于cache的内存总量<br>swap:<br>si：从磁盘交换进内存的数据速率(kb/s)<br>so：从内存交换至磁盘的数据速率(kb/s)</p><h2 id="系统监控工具"><a href="#系统监控工具" class="headerlink" title="系统监控工具"></a>系统监控工具</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">glances命令：EPEL源</span><br><span class="line">glances [-bdehmnrsvyz1] [-B <span class="built_in">bind</span>] [-c server] [-C conffile] [-p port] [-P password] [–</span><br><span class="line">password] [-t refresh] [-f file] [-o output]</span><br><span class="line">内建命令：</span><br><span class="line">a Sort processes automatically l Show/hide logs</span><br><span class="line">c Sort processes by CPU% b Bytes or bits <span class="keyword">for</span> network I/O</span><br><span class="line">m Sort processes by MEM% w Delete warning logs</span><br><span class="line">p Sort processes by name x Delete warning and critical logs</span><br><span class="line">i Sort processes by I/O rate 1 Global CPU or per-CPU stats</span><br><span class="line">d Show/hide disk I/O stats h Show/hide this <span class="built_in">help</span> screen</span><br><span class="line">f Show/hide file system stats t View network I/O as combination</span><br><span class="line">n Show/hide network stats u View cumulative network I/O</span><br><span class="line">s Show/hide sensors stats q Quit (Esc and Ctrl-C also work)</span><br><span class="line">y Show/hide hddtemp stats</span><br><span class="line">常用选项：</span><br><span class="line">-b: 以Byte为单位显示网卡数据速率</span><br><span class="line">-d: 关闭磁盘I/O模块</span><br><span class="line">-f /path/to/somefile: 设定输入文件位置</span><br><span class="line">-o &#123;HTML|CSV&#125;：输出格式</span><br><span class="line">-m: 禁用mount模块</span><br><span class="line">-n: 禁用网络模块</span><br><span class="line">-t <span class="comment">#: 延迟时间间隔</span></span><br><span class="line">-1：每个CPU的相关数据单独显示</span><br></pre></td></tr></table></figure><p>例子：<br>glances 远程监控<br>远程监控另一台虚拟机<br>需要两台虚拟机同为centos6或者centos7版本，否则不兼容<br>虚拟机A作为服务器<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">yum install glances  <span class="comment">#安装glances 工具</span></span><br><span class="line">glances -s  <span class="comment">#开启服务</span></span><br><span class="line">虚拟机B作为客户端</span><br><span class="line"></span><br><span class="line">yum install glances  <span class="comment">#安装glances 工具</span></span><br><span class="line">glances -c 192.168.34.129  <span class="comment">#输入服务器IP地址</span></span><br><span class="line"></span><br><span class="line">在虚拟机B上可以看到以下信息</span><br><span class="line"></span><br><span class="line">Connected to centos7.localdomain (CentOS Linux 7.5.1804 64bit / Linux 3.10.0-862.el7.x86_64)      Uptime: 0:07:49</span><br><span class="line"></span><br><span class="line">CPU  [  4.4%]   CPU       4.4%  nice:     0.0%        MEM     41.7%        SWAP      0.0%        LOAD    1-core</span><br><span class="line">MEM  [ 41.7%]   user:     1.3%  irq:      0.0%        total:  1.78G        total:   4.00G        1 min:    0.01</span><br><span class="line">SWAP [  0.0%]   system:   2.5%  iowait:   0.0%        used:    760M        used:        0        5 min:    0.15</span><br><span class="line">                idle:    96.2%  steal:    0.0%        free:   1.04G        free:    4.00G        15 min:   0.12</span><br><span class="line"></span><br><span class="line">NETWORK     Rx/s   Tx/s   TASKS 200 (467 thr), 2 run, 198 slp, 0 oth sorted automatically</span><br><span class="line">ens33        3Kb   62Kb</span><br><span class="line">ens37        1Kb   648b     CPU%  MEM%  VIRT   RES   PID USER        NI S     TIME+ IOR/s IOW/s Command </span><br><span class="line">lo            0b     0b      9.8   0.8  221M 15.1M  2858 root         0 R   0:00.33     0     0 /usr/bin/python /</span><br><span class="line">virbr0        0b     0b      0.0   0.5  548M 9.50M  2430 luhao       19 S   0:00.40     0     0 /usr/libexec/trac</span><br><span class="line">_rbr0-nic     0b     0b      0.0   0.3  105M 5.34M   686 root         0 S   0:00.20     0     0 /sbin/dhclient -d</span><br><span class="line">                             0.0   3.2 1.15G 57.9M  2488 luhao        0 S   0:00.24     0     0 /usr/libexec/evol</span><br><span class="line">DISK I/O     R/s    W/s      0.0   0.0     0     0   438 root       -20 S   0:00.00     0     0 xfs-buf/sda1</span><br><span class="line">sda1           0      0      0.0   0.0 60.7M  400K   598 avahi        0 S   0:00.00     0     0 avahi-daemon: chr</span><br><span class="line">sda2           0      0      0.0   0.0     0     0   448 root       -20 S   0:00.00     0     0 xfs-conv/sda3</span><br><span class="line">sda3           0      0      0.0   0.3  367M 5.46M  2117 luhao        0 S   0:00.00     0     0 /usr/libexec/ibus</span><br><span class="line">sda4           0      0      0.0   0.3  410M 6.06M  1752 colord       0 S   0:00.30     0     0 /usr/libexec/colo</span><br><span class="line">sda5           0      0      0.0   0.4  603M 7.12M  2309 luhao        0 S   0:00.20     0     0 /usr/libexec/gsd-</span><br><span class="line">sr0            0      0      0.0   0.2  363M 3.05M  2168 luhao        0 S   0:00.00     0     0 /usr/libexec/gvfs</span><br><span class="line">                             0.0   0.3  550M 5.48M  2156 luhao        0 S   0:00.20     0     0 /usr/libexec/gvfs</span><br><span class="line">FILE SYS    Used  Total      0.0   0.0     0     0     5 root       -20 S   0:00.00     0     0 kworker/0:0H</span><br><span class="line">/ (sda2)   3.86G  50.0G      0.0   0.0     0     0    10 root       -20 S   0:00.00     0     0 lru-add-drain</span><br><span class="line">/boot       165M  1014M      0.0   0.7  677M 13.6M   953 root         0 S   0:00.37     0     0 /usr/sbin/libvirt</span><br><span class="line">/data      32.2M  30.0G      0.0   0.2  193M 4.09M   944 root         0 S   0:00.10     0     0 /usr/sbin/cupsd -</span><br><span class="line">_7 x86_64  8.75G  8.75G      0.0   0.0 52.6M  372K  1401 root         0 S   0:00.00     0     0 /usr/sbin/dnsmasq</span><br><span class="line">                             0.0   0.0     0     0    29 root        19 S   0:00.36     0     0 khugepaged</span><br><span class="line">                             0.0   0.8  708M 13.9M  2254 luhao        0 S   0:00.11     0     0 /usr/libexec/gsd-</span><br><span class="line">                             0.0   0.0     0     0    41 root       -20 S   0:00.00     0     0 kaluad</span><br><span class="line">                             0.0   0.0     0     0   531 root       -20 S   0:00.00     0     0 rpciod</span><br><span class="line">                             0.0   0.0     0     0   532 root       -20 S   0:00.00     0     0 xprtiod</span><br><span class="line">                             0.0   0.4 1.23G 6.91M  2097 luhao      -11 S   0:00.12     0     0 /usr/bin/pulseaud</span><br><span class="line">                             0.0   0.0     0     0   225 root       -20 S   0:00.00     0     0 ata_sff</span><br><span class="line">                             0.0   0.1 23.9M 2.21M   555 root         0 S   0:00.20     0     0 /usr/sbin/smartd</span><br><span class="line">                             0.0   0.2  454M 4.44M  2381 luhao        0 S   0:00.30     0     0 /usr/libexec/gvfs</span><br><span class="line">                             0.0   0.5  625M 10.0M  2416 luhao       19 S   0:00.50     0     0 /usr/libexec/trac</span><br><span class="line">                             0.0   0.4  597M 6.50M  2284 luhao        0 S   0:00.20     0     0 /usr/libexec/gsd-</span><br><span class="line">                             0.0   0.0     0     0   444 root       -20 S   0:00.00     0     0 xfs-conv/sda1</span><br><span class="line">                             0.0   0.3  367M 5.25M  2124 luhao        0 S   0:00.10     0     0 /usr/libexec/ibus</span><br></pre></td></tr></table></figure></p><p>系统监控工具<br>dstat命令：系统资源统计,代替vmstat,iostat<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">dstat [-afv] [options..] [delay [count]]</span><br><span class="line">-c 显示cpu相关信息</span><br><span class="line">-C <span class="comment">#,#,...,total</span></span><br><span class="line">-d 显示disk相关信息</span><br><span class="line">-D total,sda,sdb,...</span><br><span class="line">-g 显示page相关统计数据</span><br><span class="line">-m 显示memory相关统计数据</span><br><span class="line">-n 显示network相关统计数据</span><br><span class="line">-p 显示process相关统计数据</span><br><span class="line">-r 显示io请求相关的统计数据</span><br><span class="line">-s 显示swapped相关的统计数据</span><br></pre></td></tr></table></figure></p><h2 id="iotop常用参数"><a href="#iotop常用参数" class="headerlink" title="iotop常用参数"></a>iotop常用参数</h2><p>o, –only只显示正在产生I/O的进程或线程，除了传参，可以在运行过程中按o<br>生效<br>b, –batch非交互模式，一般用来记录日志<br>n NUM, –iter=NUM设置监测的次数，默认无限。在非交互模式下很有用<br>d SEC, –delay=SEC设置每次监测的间隔，默认1秒，接受非整形数据例如1.1<br>p PID, –pid=PID指定监测的进程/线程<br>u USER, –user=USER指定监测某个用户产生的I/O<br>P, –processes仅显示进程，默认iotop显示所有线程<br>a, –accumulated显示累积的I/O，而不是带宽<br>k, –kilobytes使用kB单位，而不是对人友好的单位。在非交互模式下，脚本<br>编程有用<br>-t, –time 加上时间戳，非交互非模式<br>q, –quiet 禁止头几行，非交互模式，有三种指定方式<br>-q 只在第一次监测时显示列名<br>-qq 永远不显示列名<br>-qqq 永远不显示I/O汇总<br>交互按键<br>left和right方向键：改变排序<br>r：反向排序<br>o：切换至选项–only<br>p：切换至–processes选项<br>a：切换至–accumulated选项<br>q：退出<br>i：改变线程的优先级</p><p>lsof<br>lsof：list open files查看当前系统文件的工具。在linux环境下，一切皆文件，<br>用户通过文件不仅可以访问常规数据，还可以访问网络连接和硬件如传输控制<br>协议 (TCP) 和用户数据报协议 (UDP)套接字等，系统在后台都为该应用程序分<br>配了一个文件描述符<br>命令参数<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">lsof</span><br><span class="line">-a：列出打开文件存在的进程</span><br><span class="line">-c&lt;进程名&gt;：列出指定进程所打开的文件</span><br><span class="line">-g：列出GID号进程详情</span><br><span class="line">-d&lt;文件号&gt;：列出占用该文件号的进程</span><br><span class="line">+d&lt;目录&gt;：列出目录下被打开的文件</span><br><span class="line">+D&lt;目录&gt;：递归列出目录下被打开的文件</span><br><span class="line">-n&lt;目录&gt;：列出使用NFS的文件</span><br><span class="line">-i&lt;条件&gt;：列出符合条件的进程(4、6、协议、:端口、 @ip )</span><br><span class="line">-p&lt;进程号&gt;：列出指定进程号所打开的文件</span><br><span class="line">-u：列出UID号进程详情</span><br><span class="line">-h：显示帮助信息</span><br><span class="line">-v：显示版本信息。</span><br><span class="line">-n: 不反向解析网络名字</span><br><span class="line">lsof /dev/pts/0   <span class="comment">#查看由系统启动的进程  0改为1是看用户的进程</span></span><br><span class="line">指定进程号，可以查看该进程打开的文件</span><br><span class="line">lsof -p 9527</span><br><span class="line">文件管理</span><br><span class="line">查看指定程序打开的文件</span><br><span class="line">lsof -c httpd</span><br><span class="line">查看指定用户打开的文件</span><br><span class="line">lsof -u root | more</span><br><span class="line">查看指定目录下被打开的文件</span><br><span class="line">lsof +D /var/<span class="built_in">log</span>/</span><br><span class="line">lsof +d /var/<span class="built_in">log</span>/</span><br><span class="line">参数+D为递归列出目录下被打开的文件，参数+d为列出目录下被打开的文件</span><br></pre></td></tr></table></figure></p><p>例子：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@centos6 ~]<span class="comment">#lsof /dev/pts/0</span></span><br><span class="line">COMMAND   PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME</span><br><span class="line">bash    27075 root    0u   CHR  136,0      0t0    3 /dev/pts/0</span><br><span class="line">bash    27075 root    1u   CHR  136,0      0t0    3 /dev/pts/0</span><br><span class="line">bash    27075 root    2u   CHR  136,0      0t0    3 /dev/pts/0</span><br><span class="line">bash    27075 root  255u   CHR  136,0      0t0    3 /dev/pts/0</span><br><span class="line">lsof    37913 root    0u   CHR  136,0      0t0    3 /dev/pts/0</span><br><span class="line">lsof    37913 root    1u   CHR  136,0      0t0    3 /dev/pts/0</span><br><span class="line">lsof    37913 root    2u   CHR  136,0      0t0    3 /dev/pts/0</span><br><span class="line"></span><br><span class="line">lsof -i :22 <span class="comment">#查询22端口被哪个进程占用</span></span><br><span class="line">例子：</span><br><span class="line"></span><br><span class="line">lsof -i :22</span><br><span class="line">COMMAND   PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME</span><br><span class="line">sshd     1932 root    3u  IPv4  12343      0t0  TCP *:ssh (LISTEN)</span><br><span class="line">sshd     1932 root    4u  IPv6  12345      0t0  TCP *:ssh (LISTEN)</span><br><span class="line">sshd    27073 root    3r  IPv4  39440      0t0  TCP 192.168.34.128:ssh-&gt;192.168.34.1:54867 (ESTABLISHED)</span><br></pre></td></tr></table></figure></p><p>进程管理工具kill<br>kill命令：向进程发送控制信号，以实现对进程管理,每个信号对应一个数字，信号名称以SIG开头（可省略），不区分大小写<br>显示当前系统可用信号： kill –l 或者 trap -l<br>常用信号：man 7 signal</p><blockquote><p>SIGHUP 无须关闭进程而让其重读配置文件<br>SIGINT 中止正在运行的进程；相当于Ctrl+c<br>SIGQUIT 相当于ctrl+\<br>SIGKILL 强制杀死正在运行的进程<br>SIGTERM 终止正在运行的进程<br>SIGCONT 继续运行<br>SIGSTOP 后台休眠<br>指定信号的方法 : (1) 信号的数字标识：1, 2, 9<br>(2) 信号完整名称：SIGHUP<br>(3) 信号的简写名称：HUP<br>pidof bc 查看计算器的进程号<br>kill ‘pidof bc’ 停止进程<br>按PID：</p></blockquote><p>kill [-SIGNAL] pid …<br>kill –n SIGNAL pid<br>kill –s SIGNAL pid<br>按名称：killall [-SIGNAL] comm…<br>按模式：pkill [options] pattern</p><blockquote><p>-SIGNAL<br>-u uid: effective user，生效者<br>-U uid: real user，真正发起运行命令者<br>-t terminal: 与指定终端相关的进程<br>-l: 显示进程名（pgrep可用）<br>-a: 显示完整格式的进程名（pgrep可用）<br>-P pid: 显示指定进程的子进程</p></blockquote><p>并行执行<br>同时运行多个进程，提高效率<br>方法1<br>vi all.sh<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">f1.sh&amp;</span><br><span class="line">f2.sh&amp;</span><br><span class="line">f3.sh&amp;</span><br><span class="line">方法2</span><br><span class="line">(f1.sh&amp;);(f2.sh&amp;);(f3.sh&amp;)</span><br><span class="line">方法3</span><br><span class="line">&#123; f1.sh&amp; f2.sh&amp; f3.sh&amp; &#125;</span><br></pre></td></tr></table></figure></p><p>例子： 同时ping四个地址<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">ping -c2 127.0.0.1</span><br><span class="line">ping 127.0.0.2</span><br><span class="line">&#125;&amp;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">ping -c2 127.0.0.3</span><br><span class="line">ping 127.0.0.4</span><br><span class="line">&#125;&amp;</span><br></pre></td></tr></table></figure></p><p>例子：<br>并行ping172.18.133网段的254个IP，并输出结果<br><img src="https://img-blog.csdnimg.cn/20181108195422192.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzU1MTE1Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;PS命令基础&quot;&gt;&lt;a href=&quot;#PS命令基础&quot; class=&quot;headerlink&quot; title=&quot;PS命令基础&quot;&gt;&lt;/a&gt;PS命令基础&lt;/h2&gt;
    
    </summary>
    
    
      <category term="L·H" scheme="http://yoursite.com/tags/L%C2%B7H/"/>
    
  </entry>
  
  <entry>
    <title>逻辑卷LVM的管理</title>
    <link href="http://yoursite.com/2018/10/11/%E9%80%BB%E8%BE%91%E5%8D%B7LVM%E7%9A%84%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2018/10/11/逻辑卷LVM的管理/</id>
    <published>2018-10-11T10:18:18.000Z</published>
    <updated>2019-03-23T07:13:09.748Z</updated>
    
    <content type="html"><![CDATA[<h1 id="逻辑卷"><a href="#逻辑卷" class="headerlink" title="逻辑卷"></a>逻辑卷</h1><a id="more"></a><h1 id="1、扩展VG"><a href="#1、扩展VG" class="headerlink" title="1、扩展VG"></a>1、扩展VG</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pvcreate /dev/sdc  将新加的硬盘创建为物理卷</span><br><span class="line">pvs 查询物理卷</span><br><span class="line">vgextend vg0 /dev/sdc  扩展vg0，将sdc加进去</span><br><span class="line">lvextend 通用扩展命令，6，7都可以用</span><br></pre></td></tr></table></figure><h1 id="2、缩减-LVM"><a href="#2、缩减-LVM" class="headerlink" title="2、缩减 LVM"></a>2、缩减 LVM</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1 umount /mnt/mysql        卸载逻辑卷</span><br><span class="line"></span><br><span class="line">2 fsck -f /dev/vg0/lv_mysql  检查系统的完整性</span><br><span class="line"></span><br><span class="line">3 resize2fs /dev/vg0/lv_mysql 20G  缩减到20G</span><br><span class="line"></span><br><span class="line">4 lvreduce -L 20 /dev/vg0/lv_mysql  缩减逻辑卷到20G</span><br><span class="line"></span><br><span class="line">5 mount /dev/vg0/lv_mysql /mnt/mysql  挂载逻辑卷</span><br></pre></td></tr></table></figure><h1 id="实验：扩展-LVM"><a href="#实验：扩展-LVM" class="headerlink" title="实验：扩展*LVM"></a>实验：扩展<strong><strong>*</strong></strong>LVM</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1 vgdisplay 查看VG有空闲空间</span><br><span class="line"></span><br><span class="line">2 lvextend -l +100%FREE /dev/vg0/lv_mysql</span><br><span class="line"></span><br><span class="line">3 resize2fs /dev/vg0/lv_mysql</span><br><span class="line"></span><br><span class="line">2，3合并成lvextend</span><br><span class="line">lvextend -r -L  5G /dev/vg0/lv_data  </span><br><span class="line"></span><br><span class="line">4 df</span><br></pre></td></tr></table></figure><h1 id="实验：创建LVM"><a href="#实验：创建LVM" class="headerlink" title="实验：创建LVM"></a>实验：创建LVM</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">fdisk t 8e /dev/sda6  /dev/sdc  创建分区并t修改格式为8e</span><br><span class="line"> </span><br><span class="line">pvcreate /dev/sda6  /dev/sdc   创建物理卷</span><br><span class="line"></span><br><span class="line">vgcreate vg0 /dev/sda6  /dev/sdc   添加两个物理卷到卷组vg0</span><br><span class="line"></span><br><span class="line">lvcreate -n lv_mysql -L 15G vg0     从卷组中分出15G创建逻辑卷</span><br><span class="line"></span><br><span class="line">mkfs.ext4 /dev/vg0/lv_mysql   创建文件系统</span><br><span class="line"></span><br><span class="line">mkdir /mnt/mysql    创建挂载点</span><br><span class="line"></span><br><span class="line">mount /dev/vg0/lv_mysql /mnt/mysql   挂载逻辑卷</span><br></pre></td></tr></table></figure><h1 id="实验：迁移逻辑卷LVM中的PE"><a href="#实验：迁移逻辑卷LVM中的PE" class="headerlink" title="实验：迁移逻辑卷LVM中的PE"></a>实验：迁移逻辑卷LVM中的PE</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pvmove /dev/sda6  将逻辑卷中的被占用PE迁移到其他逻辑卷</span><br><span class="line">vgreduce vg0/dev/sda6  将逻辑卷从卷组vg0中删除</span><br><span class="line">fdisk /dev/sda6 删除分区sda6</span><br><span class="line">vgrename vg0 vg1 将卷组改名为vg1</span><br></pre></td></tr></table></figure><h1 id="实验：ext-LV的快照-并恢复"><a href="#实验：ext-LV的快照-并恢复" class="headerlink" title="实验：ext LV的快照,并恢复"></a>实验：ext LV的快照,并恢复</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lvcreate -n lv_data_snap -p r  -s -L 1G /dev/vg0/lv_data</span><br><span class="line">mount -o  /dev/vg0/lv_data_snap /mnt/snap/</span><br><span class="line">umount /mnt/data</span><br><span class="line">umount /mnt/snap/</span><br><span class="line">lvconvert  --merge /dev/vg0/lv_data_snap</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;逻辑卷&quot;&gt;&lt;a href=&quot;#逻辑卷&quot; class=&quot;headerlink&quot; title=&quot;逻辑卷&quot;&gt;&lt;/a&gt;逻辑卷&lt;/h1&gt;
    
    </summary>
    
    
      <category term="L·H" scheme="http://yoursite.com/tags/L%C2%B7H/"/>
    
  </entry>
  
  <entry>
    <title>实验：增加一块新硬盘，分区，创建文件系统XFS|EXT4，并挂载</title>
    <link href="http://yoursite.com/2018/10/09/%E5%AE%9E%E9%AA%8C%EF%BC%9A%E5%A2%9E%E5%8A%A0%E4%B8%80%E5%9D%97%E6%96%B0%E7%A1%AC%E7%9B%98%EF%BC%8C%E5%88%86%E5%8C%BA%EF%BC%8C%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9FXFS,EXT4%EF%BC%8C%E5%B9%B6%E6%8C%82%E8%BD%BD/"/>
    <id>http://yoursite.com/2018/10/09/实验：增加一块新硬盘，分区，创建文件系统XFS,EXT4，并挂载/</id>
    <published>2018-10-09T10:18:18.000Z</published>
    <updated>2018-11-08T13:07:17.344Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实验：增加一块新硬盘，分区，创建文件系统XFS-EXT4，并挂载"><a href="#实验：增加一块新硬盘，分区，创建文件系统XFS-EXT4，并挂载" class="headerlink" title="实验：增加一块新硬盘，分区，创建文件系统XFS|EXT4，并挂载"></a>实验：增加一块新硬盘，分区，创建文件系统XFS|EXT4，并挂载</h1><hr><p>VMware中添加一块200G硬盘，重启虚拟机<br>输入lsblk查看多了一个sdb 硬盘<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/sdb</span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): m</span><br><span class="line">Command action</span><br><span class="line">   a   toggle a bootable flag</span><br><span class="line">   b   edit bsd disklabel</span><br><span class="line">   c   toggle the dos compatibility flag</span><br><span class="line">   d   delete a partition                                  删除一个分区</span><br><span class="line">   g   create a new empty GPT partition table</span><br><span class="line">   G   create an IRIX (SGI) partition table</span><br><span class="line">   l   list known partition types</span><br><span class="line">   m   <span class="built_in">print</span> this menu</span><br><span class="line">   n   add a new partition                                 创建一个分区</span><br><span class="line">   o   create a new empty DOS partition table</span><br><span class="line">   p   <span class="built_in">print</span> the partition table                          查看分区信息</span><br><span class="line">   q   quit without saving changes</span><br><span class="line">   s   create a new empty Sun disklabel</span><br><span class="line">   t   change a partition<span class="string">'s system id</span></span><br><span class="line"><span class="string">   u   change display/entry units</span></span><br><span class="line"><span class="string">   v   verify the partition table</span></span><br><span class="line"><span class="string">   w   write table to disk and exit                        保存写入分区操作信息，不按w分区不保存</span></span><br><span class="line"><span class="string">   x   extra functionality (experts only)</span></span><br><span class="line"><span class="string">按m进入交互式操作</span></span><br><span class="line"><span class="string">按n新建一个分区，如下</span></span><br><span class="line"><span class="string">Command (m for help): n</span></span><br><span class="line"><span class="string">Partition type:</span></span><br><span class="line"><span class="string">   p   primary (0 primary, 0 extended, 4 free)       主分区</span></span><br><span class="line"><span class="string">   e   extended                                      扩展分区</span></span><br><span class="line"><span class="string">Select (default p): p</span></span><br><span class="line"><span class="string">Partition number (1-4, default 1): 1                  分区编号</span></span><br><span class="line"><span class="string">First sector (2048-41943039, default 2048): </span></span><br><span class="line"><span class="string">Using default value 2048</span></span><br><span class="line"><span class="string">Last sector, +sectors or +size&#123;K,M,G&#125; (2048-41943039, default 41943039): +50G      分区大小            </span></span><br><span class="line"><span class="string">Partition 1 of type Linux and of size 1 GiB is set</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Command (m for help): p                                             显示分区信息</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Disk /dev/sdb: 21.5 GB, 21474836480 bytes, 41943040 sectors</span></span><br><span class="line"><span class="string">Units = sectors of 1 * 512 = 512 bytes</span></span><br><span class="line"><span class="string">Sector size (logical/physical): 512 bytes / 512 bytes</span></span><br><span class="line"><span class="string">I/O size (minimum/optimal): 512 bytes / 512 bytes</span></span><br><span class="line"><span class="string">Disk label type: dos</span></span><br><span class="line"><span class="string">Disk identifier: 0x1cc76008</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   Device Boot      Start         End      Blocks   Id  System</span></span><br><span class="line"><span class="string">/dev/sdb1            2048     2099199     1048576   83  Linux</span></span><br><span class="line"><span class="string">然后按w保存分区信息**************************</span></span><br></pre></td></tr></table></figure></p><p>分区完成<br>若lsblk后没有新建的分区，可以输入partx -a /dev/sdb  来通知内核重新读取分区表  或者输入partprobe 进行分区同步</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;实验：增加一块新硬盘，分区，创建文件系统XFS-EXT4，并挂载&quot;&gt;&lt;a href=&quot;#实验：增加一块新硬盘，分区，创建文件系统XFS-EXT4，并挂载&quot; class=&quot;headerlink&quot; title=&quot;实验：增加一块新硬盘，分区，创建文件系统XFS|EXT4
      
    
    </summary>
    
    
      <category term="L·H" scheme="http://yoursite.com/tags/L%C2%B7H/"/>
    
  </entry>
  
  <entry>
    <title>实验：迁移/home目录到新分区中</title>
    <link href="http://yoursite.com/2018/10/07/%E5%AE%9E%E9%AA%8C%EF%BC%9A%E8%BF%81%E7%A7%BBhome%E7%9B%AE%E5%BD%95%E5%88%B0%E6%96%B0%E5%88%86%E5%8C%BA%E4%B8%AD/"/>
    <id>http://yoursite.com/2018/10/07/实验：迁移home目录到新分区中/</id>
    <published>2018-10-07T10:18:18.000Z</published>
    <updated>2018-11-08T13:07:05.879Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实验：迁移-home目录到新分区中"><a href="#实验：迁移-home目录到新分区中" class="headerlink" title="实验：迁移/home目录到新分区中"></a>实验：迁移/home目录到新分区中</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#先添加一块新的硬盘，重启虚拟机</span></span><br><span class="line">lsblk看到新硬盘为sdc</span><br><span class="line">fdisk /dev/sdc  新建一个分区sdc1</span><br><span class="line">blkid</span><br><span class="line">mkfs.xfs /dev/sdc1  创建文件系统</span><br><span class="line">mkdir /mnt/home  创建新的挂载点</span><br><span class="line">mount /dev/sdc1 /mnt/home  将光盘进行挂载</span><br><span class="line">cp -av /home/. /mnt/home 将原来home下的所有文件复制到/mnt/home下</span><br><span class="line">ll mnt/home</span><br><span class="line">du -sh /mnt/home</span><br><span class="line">du -sh /home   比较两文件夹的大小，看复制是否完整</span><br><span class="line">vim /etc/fstab 命令模式下写入:r!blkid /dev/sdc1 修改后按wq保存退出</span><br><span class="line">mount -a 使挂载生效</span><br><span class="line">df -h   查看占用</span><br><span class="line">umount /home 取消挂载</span><br><span class="line">rm -rf /home/* 删除home中的文件</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;实验：迁移-home目录到新分区中&quot;&gt;&lt;a href=&quot;#实验：迁移-home目录到新分区中&quot; class=&quot;headerlink&quot; title=&quot;实验：迁移/home目录到新分区中&quot;&gt;&lt;/a&gt;实验：迁移/home目录到新分区中&lt;/h1&gt;&lt;figure class
      
    
    </summary>
    
    
      <category term="L·H" scheme="http://yoursite.com/tags/L%C2%B7H/"/>
    
  </entry>
  
  <entry>
    <title>磁盘及文件系统分区</title>
    <link href="http://yoursite.com/2018/10/06/%E7%A3%81%E7%9B%98%E5%8F%8A%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%88%86%E5%8C%BA/"/>
    <id>http://yoursite.com/2018/10/06/磁盘及文件系统分区/</id>
    <published>2018-10-06T10:18:18.000Z</published>
    <updated>2019-03-23T06:39:21.842Z</updated>
    
    <content type="html"><![CDATA[<h1 id="磁盘储存"><a href="#磁盘储存" class="headerlink" title="磁盘储存"></a>磁盘储存</h1><a id="more"></a><p>设备类型：<br>块设备：block，存取单位“块”，磁盘<br>字符设备：char，存取单位“字符”，键盘</p><h3 id="机械硬盘和固态硬盘"><a href="#机械硬盘和固态硬盘" class="headerlink" title="机械硬盘和固态硬盘"></a>机械硬盘和固态硬盘</h3><p><strong>机械硬盘（HDD）：</strong><br>&emsp;Hard Disk Drive，即是传统普通硬盘，主要由：盘片，磁头，盘片转轴及控制电机，磁头控制器，数据转换器，接口，缓存等几个部分组成。机械硬盘中所有的盘片都装在一个旋转轴上，每张盘片之间是平行的，在每个盘片的存储面上有一个磁头，磁头与盘片之间的距离比头发丝的直径还小，所有的磁头联在一个磁头控制器上，由磁头控制器负责各个磁头的运动。磁头可沿盘片的半径方向运动，加上盘片每分钟几千转的高速旋转，磁头就可以定位在盘片的指定位置上进行数据的读写操作。数据通过磁头由电磁流来改变极性方式被电磁流写到磁盘上，也可以通过相反方式读取。硬盘为精密设备，进入硬盘的空气必须过滤<br><strong>固态硬盘（SSD）</strong>：<br>&emsp;Solid State Drive，用固态电子存储芯片阵列而制成的硬盘，由控制单元和存储单元（FLASH芯片、DRAM芯片）组成。固态硬盘在接口的规范和定义、功能及使用方法上与普通硬盘的完全相同，在产品外形和尺寸上也与普通硬盘一致<br>相较于HDD，SSD在防震抗摔、传输速率、功耗、重量、噪音上有明显优势，SSD传输速率性能是HDD的2倍<br>相较于SSD，HDD在价格、容量、使用寿命上占有绝对优势<br>硬盘有价，数据无价，目前SSD不能完全取代HHD</p><p><strong>设备文件</strong><br>磁盘设备的设备文件命名：</p><blockquote><p>/dev/DEV_FILE<br>SCSI, SATA, SAS,IDE,USB: /dev/sd<br>虚拟磁盘：/dev/vd<br>不同磁盘标识：a-z,aa,ab…<br>/dev/sda, /dev/sdb, …<br>同一设备上的不同分区：1,2, …<br>/dev/sda1, /dev/sda5<br>硬盘存储术语<br>head：磁头<br>track：磁道<br>cylinder: 柱面<br>sector: 扇区，512bytes</p></blockquote><p><strong>分区</strong><br>两种分区方式：MBR，GPT</p><blockquote><p>MBR: Master Boot Record，1982年，使用32位表示扇区数，分区不超过2T<br>如何分区：按柱面<br>0磁道0扇区：512bytes<br>446bytes: boot loader<br>64bytes：分区表，其中每16bytes标识一个分区<br>2bytes: 55AA<br>4个主分区；3主分区+1扩展(N个逻辑分区)</p></blockquote><p><strong>MBR分区结构</strong></p><p>&emsp;硬盘主引导记录MBR由4个部分组成:</p><ol><li>主引导程序（偏移地址0000H–0088H），它负责从活动分区中装载，并运行系统引导程序</li><li>出错信息数据区，偏移地址0089H–00E1H为出错信息，00E2H–01BDH全为0字节</li><li>分区表（DPT,Disk Partition Table）含4个分区项，偏移地址01BEH–01FDH,每个分区表项长16个字节，共64字节为分区项1、分区项2、分区项3、分区项4</li><li>结束标志字，偏移地址01FE–01FF的2个字节值为结束标志55AA</li></ol><p><strong>GPT分区</strong></p><p>GPT:GUID（Globals Unique Identifiers）partition table 支持128个分区，使用64位，支持8Z（512Byte/block ）64Z （4096Byte/block）<br>使用128位UUID(Universally Unique Identifier) 表示磁盘和分区GPT分区表自动备份在头和尾两份，并有CRC校验位<br>UEFI (统一扩展固件接口)硬件支持GPT，使操作系统启动</p><p><strong>管理分区</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">列出块设备</span><br><span class="line">•lsblk</span><br><span class="line">创建分区使用：</span><br><span class="line">•fdisk创建MBR分区</span><br><span class="line">•gdisk创建GPT分区</span><br><span class="line">•parted高级分区操作</span><br><span class="line">重新设置内存中的内核分区表版本</span><br><span class="line">•partprobe</span><br></pre></td></tr></table></figure></p><p>parted命令</p><p>parted的操作都是<strong>实时生效</strong>的，小心使用<br>用法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">parted [选项]... [设备[命令[参数]...]...]</span><br><span class="line">parted /dev/sdbmklabelgpt|msdos</span><br><span class="line">parted /dev/sdbprint</span><br><span class="line">parted /dev/sdbmkpartprimary 1 200 （默认M）</span><br><span class="line">parted /dev/sdbrm1</span><br><span class="line">parted –l 列出分区信息</span><br></pre></td></tr></table></figure></p><h1 id="分区工具fdisk和gdisk"><a href="#分区工具fdisk和gdisk" class="headerlink" title="分区工具fdisk和gdisk"></a>分区工具fdisk和gdisk</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">gdisk/dev/sdb类fdisk的GPT分区工具</span><br><span class="line">fdisk<span class="_">-l</span> [-u] [device...] 查看分区</span><br><span class="line">fdisk/dev/sdb管理分区</span><br><span class="line">子命令：</span><br><span class="line">p 分区列表</span><br><span class="line">t 更改分区类型</span><br><span class="line">n 创建新分区</span><br><span class="line">d 删除分区</span><br><span class="line">v 校验分区</span><br><span class="line">u 转换单位</span><br><span class="line">w 保存并退出</span><br><span class="line">q 不保存并退出</span><br></pre></td></tr></table></figure><p>同步分区表</p><p>查看内核是否已经识别新的分区<br>cat /proc/partations<br>centos6通知内核重新读取硬盘分区表<br>新增分区用<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">partx -a /dev/DEVICE</span><br><span class="line">kpartx -a /dev/DEVICE -f: force</span><br></pre></td></tr></table></figure></p><p>删除分区用<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">partx<span class="_">-d</span> --nrM-N /dev/DEVICE</span><br><span class="line">CentOS 5，7: 使用partprobe</span><br><span class="line">partprobe[/dev/DEVICE]</span><br></pre></td></tr></table></figure></p><h2 id="文件系统类型"><a href="#文件系统类型" class="headerlink" title="文件系统类型"></a>文件系统类型</h2><p>Linux文件系统：</p><ol><li>ext2(Extended file system) :适用于那些分区容量不是太大，更新也不频繁的情况，例如/boot 分区</li><li>ext3:是ext2 的改进版本，其支持日志功能，能够帮助系统从非正常关机导致的异常中恢复。它通常被用作通用的文件系统</li><li>ext4:是ext 文件系统的最新版。提供了很多新的特性，包括纳秒级时间戳、创建和使用巨型文件(16TB)、最大1EB的文件系统，以及速度的提升<blockquote><p>xfs：SGI，支持最大8EB的文件系统<br>btrfs（Oracle）, reiserfs, jfs（AIX）, swap<br>光盘：iso9660<br>Windows：FAT32, exFAT,NTFS<br>Unix: FFS（fast）, UFS（unix）, JFS2<br>网络文件系统：NFS, CIFS<br>集群文件系统：GFS2, OCFS2（oracle）<br>分布式文件系统：fastdfs,ceph, moosefs, mogilefs, glusterfs, Lustre<br>RAW：未经处理或者未经格式化产生的文件系统</p></blockquote></li></ol><h2 id="文件系统分类"><a href="#文件系统分类" class="headerlink" title="文件系统分类"></a>文件系统分类</h2><p>根据其是否支持”journal”功能：<br>日志型文件系统: ext3, ext4, xfs, …<br>非日志型文件系统: ext2, vfat<br>文件系统的组成部分：<br>内核中的模块：ext4, xfs, vfat<br>用户空间的管理工具：mkfs.ext4, mkfs.xfs,mkfs.vfat<br>Linux的虚拟文件系统：VFS<br>查前支持的文件系统：cat /proc/filesystems</p><h2 id="创建ext文件系统"><a href="#创建ext文件系统" class="headerlink" title="创建ext文件系统"></a>创建ext文件系统</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mke2fs：ext系列文件系统专用管理工具</span><br><span class="line">-t &#123;ext2|ext3|ext4&#125; 指定文件系统类型</span><br><span class="line">-b &#123;1024|2048|4096&#125; 指定块大小</span><br><span class="line">-L ‘LABEL’ 设置卷标</span><br><span class="line">-j相当于-t ext3</span><br><span class="line">mkfs.ext3 = mkfs-t ext3 = mke2fs -j = mke2fs -t ext3</span><br><span class="line">-i<span class="comment">#为数据空间中每多少个字节创建一个inode；不应该小于block大小</span></span><br><span class="line">-N <span class="comment">#指定分区中创建多少个inode</span></span><br><span class="line">-I 一个inode记录占用的磁盘空间大小，128---4096</span><br><span class="line">-m <span class="comment">#默认5%,为管理人员预留空间占总空间的百分比</span></span><br><span class="line">-O FEATURE[,...]启用指定特性</span><br><span class="line">-O ^FEATURE关闭指定特性</span><br><span class="line">tune2fs -l /dev/sdb1|less   查看文件系统的元数据</span><br><span class="line">dumpe2fs /dev/sdb1|less     查看文件系统的元数据</span><br><span class="line">Filesystem features: has_journal        journal说明该文件系统有日志功能</span><br><span class="line">日志型文件系统: ext3, ext4, xfs, ...</span><br><span class="line">非日志型文件系统: ext2, vfat</span><br><span class="line">Filesystem state: clean         noclean 时说明文件系统出问题</span><br><span class="line">findfs LABEL=&lt;label&gt;|  UUID=&lt;uuid&gt; 如：findfs UUID=6ec4348f-8835-4521-9285-23bc242b6243 查找分区</span><br></pre></td></tr></table></figure><h2 id="文件系统标签"><a href="#文件系统标签" class="headerlink" title="文件系统标签"></a>文件系统标签</h2><p>指向设备的另一种方法<br>与设备无关<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">blkid：块设备属性信息查看</span><br><span class="line">blkid[OPTION]... [DEVICE]</span><br><span class="line">-U UUID根据指定的UUID来查找对应的设备</span><br><span class="line">-L LABEL根据指定的LABEL来查找对应的设备</span><br><span class="line">e2label：管理ext系列文件系统的LABEL</span><br><span class="line">e2label DEVICE [LABEL]</span><br><span class="line">findfs：查找分区</span><br><span class="line">findfs[options] LABEL=&lt;label&gt;</span><br><span class="line">findfs[options] UUID=&lt;uuid&gt;</span><br></pre></td></tr></table></figure></p><p>tune2fs<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">tune2fs：重新设定ext系列文件系统可调整参数的值</span><br><span class="line">-l查看指定文件系统超级块信息；super block</span><br><span class="line">-L <span class="string">'LABEL‘修改卷标</span></span><br><span class="line"><span class="string">-m #修预留给管理员的空间百分比</span></span><br><span class="line"><span class="string">-j将ext2升级为ext3</span></span><br><span class="line"><span class="string">-O文件系统属性启用或禁用,–O ^has_journal</span></span><br><span class="line"><span class="string">-o调整文件系统的默认挂载选项，–o ^acl</span></span><br><span class="line"><span class="string">-U UUID修改UUID号</span></span><br><span class="line"><span class="string">dumpe2fs：</span></span><br><span class="line"><span class="string">块分组管理，32768块</span></span><br><span class="line"><span class="string">-h：查看超级块信息，不显示分组信息</span></span><br></pre></td></tr></table></figure></p><h2 id="文件系统检测和修复"><a href="#文件系统检测和修复" class="headerlink" title="文件系统检测和修复"></a>文件系统检测和修复</h2><p>常发生于死机或者非正常关机之后<br>挂载为文件系统标记为“no clean”<br>注意：<strong>一定不要在挂载状态下修复</strong><br>fsck: File System Check<br>fsck.FS_TYPE<br>fsck -t FS_TYPE</p><p>-p自动修复错误<br>-r交互式修复错误<br>FS_TYPE一定要与分区上已经文件类型相同<br>e2fsck：ext系列文件专用的检测修复工具<br>-y自动回答为yes<br>-f强制修复</p><h1 id="实验：增加一块新硬盘，分区，创建文件系统XFS-EXT4，并挂载"><a href="#实验：增加一块新硬盘，分区，创建文件系统XFS-EXT4，并挂载" class="headerlink" title="实验：增加一块新硬盘，分区，创建文件系统XFS|EXT4，并挂载"></a>实验：增加一块新硬盘，分区，创建文件系统XFS|EXT4，并挂载</h1><hr><p>VMware中添加一块200G硬盘，重启虚拟机<br>输入lsblk查看多了一个sdb 硬盘<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/sdb</span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): m</span><br><span class="line">Command action</span><br><span class="line">   a   toggle a bootable flag</span><br><span class="line">   b   edit bsd disklabel</span><br><span class="line">   c   toggle the dos compatibility flag</span><br><span class="line">   d   delete a partition                                  删除一个分区</span><br><span class="line">   g   create a new empty GPT partition table</span><br><span class="line">   G   create an IRIX (SGI) partition table</span><br><span class="line">   l   list known partition types</span><br><span class="line">   m   <span class="built_in">print</span> this menu</span><br><span class="line">   n   add a new partition                                 创建一个分区</span><br><span class="line">   o   create a new empty DOS partition table</span><br><span class="line">   p   <span class="built_in">print</span> the partition table                          查看分区信息</span><br><span class="line">   q   quit without saving changes</span><br><span class="line">   s   create a new empty Sun disklabel</span><br><span class="line">   t   change a partition<span class="string">'s system id</span></span><br><span class="line"><span class="string">   u   change display/entry units</span></span><br><span class="line"><span class="string">   v   verify the partition table</span></span><br><span class="line"><span class="string">   w   write table to disk and exit                        保存写入分区操作信息，不按w分区不保存</span></span><br><span class="line"><span class="string">   x   extra functionality (experts only)</span></span><br><span class="line"><span class="string">按m进入交互式操作</span></span><br><span class="line"><span class="string">按n新建一个分区，如下</span></span><br><span class="line"><span class="string">Command (m for help): n</span></span><br><span class="line"><span class="string">Partition type:</span></span><br><span class="line"><span class="string">   p   primary (0 primary, 0 extended, 4 free)       主分区</span></span><br><span class="line"><span class="string">   e   extended                                      扩展分区</span></span><br><span class="line"><span class="string">Select (default p): p</span></span><br><span class="line"><span class="string">Partition number (1-4, default 1): 1                  分区编号</span></span><br><span class="line"><span class="string">First sector (2048-41943039, default 2048): </span></span><br><span class="line"><span class="string">Using default value 2048</span></span><br><span class="line"><span class="string">Last sector, +sectors or +size&#123;K,M,G&#125; (2048-41943039, default 41943039): +50G      分区大小            </span></span><br><span class="line"><span class="string">Partition 1 of type Linux and of size 1 GiB is set</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Command (m for help): p                                             显示分区信息</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Disk /dev/sdb: 21.5 GB, 21474836480 bytes, 41943040 sectors</span></span><br><span class="line"><span class="string">Units = sectors of 1 * 512 = 512 bytes</span></span><br><span class="line"><span class="string">Sector size (logical/physical): 512 bytes / 512 bytes</span></span><br><span class="line"><span class="string">I/O size (minimum/optimal): 512 bytes / 512 bytes</span></span><br><span class="line"><span class="string">Disk label type: dos</span></span><br><span class="line"><span class="string">Disk identifier: 0x1cc76008</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   Device Boot      Start         End      Blocks   Id  System</span></span><br><span class="line"><span class="string">/dev/sdb1            2048     2099199     1048576   83  Linux</span></span><br><span class="line"><span class="string">然后按w保存分区信息**************************</span></span><br></pre></td></tr></table></figure></p><p>分区完成<br>若lsblk后没有新建的分区，可以输入partx -a /dev/sdb  来通知内核重新读取分区表  或者输入partprobe 进行分区同步</p><h2 id="挂载mount"><a href="#挂载mount" class="headerlink" title="挂载mount"></a>挂载mount</h2><p>挂载:将额外文件系统与根文件系统某现存的目录建立起关联关系，进而使得此目录做为其它文件访问入口的行为<br>卸载:为解除此关联关系的过程<br>把设备关联挂载点：mount Point<br>mount<br>卸载时：可使用设备，也可以使用挂载点<br>umount<br>挂载点下原有文件在挂载完成后会被临时隐藏<br>挂载点目录一般为空</p><p>用mount命令挂载文件系统<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#挂载方法：</span></span><br><span class="line">mount DEVICE MOUNT_POINT</span><br><span class="line">mount 通过查看/etc/mtab文件显示当前已挂载的所有设备</span><br><span class="line">mount [-fnrsvw] [-t vfstype] [-o options] device dir</span><br></pre></td></tr></table></figure></p><p>device：指明要挂载的设备；</p><blockquote><p>(1) 设备文件：例如/dev/sda5<br>(2) 卷标：-L ‘LABEL’, 例如-L ‘MYDATA’<br>(3) UUID, -U ‘UUID’：例如-U ‘0c50523c-43f1-45e7-85c0-a126711d406e’<br>(4) 伪文件系统名称：proc, sysfs, devtmpfs, configfs<br>dir：挂载点<br>事先存在；建议使用空目录<br>进程正在使用中的设备无法被卸载</p></blockquote><p>mount常用命令选项<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mount</span><br><span class="line">-t vsftype指定要挂载的设备上的文件系统类型</span><br><span class="line">-rreadonly，只读挂载</span><br><span class="line">-wread and write, 读写挂载</span><br><span class="line">-n不更新/etc/mtab，mount不可见</span><br><span class="line">-a自动挂载所有支持自动挂载的设备(定义在了/etc/fstab文件中，且挂载选项中有auto功能)</span><br><span class="line">-L <span class="string">'LABEL'</span> 以卷标指定挂载设备</span><br><span class="line">-U <span class="string">'UUID'</span> 以UUID指定要挂载的设备</span><br><span class="line">-B, --<span class="built_in">bind</span>绑定目录到另一个目录上</span><br></pre></td></tr></table></figure></p><p>查看内核追踪到的已挂载的所有设备<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/mounts</span><br><span class="line">-o options：(挂载文件系统的选项)，多个选项使用逗号分隔</span><br><span class="line">.&gt;async  异步模式sync同步模式,内存更改时，同时写磁盘</span><br><span class="line">atime/noatime   包含目录和文件</span><br><span class="line">diratime/nodiratime  目录的访问时间戳</span><br><span class="line">auto/noauto   是否支持自动挂载,是否支持-a选项</span><br><span class="line"><span class="built_in">exec</span>/noexec  是否支持将文件系统上运行应用程序</span><br><span class="line">dev/nodev   是否支持在此文件系统上使用设备文件</span><br><span class="line">suid/nosuid   是否支持suid和sgid权限</span><br><span class="line">remount   重新挂载</span><br><span class="line">ro只读rw读写</span><br><span class="line">user/nouser  是否允许普通用户挂载此设备，/etc/fstab使用</span><br><span class="line">acl  启用此文件系统上的acl功能</span><br><span class="line">loop  使用loop设备</span><br><span class="line">defaults：相当于rw, suid, dev, <span class="built_in">exec</span>, auto, nouser, async</span><br></pre></td></tr></table></figure></p><h2 id="查询设备"><a href="#查询设备" class="headerlink" title="查询设备"></a>查询设备</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#blkid 查询各个设备UUID</span></span><br><span class="line">mount -U <span class="string">'UUID'</span> 加挂载点  挂载设备</span><br><span class="line">umount /mnt/sdb1  卸载挂载设备sdb1（无占用）  </span><br><span class="line">lsof /mnt/sdb1   有用户占用时，查询sdb1占用进程和用户</span><br><span class="line">fuser -km /mnt/sdb1  结束sdb1的所有占用</span><br><span class="line">cat /proc/mounts 查询所有的挂载点</span><br><span class="line">umount -o remount +挂载点 重新挂载，某些设备不能取消挂载</span><br></pre></td></tr></table></figure><h1 id="实验：迁移-home目录到新分区中"><a href="#实验：迁移-home目录到新分区中" class="headerlink" title="实验：迁移/home目录到新分区中"></a>实验：迁移/home目录到新分区中</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#先添加一块新的硬盘，重启虚拟机</span></span><br><span class="line">lsblk看到新硬盘为sdc</span><br><span class="line">fdisk /dev/sdc  新建一个分区sdc1</span><br><span class="line">blkid</span><br><span class="line">mkfs.xfs /dev/sdc1  创建文件系统</span><br><span class="line">mkdir /mnt/home  创建新的挂载点</span><br><span class="line">mount /dev/sdc1 /mnt/home  将光盘进行挂载</span><br><span class="line">cp -av /home/. /mnt/home 将原来home下的所有文件复制到/mnt/home下</span><br><span class="line">ll mnt/home</span><br><span class="line">du -sh /mnt/home</span><br><span class="line">du -sh /home   比较两文件夹的大小，看复制是否完整</span><br><span class="line">vim /etc/fstab 命令模式下写入:r!blkid /dev/sdc1 修改后按wq保存退出</span><br><span class="line">mount -a 使挂载生效</span><br><span class="line">df -h   查看占用</span><br><span class="line">umount /home 取消挂载</span><br><span class="line">rm -rf /home/* 删除home中的文件</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;磁盘储存&quot;&gt;&lt;a href=&quot;#磁盘储存&quot; class=&quot;headerlink&quot; title=&quot;磁盘储存&quot;&gt;&lt;/a&gt;磁盘储存&lt;/h1&gt;
    
    </summary>
    
    
      <category term="L·H" scheme="http://yoursite.com/tags/L%C2%B7H/"/>
    
  </entry>
  
</feed>
